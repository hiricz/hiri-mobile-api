FORMAT: 1A
HOST: http://gateway.dnajobs.cz/

# Hiri Mobile API

Hiri General API provides general Hiri functionality.
Hiri API is split into 3 separate parts: General Api, Admin Api and Testing API.

### API consumers

API consumers are called "Clients" and they must be registered. Each client
is given an id, name and secret key to access the API. The API can be accessed
by using HTTP Basic Authentication with your username and secret.

Each client is only served the data which belong to it. That means you
can't access other client's resources.

### User authentication

Hiri API Gateway implements OAuth2 standard for authenticating users. 
The users are stored centrally on Auth Server hidden behind the Gateway.

To access the API as a signed in user, you can use the OAuth2 Bearer token.
The API will recognize from which client is the request sent and feed the
data accordingly. You can't access data which were created by the user via
another client.

### Data formats

#### Response formats
Hiri API Gateway uses HATEOAS technology and its responses are in
application/hal+json format.
See http://stateless.co/hal_specification.html.

#### Errors
Any errors are described according to HTTP Problem draft, formatted as application/problem+json.
See https://tools.ietf.org/html/draft-nottingham-http-problem-07.

#### Dates
All dates are served in ISO 8601 format in UTC timezone.
ISO 8601 date formats in any timezone are accepted.

# Group Homepage

## Homepage [/api]

### Visit Homepage [GET]

+ Response 200 (application/hal+json)

        {
            "_links": {
                "candidates": {
                    "href": "/api/candidates"
                },
                "curies": [
                    {
                        "href": "http://hiri.app/rels/{rel}",
                        "name": "hiri",
                        "templated": "true"
                    }
                ],
                "hiri:companies": {
                    "href": "/api/companies"
                },
                "hiri:jobs": {
                    "href": "/api/jobs"
                },
                "hiri:me": {
                    "href": "/api/user/1"
                },
                "hiri:notifications": {
                    "href": "/api/notifications"
                },
                "self": {
                    "href": "/api/"
                }
            },
            "methods": "You can use GET, POST, PUT and DELETE methods to access resources.",
            "pagination": "You can use 'page' and 'limit' query parameters to paginate through collections.",
            "welcome": "Welcome to Hiri App!"
        }

# Group Auth

## Access Tokens [/oauth/token]

Request an access token from the API Gateway by POSTing a Client Credentials OAuth2 request.

Note: If you wish to log in as Candidate, use "candidate" as username and candidate's hash as password.

Authorize as a client by base64 encoding your client name and secret. The value of
the header should be "Authorization: Basic <token>" where token is base64 encoded string "<client>:<secret>".

The received access token is a JWT signed by the server. You can decode it and access additional information.

Warning: Don't forget to send Content-type header with value "application/json" or the server won't understand the data.

In order to refresh a token, set grant type to "refresh_token" and send your "client_id" instead of user's credentials.
Authorize with Basic method, base64 encoding your client id and client secrect.

To access resources, use the retrieved access token in yout HTTP Authorization Header like this: "Authorization: Bearer <access_token>".

### Retrieve Access Token [POST]

+ Request (application/json)

        {
            "grant_type": "password",
            "username": "bob",
            "password": "secret"
        }

+ Response 200 (application/json)

        {
            "access_token": "xxx",
            "refresh_token": "abcd123",
            "token_type": "bearer"
        }

+ Response 400 (application/json)

        {
            "error": "unsupported_grant_type",
            "error_description":"invalid grant type"
        }

+ Request (application/json)

        {
            "grant_type": "refresh_token",
            "refresh_token": "abcd123"
        }
        
+ Response 200 (application/json)

        {
            "access_token": "xxx",
            "token_type": "bearer"
        }


# Group Applications

Application is an entity representing real-world application to a Job Offer.

## Applications Collection [/api/applications?limit={limit}&page={page}&sort={sort}&state={state}]

+ Parameters
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"
    + state (string, optional) - Filters Applications by their state.

### List Applications [GET]

Retrieves list of all Applications.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "applications": [
                    {
                        "id": 1,
                        "created": "2016-02-06T21:19:57+0100",
                        "state": "new",
                        "stars": 0,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/1"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 0,
                                    "number_of_completed_tests": 0,
                                    "last_completed_test_date": null,
                                    "state": "inactive",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 1,
                                "order": 10,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "New",
                                        "cs": "Nov\u00fd"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "created": "2016-02-06T21:19:57+0100",
                        "state": "new",
                        "text": "I wanna be the very best, like noone ever was!",
                        "stars": 0,
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/2"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 2,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/2"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 0,
                                    "number_of_completed_tests": 0,
                                    "last_completed_test_date": null,
                                    "state": "inactive",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 3,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/3"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=3"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 2,
                                "order": 20,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/2"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "Active",
                                        "cs": "Aktivn\u00ed"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 3,
                        "created": "2016-02-06T21:19:57+0100",
                        "state": "new",
                        "stars": 0,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/3"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 0,
                                    "number_of_completed_tests": 0,
                                    "last_completed_test_date": null,
                                    "state": "inactive",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 1,
                                "order": 10,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "New",
                                        "cs": "Nov\u00fd"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }


### Create an Application [POST]

Creates an Application.

+ Request (application/json)

    + Attributes
        + job_offer (number, required) - ID of the Job Offer to which the User is applying.
        + text (string, required) - Text of the Application summarizing the candidate and why hs is suited for the Job.
        + attachments (array, optional) - Attachments of the Application
        + locality (string, optional) - Location of the User.
        + sign_on (string, optional) - When the user can sign on. The values are 'immediate', 'two-weeks', 'month', two-months', 'more-than-two-months'
        + required_salary (number, optional) - Required salary of the User.
        + email (string, optional) - Email of the Applicant. **Note: Required when User is not signed in.**
        + name (string, required) - Name of the Applicant.
        + phone (string, optional) - Phone of the Applicant.
        + linkedin_link (string, optional) - Linkedin Link of the Applicant.
        + why (string, required) - Motivational letter, why the Applicant should be hired.

    + Body

            {
                "job_offer": 1,
                "text": "I wanna be the very best, like noone ever was!",
                "name": "John Doe",
                "phone": "+420123456789",
                "email": "john.doe@example.com",
                "linkedin_link": "https://linkedin.com/abc/123",
                "attachments": [
                  {
                    "link": "http://abc.xyz/1",
                    "description": "CV"
                  },
                  {
                    "link": "http://abc.xyz/2",
                    "description": "Cover letter"
                  }
                ],
                "locality": "Praha",
                "sign_on": "immediate",
                "required_salary": 35000,
                "why": "I am the best!"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 7,
                "created": "2016-02-19T14:44:51+0100",
                "state": "new",
                "text": "I wanna be the very best, like noone ever was!",
                "locality": "Praha",
                "sign_on": "immediate",
                "required_salary": 35000,
                "name": "John Doe",
                "phone": "+420123456789",
                "email": "john.doe@example.com",
                "linkedin_link": "https://linkedin.com/abc/123",
                "_links": {
                    "self": {
                        "href": "\/api\/applications\/7"
                    }
                },
                "_embedded": {
                    "candidate": {
                        "id": 8,
                        "created": "2016-02-19T14:44:51+0100",
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "hash": "ang-r0h-kpf",
                        "avatar": 5,
                        "_links": {
                            "self": {
                                "href": "\/api\/candidates\/8"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            }
                        },
                        "_embedded": {
                            "number_of_tests": 0,
                            "number_of_completed_tests": 0,
                            "last_completed_test_date": null,
                            "state": "inactive",
                            "contacts": []
                        }
                    },
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-02-19T14:44:51+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "companies": {
                                "href": "\/api\/companies?user_id=1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    "job_offer": {
                        "id": 1,
                        "created": "2016-02-19T14:44:51+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offers\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": [],
                            "state": "awaiting-payment",
                            "state_category": "category-waiting",
                            "locations": [],
                            "new_application_mails": ["matej@example.com","filip@example.com"]
                        }
                    },
                    "application_state": {
                        "id": 1,
                        "order": 10,
                        "created": "2016-02-19T14:44:51+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/application-states\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Nov\u00fd",
                                "en": "New"
                            }
                        }
                    },
                    "attachments": [
                        {
                            "id": 5,
                            "link": "http:\/\/abc.xyz\/1",
                            "description": "CV",
                            "_links": {
                                "self": {
                                    "href": "ApplicationAttachments:read"
                                },
                                "application": {
                                    "href": "\/api\/applications"
                                }
                            }
                        },
                        {
                            "id": 6,
                            "link": "http:\/\/abc.xyz\/2",
                            "description": "Cover letter",
                            "_links": {
                                "self": {
                                    "href": "ApplicationAttachments:read"
                                },
                                "application": {
                                    "href": "\/api\/applications"
                                }
                            }
                        }
                    ]
                }
            }
        }

## Company's Applications Collection [/api/companies/{company_id}/applications?limit={limit}&page={page}&sort={sort}&state={state}]

+ Parameters
    + company_id (number, required) - ID of the Company.
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"
    + state (string, optional) - Filters Applications by their state.

### List Company's Applications [GET]

Retrieves list of all Applications.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "applications": [
                    {
                        "id": 1,
                        "created": "2016-02-06T21:19:57+0100",
                        "stars": 0,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/1"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "Lloyd Brayton",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 6,
                                    "number_of_completed_tests": 4,
                                    "last_completed_test_date": null,
                                    "last_contact": {
                                      "created": "2015-12-14T14:01:53+0100",
                                      "text": "Vážený pane, Lorem ipsum..."
                                    },
                                    "state": "in_progress",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Dgoe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 5,
                                "order": 50,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "Refused",
                                        "cs": "Odmítnut\u00fd"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "created": "2016-02-06T21:19:57+0100",
                        "stars": 0,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/2"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 2,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "Donovan Luther",
                                "email": "john.doe@example.com",
                                "note": "Poznaaaaamk 1122333",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/2"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 3,
                                    "number_of_completed_tests": 3,
                                    "last_completed_test_date": null,
                                    "state": "completed",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 3,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/3"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=3"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 1,
                                "order": 10,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/2"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "New",
                                        "cs": "Nov\u00ed"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 3,
                        "created": "2016-02-06T21:19:57+0100",
                        "stars": 3,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/3"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 3,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "Jeromy Belt",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 8,
                                    "number_of_completed_tests": 2,
                                    "last_completed_test_date": null,
                                    "state": "inactive",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 2,
                                "order": 20,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "Active",
                                        "cs": "Aktivn\u00ed"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 4,
                        "created": "2016-02-06T21:19:57+0100",
                        "stars": 2,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/1"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 4,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "Tanner Kreider",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 14,
                                    "number_of_completed_tests": 10,
                                    "last_completed_test_date": null,
                                    "state": "inactive",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 2,
                                "order": 20,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "Active",
                                        "cs": "Aktivn\u00ed"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 5,
                        "created": "2016-02-06T21:19:57+0100",
                        "state": "new",
                        "stars": 5,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/1"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 5,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "Dwain Raulerson",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 7,
                                    "number_of_completed_tests": 7,
                                    "last_completed_test_date": null,
                                    "state": "inactive"
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 2,
                                "order": 20,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "Active",
                                        "cs": "Aktivn\u00ed"
                                    }
                                }
                            }
                        }
                    }
                ],
                "number_of_applications_in_state": {
                    "data": [
                        {
                            "application_state_id": 1,
                            "number_of_applications": 1
                        },
                        {
                            "application_state_id": 2,
                            "number_of_applications": 3
                        },
                        {
                            "application_state_id": 3,
                            "number_of_applications": 0
                        },
                        {
                            "application_state_id": 4,
                            "number_of_applications": 0
                        },
                        {
                            "application_state_id": 5,
                            "number_of_applications": 1
                        }
                    ]
                }
            }
        }


## Job Offer's Applications Collection [/api/job-offers/{job_offer_id}/applications?limit={limit}&page={page}&sort={sort}&state={state}]

+ Parameters
    + job_offer_id (number, required) - ID of the Job Offer. 
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"
    + state (string, optional) - Filters Applications by their state.

### List Job Offer's Applications [GET]

Retrieves list of all Applications.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "applications": [
                    {
                        "id": 1,
                        "created": "2016-02-06T21:19:57+0100",
                        "state": "new",
                        "stars": 3,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/1"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "Marcus Keller",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 11,
                                    "number_of_completed_tests": 9,
                                    "last_completed_test_date": null,
                                    "state": "inactive",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 1,
                                "order": 10,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "New",
                                        "cs": "Nov\u00fd"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "created": "2016-02-06T21:19:57+0100",
                        "state": "new",
                        "stars": 1,
                        "text": "I wanna be the very best, like noone ever was!",
                        "name": "John Doe",
                        "phone": "+420123456789",
                        "email": "john.doe@example.com",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/applications\/2"
                            }
                        },
                        "_embedded": {
                            "candidate": {
                                "id": 2,
                                "created": "2016-02-06T21:19:57+0100",
                                "name": "Jim Klapper",
                                "email": "john.doe@example.com",
                                "note": "Note",
                                "hash": "aaa-aaa-aaa",
                                "avatar": "4",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/candidates\/2"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    }
                                },
                                "_embedded": {
                                    "number_of_tests": 3,
                                    "number_of_completed_tests": 3,
                                    "last_completed_test_date": null,
                                    "state": "inactive",
                                    "contacts": []
                                }
                            },
                            "user": {
                                "id": 3,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/3"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=3"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-06T21:19:57+0100",
                                "location_string": "Praha, \u010cesk\u00e1 republika",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting"
                                }
                            },
                            "application_state": {
                                "id": 2,
                                "order": 20,
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/application-states\/2"
                                    }
                                },
                                "_embedded": {
                                    "title": {
                                        "en": "Active",
                                        "cs": "Aktivn\u00ed"
                                    }
                                }
                            }
                        }
                    }
                ],
                "number_of_applications_in_state": {
                    "data": [
                        {
                            "application_state_id": 1,
                            "number_of_applications": 1
                        },
                        {
                            "application_state_id": 2,
                            "number_of_applications": 1
                        },
                        {
                            "application_state_id": 3,
                            "number_of_applications": 0
                        },
                        {
                            "application_state_id": 4,
                            "number_of_applications": 0
                        },
                        {
                            "application_state_id": 5,
                            "number_of_applications": 0
                        }
                    ]
                }
            }
        }


## User's Applications Collection [/api/users/{user_id}/applications?limit={limit}&page={page}&sort={sort}&state={state}]

+ Parameters
    + user_id (number, required) - ID of the User. 
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"
    + state (string, optional) - Filters Applications by their state.

### List User's Applications [GET]

Retrieves list of all Applications.

+ Response 200 (application/hal+json)
        
        {
            "_embedded": {
                "applications": [{
                    "id": 1,
                    "created": "2016-02-06T21:19:57+0100",
                    "state": "new",
                    "text": "I wanna be the very best, like noone ever was!",
                    "name": "John Doe",
                    "phone": "+420123456789",
                    "email": "john.doe@example.com",
                    "linkedin_link": "https://linkedin.com/abc/123",
                    "_embedded": {
                        "job_offer": {
                            "id": 1,
                            "created": "2016-02-06T21:19:57+0100",
                            "_embedded": {
                                "title": {
                                  "cs": "Job title",
                                  "en": "Job title En"
                                },
                                "description": [],
                                "state": "active",
                                "state_category": "category-active",
                                "company": {
                                  "id": 1,
                                  "name": "Hiri.cz",
                                  "webalized": "hiri-cz",
                                  "created": "2016-02-17T14:07:35+0100",
                                  "logo": "http://loremflickr.com/120/80",
                                  "cover_image": "http://loremflickr.com/1140/450",
                                  "description": {
                                    "cs": "Lorem ipsum, ..."
                                  }
                                },
                                "locations": [
                                  "Praha"
                                ]
                            }
                        }
                    }
                }, {
                    "id": 2,
                    "created": "2016-02-06T21:19:57+0100",
                    "state": "refused",
                    "refused": "2016-03-15T18:19:57+0100",
                    "text": "I wanna be the very best, like noone ever was!",
                    "name": "John Doe",
                    "phone": "+420123456789",
                    "email": "john.doe@example.com",
                    "linkedin_link": "https://linkedin.com/abc/123",
                    "_links": {
                        "self": {
                            "href": "\/api\/applications\/2"
                        }
                    },
                    "_embedded": {
                        "job_offer": {
                            "id": 2,
                            "created": "2016-02-06T21:19:57+0100",
                            "_embedded": {
                                "title": {
                                  "cs": "Job title 2",
                                  "en": "Job title En 2"
                                },
                                "description": [],
                                "state": "active",
                                "state_category": "category-active",
                                "company": {
                                  "id": 1,
                                  "name": "Hiri.cz",
                                  "webalized": "hiri-cz",
                                  "created": "2016-02-17T14:07:35+0100",
                                  "logo": "http://loremflickr.com/120/80",
                                  "cover_image": "http://loremflickr.com/1140/450",
                                  "description": {
                                    "cs": "Lorem ipsum, ..."
                                  }
                                },
                                "locations": [
                                  "Praha"
                                ]
                            }
                        }
                    }
                }, {
                    "id": 3,
                    "created": "2016-02-06T21:19:57+0100",
                    "state": "accepted",
                    "accepted": "2016-05-11T10:55:57+0100",
                    "text": "I wanna be the very best, like noone ever was!",
                    "name": "John Doe",
                    "phone": "+420123456789",
                    "email": "john.doe@example.com",
                    "linkedin_link": "https://linkedin.com/abc/123",
                    "_links": {
                        "self": {
                            "href": "\/api\/applications\/2"
                        }
                    },
                    "_embedded": {
                        "job_offer": {
                            "id": 3,
                            "created": "2016-02-06T21:19:57+0100",
                            "_embedded": {
                                "title": {
                                  "cs": "Job title 3",
                                  "en": "Job title En 3"
                                },
                                "description": [],
                                "state": "active",
                                "state_category": "category-active",
                                "company": {
                                  "id": 1,
                                  "name": "Hiri.cz",
                                  "webalized": "hiri-cz",
                                  "created": "2016-02-17T14:07:35+0100",
                                  "logo": "http://loremflickr.com/120/80",
                                  "cover_image": "http://loremflickr.com/1140/450",
                                  "description": {
                                    "cs": "Lorem ipsum, ..."
                                  }
                                },
                                "locations": [
                                  "Praha"
                                ]
                            }
                        }
                    }
                }, {
                    "id": 4,
                    "created": "2016-02-06T21:19:57+0100",
                    "state": "active",
                    "text": "I wanna be the very best, like noone ever was!",
                    "name": "John Doe",
                    "phone": "+420123456789",
                    "email": "john.doe@example.com",
                    "linkedin_link": "https://linkedin.com/abc/123",
                    "_links": {
                        "self": {
                            "href": "\/api\/applications\/2"
                        }
                    },
                    "_embedded": {
                        "application_view": {
                          "id": 1,
                          "created": "2016-04-11T15:05:57+0100"
                        },
                        "job_offer": {
                            "id": 2,
                            "created": "2016-02-06T21:19:57+0100",
                            "_embedded": {
                                "title": {
                                  "cs": "Job title 2",
                                  "en": "Job title En 3"
                                },
                                "description": [],
                                "state": "active",
                                "state_category": "category-active",
                                "company": {
                                  "id": 1,
                                  "name": "Hiri.cz",
                                  "webalized": "hiri-cz",
                                  "created": "2016-02-17T14:07:35+0100",
                                  "logo": "http://loremflickr.com/120/80",
                                  "cover_image": "http://loremflickr.com/1140/450",
                                  "description": {
                                    "cs": "Lorem ipsum, ..."
                                  }
                                },
                                "locations": [
                                  "Praha"
                                ]
                            }
                        }
                    }
                }]
            }
        }        



## Application [/api/applications/{id}]

+ Attributes
    + id (number, required) - ID of the Application.
    + state (string, required) - State of the Application. Can be 'new', 'active', 'interview', 'accepted' and 'refused'.
    + stars (number, optional) - Number of stars of the Application - used for internal rating. Can be null.
    + text (string, optional) - Text of the Application summarizing the candidate and why he is suitable for the job.
    + locality (string, optional) - Location of the User.
    + sign_on (string, optional) - When the user can sign on. The values are 'immediate', 'two-weeks', 'month', two-months', 'more-than-two-months'
    + required_salary (number, optional) - Required salary of the User.
    + seen (string, optional) - Date when the application was seen by the Company Administrators.
    + linkedin_link (string, optional) - Link to linkedin profile.
    + phone (string, optional) - Phone number of the Applicant
    + price (number, required) - Price of the application. Internal param.
    + why (string, required) - Motivational letter, why the Applicant should be hired.
    + embedded.application_state (object, required) - State of the Applicaiton. The state is dynamic, defined by the Company.
    + embedded.candidate (object, required) - Candidate entity.
    + embedded.job_offer (object, required) - Job Offer to which the Application belongs.
    + embedded.user (object, required) - User to which the Application belongs.
    + embedded.attachments (array, required) - All attachments of the Application.
    + embedded.application_state_changes (array, required) - All ApplicationStateChanges of the Application.

+ Parameters
    + id (number, required) - ID of the Application.

### Retrieve an Application [GET]

Retrieves an Application with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "created": "2016-02-19T14:44:59+0100",
            "state": "new",
            "text": "I wanna be the very best, like noone ever was!",
            "locality": "Horní Dolní",
            "sign_on": "two-weeks",
            "required_salary": 35000,
            "name": "John Doe",
            "phone": "+420123456789",
            "email": "john.doe@example.com",
            "linkedin_link": "https://linkedin.com/abc/123",
            "_links": {
                "self": {
                    "href": "\/api\/applications\/1"
                }
            },
            "_embedded": {
                "candidate": {
                    "id": 1,
                    "created": "2015-12-14T14:01:53+0100",
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "note": "Note",
                    "hash": "aaa-aaa-aaa",
                    "avatar": "4",
                    "linkedin_link": "https://linkedin.com/abc/1234",
                    "phone": "+420123456789",
                    "_links": {
                        "self": {
                            "href": "\/api\/candidates\/1"
                        },
                        "job": {
                            "href": "\/api\/jobs\/1"
                        },
                        "company": {
                            "href": "\/api\/companies\/1"
                        },
                        "user": {
                            "href": "\/api\/users\/1"
                        }
                    },
                    "_embedded": {
                        "job": {
                            "id": 1,
                            "created": "2015-12-14T14:01:53+0100",
                            "open_from": "2015-10-10T14:39:09+0200",
                            "open_to": "2016-02-28T17:04:52+0100",
                            "can_candidate_use_other_cute_languages": true,
                            "_links": {
                                "self": {
                                    "href": "\/api\/jobs\/1"
                                },
                                "company": {
                                    "href": "\/api\/companies\/1"
                                },
                                "candidates": {
                                    "href": "\/api\/candidates?job_id=1"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Hled\u00e1me Node.js developera",
                                    "en": "We are looking for a Node.js developer"
                                },
                                "description": {
                                    "cs": "Pod\u00edlej se na v\u00fdvoji nov\u00e9ho pracovn\u00edho port\u00e1lu, kter\u00fd zm\u011bn\u00ed \u010desk\u00fd trh s prac\u00ed.",
                                    "en": "Help us build a revolutionary job portal!"
                                },
                                "intro": [],
                                "state": "open",
                                "number_of_candidates": 1,
                                "number_of_completed_candidates": 0,
                                "number_of_tests": 4,
                                "tests": [
                                    {
                                        "id": 1,
                                        "type": "one-page",
                                        "number_of_questions": 4,
                                        "maximum_time": 300,
                                        "logo": "http://localhost:8080/images/test-placeholders/placeholder_testu1.svg",
                                        "shuffle_questions": true,
                                        "_embedded": {
                                            "average_fill_time": 250,
                                            "questions_count": 10,
                                            "name": {
                                                "cs": "Znalostní test",
                                                "en": "Knowledge test"
                                            }
                                        }
                                    },
                                    {
                                        "id": 2,
                                        "type": "one-page",
                                        "number_of_questions": 4,
                                        "maximum_time": 1900,
                                        "logo": "http://localhost:8080/images/test-placeholders/placeholder_testu2.svg",
                                        "shuffle_questions": true,
                                        "_embedded": {
                                            "average_fill_time": 1575,
                                            "questions_count": 20,
                                            "name": {
                                                "cs": "HTML",
                                                "en": "HTML"
                                            }
                                        }
                                    }
                                ],
                                "cute_tests": [
                                    {
                                        "id": 1,
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/cute-tests\/1"
                                            }
                                        },
                                        "_embedded": {
                                            "name": {
                                                "cs": "Logické myšlení",
                                                "en": "Logical thinking"
                                            },
                                            "intro": {
                                                "en": "Lorem ipsum...",
                                                "cs": "Lorem ipsum..."
                                            }
                                        }
                                    },
                                    {
                                        "id": 2,
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/cute-tests\/2"
                                            }
                                        },
                                        "_embedded": {
                                            "name": {
                                                "cs": "Měření kompetencí",
                                                "en": "Competencies"
                                            },
                                            "intro": {
                                                "en": "Lorem ipsum...",
                                                "cs": "Lorem ipsum..."
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "company": {
                            "id": 1,
                            "name": "Hiri.cz",
                            "webalized": "hiri-cz",
                            "created": "2015-12-14T14:01:53+0100",
                            "_links": {
                                "self": {
                                    "href": "\/api\/companies\/1"
                                },
                                "jobs": {
                                    "href": "\/api\/jobs?company_id=1"
                                },
                                "jobs:active": {
                                    "href": "\/api\/jobs?company_id=1&active=1"
                                }
                            }
                        },
                        "user": {
                            "id": 1,
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "created": "2015-12-14T14:01:53+0100",
                            "_links": {
                                "self": {
                                    "href": "\/api\/users\/1"
                                },
                                "companies": {
                                    "href": "\/api\/companies?user_id=1"
                                },
                                "language": {
                                    "href": "\/api\/languages\/cs"
                                }
                            },
                            "_embedded": {
                                "user_profile": {
                                    "id": 1,
                                    "profile_picture": "http://example.com/abc/123",
                                    "linkedin_link": "https://linkedin.com/abc/123",
                                    "facebook_link": "https://linkedin.com/abc/123",
                                    "twitter_link": "https://linkedin.com/abc/123",
                                    "created": "2016-02-06T21:19:57+0100"
                                }
                            }
                        },
                        "cute_test_fills": [
                            {
                                "id": 1,
                                "start": "2015-11-19T10:53:48+0100",
                                "end": "2015-11-19T11:03:54+0100",
                                "score_number": 10,
                                "redirect_url": "http:\/\/example.com\/",
                                "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                                "_embedded": {
                                    "completed": true,
                                    "state": "completed",
                                    "result_description": "consistency_high",
                                    "cute_test": {
                                        "id": 2,
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/cute-tests\/2"
                                            }
                                        },
                                        "_embedded": {
                                            "name": {
                                                "cs": "Měření kompetencí",
                                                "en": "Competencies"
                                            },
                                            "intro": {
                                                "en": "Lorem ipsum...",
                                                "cs": "Lorem ipsum..."
                                            },
                                            "result_type": "shapes"
                                        }
                                    }
                                }
                            },
                            {
                                "id": 3,
                                "start": "2015-11-19T10:53:48+0100",
                                "end": "2015-11-19T11:03:54+0100",
                                "score_number": 85,
                                "redirect_url": "http:\/\/example.com\/",
                                "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                                "_embedded": {
                                    "completed": true,
                                    "state": "completed",
                                    "result_description": "percentile",
                                    "cute_test": {
                                        "id": 3,
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/cute-tests\/3"
                                            }
                                        },
                                        "_embedded": {
                                            "name": {
                                                "cs": "Deduktivně-logické myšlení",
                                                "en": "Deductively-logical thinking"
                                            },
                                            "intro": {
                                                "en": "Lorem ipsum...",
                                                "cs": "Lorem ipsum..."
                                            },
                                            "result_type": "oi"
                                        }
                                    }
                                }
                            },
                            {
                                "id": 2,
                                "start": "2015-11-19T10:53:48+0100",
                                "redirect_url": "http:\/\/example.com\/",
                                "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                                "_embedded": {
                                    "completed": true,
                                    "state": "blocked",
                                    "cute_test": {
                                        "id": 1,
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/cute-tests\/1"
                                            }
                                        },
                                        "_embedded": {
                                            "name": {
                                                "cs": "Logické myšlení",
                                                "en": "Logical thinking"
                                            },
                                            "intro": {
                                                "en": "Lorem ipsum...",
                                                "cs": "Lorem ipsum..."
                                            },
                                            "result_type": "oi"
                                        }
                                    }
                                }
                            },
                            {
                                "id": 12,
                                "start": "2015-11-19T10:53:48+0100",
                                "redirect_url": "http:\/\/example.com\/",
                                "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                                "_embedded": {
                                    "completed": false,
                                    "state": "in_progress",
                                    "cute_test": {
                                        "id": 5,
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/cute-tests\/5"
                                            }
                                        },
                                        "_embedded": {
                                            "name": {
                                                "cs": "Cute Test 5",
                                                "en": "Cute Test 5"
                                            },
                                            "intro": {
                                                "en": "Lorem ipsum...",
                                                "cs": "Lorem ipsum..."
                                            },
                                            "result_type": "oi"
                                        }
                                    }
                                }
                            }
                        ],
                        "test_fills": [
                            {
                                "id": 9,
                                "start": "2015-12-14T14:01:52+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/test-fills\/1"
                                    },
                                    "test": {
                                        "href": "\/api\/tests\/1"
                                    },
                                    "drawn_questions": {
                                        "href": "\/api\/drawn-questions"
                                    }
                                },
                                "_embedded": {
                                    "completed": false,
                                    "state": "in_progress",
                                    "test": {
                                        "id": 1,
                                        "type": "one-page",
                                        "number_of_questions": 4,
                                        "maximum_time": 300,
                                        "shuffle_questions": true,
                                        "logo": "http://localhost:8080/images/test-placeholders/placeholder_testu1.svg",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/tests\/1"
                                            }
                                        },
                                        "_embedded": {
                                            "name": {
                                                "cs": "Znalostní test",
                                                "en": "Knowledge test"
                                            },
                                            "intro": {
                                                "en": "Knowledge test for JavaScript language, level Senior.",
                                                "cs": "Znalostn\u00ed test jazyka JavaScript na \u00farovni Senior,"
                                            },
                                            "average_fill_time": 250
                                        }
                                    }
                                }
                            },
                            {
                                "id": 2,
                                "start": "2015-11-14T14:01:52+0100",
                                "end": "2015-11-14T14:01:53+0100",
                                "score": 5000,
                                "percentile": 97,
                                "percent": 50,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/test-fills\/2"
                                    },
                                    "test": {
                                        "href": "\/api\/tests\/2"
                                    },
                                    "drawn_questions": {
                                        "href": "\/api\/drawn-questions"
                                    }
                                },
                                "_embedded": {
                                    "completed": true,
                                    "state": "completed",
                                    "test": {
                                        "id": 2,
                                        "type": "one-page",
                                        "number_of_questions": 5,
                                        "maximum_time": 450,
                                        "shuffle_questions": false,
                                        "logo": "http:\/\/example.com\/test\/1",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/tests\/1"
                                            }
                                        },
                                        "_embedded": {
                                            "name": {
                                                "cs": "HTML",
                                                "en": "HTML"
                                            },
                                            "intro": {
                                                "en": "Knowledge test for JavaScript language, level Senior.",
                                                "cs": "Znalostn\u00ed test jazyka JavaScript na \u00farovni Senior,"
                                            },
                                            "average_fill_time": 300
                                        }
                                    }
                                }
                            }
                        ],
                        "history": [
                            {
                                "op": "applied",
                                "date": "2015-12-14T14:01:53+0100"
                            },
                            {
                                "op": "invited",
                                "date": "2015-12-14T14:01:53+0100"
                            },
                            {
                                "op": "first-login",
                                "date": "2015-12-14T14:01:53+0100"
                            },
                            {
                                "op": "finished",
                                "name": {
                                    "en": "JavaScript Senior",
                                    "cs": "JavaScript Senior"
                                },
                                "date": "2015-12-14T14:01:53+0100"
                            },
                            {
                                "op": "contacted",
                                "date": "2015-12-14T14:01:53+0100"
                            },
                            {
                                "op": "moved-to-application-state",
                                "application_state": 12,
                                "date": "2015-12-14T14:01:53+0100"
                            },
                            {
                                "op": "reclaimed",
                                "date": "2015-12-14T14:01:53+0100"
                            }
                        ],
                        "number_of_tests": 4,
                        "number_of_completed_tests": 1,
                        "last_completed_test_date": "2015-12-14T14:01:53+0100",
                        "state": "in_progress",
                        "last_contact": {
                            "created": "2015-12-14T14:01:53+0100",
                            "text": "Vážený pane, Lorem ipsum..."
                        }
                    }
                },
                "user": {
                    "id": 2,
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "created": "2016-02-19T14:44:59+0100",
                    "_links": {
                        "self": {
                            "href": "\/api\/users\/2"
                        },
                        "companies": {
                            "href": "\/api\/companies?user_id=2"
                        },
                        "language": {
                            "href": "\/api\/languages\/cs"
                        }
                    },
                    "_embedded": {
                        "language": {
                            "id": "cs",
                            "_links": {
                                "self": {
                                    "href": "\/api\/languages\/cs"
                                }
                            }
                        },
                        "user_profile": {
                            "id": 1,
                            "profile_picture": "http://example.com/abc/123",
                            "linkedin_link": "https://linkedin.com/abc/123",
                            "facebook_link": "https://linkedin.com/abc/123",
                            "twitter_link": "https://linkedin.com/abc/123",
                            "created": "2016-02-06T21:19:57+0100",
                            "_embedded": {
                                "user_educations": [
                                    {
                                        "id": 1,
                                        "school_name": "ČVUT v Praze",
                                        "field": "Softwarové technologie a management",
                                        "since": "2013",
                                        "to": "2016",
                                        "description": "Bachelor degree"
                                    },
                                    {
                                        "id": 2,
                                        "school_name": "Gymnázium Jírovcova 8, Ceské Budějovice",
                                        "field": "Obecné gymnázium",
                                        "since": "2008",
                                        "to": "2012",
                                        "description": "Ukončeno maturitou"
                                    }
                                ],
                                "user_work_experiences": [
                                    {
                                        "id": 1,
                                        "company_name": "StartupJobs.cz",
                                        "position": "PHP Programmer",
                                        "since": "2013-11",
                                        "to": null,
                                        "description": "Developing a Job Portal for Startups"
                                    },
                                    {
                                        "id": 2,
                                        "company_name": "Hiri.cz",
                                        "position": "Lead PHP Programmer",
                                        "since": "2014-10",
                                        "to": null,
                                        "description": "Developing a Job Portal and Unique Testing tool"
                                    }
                                ],
                                "test_fills": [
                                    {
                                        "id": 2,
                                        "start": "2016-03-06T16:16:44+0100",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/test-fills\/2"
                                            },
                                            "test": {
                                                "href": "\/api\/tests\/2"
                                            },
                                            "drawn_questions": {
                                                "href": "\/api\/drawn-questions"
                                            }
                                        },
                                        "_embedded": {
                                            "completed": false,
                                            "state": "in_progress",
                                            "number_of_question_fills": 0,
                                            "test": {
                                                "id": 2,
                                                "type": "question-per-page",
                                                "number_of_questions": 2,
                                                "maximum_time": 300,
                                                "logo": "http:\/\/example.com\/test\/1",
                                                "test_fills": [
                                                    {
                                                        "id": 2,
                                                        "start": "2016-03-06T16:16:44+0100",
                                                        "_links": {
                                                            "self": {
                                                                "href": "\/api\/test-fills\/2"
                                                            },
                                                            "test": {
                                                                "href": "\/api\/tests\/2"
                                                            },
                                                            "drawn_questions": {
                                                                "href": "\/api\/drawn-questions"
                                                            }
                                                        },
                                                        "_embedded": {
                                                            "completed": false,
                                                            "state": "in_progress",
                                                            "number_of_question_fills": 0,
                                                            "test": null
                                                        }
                                                    }
                                                ],
                                                "_links": {
                                                    "self": {
                                                        "href": "\/api\/tests\/2"
                                                    },
                                                    "questions": {
                                                        "href": "\/api\/questions?test_id=2"
                                                    }
                                                },
                                                "_embedded": {
                                                    "name": [],
                                                    "intro": [],
                                                    "average_fill_time": null,
                                                    "questions_count": 0
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "id": 1,
                                        "start": "2016-03-06T16:16:44+0100",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/test-fills\/1"
                                            },
                                            "test": {
                                                "href": "\/api\/tests\/1"
                                            },
                                            "drawn_questions": {
                                                "href": "\/api\/drawn-questions"
                                            }
                                        },
                                        "_embedded": {
                                            "completed": false,
                                            "state": "in_progress",
                                            "number_of_question_fills": 0,
                                            "test": {
                                                "id": 1,
                                                "type": "question-per-page",
                                                "number_of_questions": 2,
                                                "maximum_time": 300,
                                                "logo": "http:\/\/example.com\/test\/1",
                                                "test_fills": [
                                                    {
                                                        "id": 1,
                                                        "start": "2016-03-06T16:16:44+0100",
                                                        "_links": {
                                                            "self": {
                                                                "href": "\/api\/test-fills\/1"
                                                            },
                                                            "test": {
                                                                "href": "\/api\/tests\/1"
                                                            },
                                                            "drawn_questions": {
                                                                "href": "\/api\/drawn-questions"
                                                            }
                                                        },
                                                        "_embedded": {
                                                            "completed": false,
                                                            "state": "in_progress",
                                                            "number_of_question_fills": 0,
                                                            "test": null
                                                        }
                                                    }
                                                ],
                                                "_links": {
                                                    "self": {
                                                        "href": "\/api\/tests\/1"
                                                    },
                                                    "questions": {
                                                        "href": "\/api\/questions?test_id=1"
                                                    }
                                                },
                                                "_embedded": {
                                                    "name": [],
                                                    "intro": [],
                                                    "average_fill_time": null,
                                                    "questions_count": 0
                                                }
                                            }
                                        }
                                    }
                                ],
                                "cute_test_fills": [
                                    {
                                        "id": 1,
                                        "start": "2015-11-19T10:53:48+0100",
                                        "end": "2015-11-19T11:03:54+0100",
                                        "score_number": 10,
                                        "redirect_url": "http:\/\/example.com\/",
                                        "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                                        "_embedded": {
                                            "completed": true,
                                            "state": "completed",
                                            "result_description": "consistency_high",
                                            "cute_test": {
                                                "id": 2,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/api\/cute-tests\/2"
                                                    }
                                                },
                                                "_embedded": {
                                                    "name": {
                                                        "cs": "Měření kompetencí",
                                                        "en": "Competencies"
                                                    },
                                                    "intro": {
                                                        "en": "Lorem ipsum...",
                                                        "cs": "Lorem ipsum..."
                                                    },
                                                    "result_type": "shapes"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "id": 3,
                                        "start": "2015-11-19T10:53:48+0100",
                                        "end": "2015-11-19T11:03:54+0100",
                                        "score_number": 85,
                                        "redirect_url": "http:\/\/example.com\/",
                                        "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                                        "_embedded": {
                                            "completed": true,
                                            "state": "completed",
                                            "result_description": "percentile",
                                            "cute_test": {
                                                "id": 3,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/api\/cute-tests\/3"
                                                    }
                                                },
                                                "_embedded": {
                                                    "name": {
                                                        "cs": "Deduktivně-logické myšlení",
                                                        "en": "Deductively-logical thinking"
                                                    },
                                                    "intro": {
                                                        "en": "Lorem ipsum...",
                                                        "cs": "Lorem ipsum..."
                                                    },
                                                    "result_type": "oi"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "id": 2,
                                        "start": "2015-11-19T10:53:48+0100",
                                        "redirect_url": "http:\/\/example.com\/",
                                        "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                                        "_embedded": {
                                            "completed": true,
                                            "state": "blocked",
                                            "cute_test": {
                                                "id": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/api\/cute-tests\/1"
                                                    }
                                                },
                                                "_embedded": {
                                                    "name": {
                                                        "cs": "Logické myšlení",
                                                        "en": "Logical thinking"
                                                    },
                                                    "intro": {
                                                        "en": "Lorem ipsum...",
                                                        "cs": "Lorem ipsum..."
                                                    },
                                                    "result_type": "oi"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "id": 12,
                                        "start": "2015-11-19T10:53:48+0100",
                                        "redirect_url": "http:\/\/example.com\/",
                                        "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                                        "_embedded": {
                                            "completed": false,
                                            "state": "in_progress",
                                            "cute_test": {
                                                "id": 5,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/api\/cute-tests\/5"
                                                    }
                                                },
                                                "_embedded": {
                                                    "name": {
                                                        "cs": "Cute Test 5",
                                                        "en": "Cute Test 5"
                                                    },
                                                    "intro": {
                                                        "en": "Lorem ipsum...",
                                                        "cs": "Lorem ipsum..."
                                                    },
                                                    "result_type": "oi"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "job_offer": {
                    "id": 1,
                    "created": "2016-02-19T14:44:59+0100",
                    "_links": {
                        "self": {
                            "href": "\/api\/job-offers\/1"
                        },
                        "company": {
                            "href": "\/api\/companies\/1"
                        },
                        "job": {
                            "href": "\/api\/jobs\/1"
                        }
                    },
                    "_embedded": {
                        "title": [],
                        "description": [],
                        "state": "awaiting-payment",
                        "state_category": "category-waiting",
                        "locations": [],
                        "new_application_mails": ["matej@example.com","filip@example.com"]
                    }
                },
                "application_state": {
                    "id": 1,
                    "order": 10,
                    "created": "2016-02-19T14:44:59+0100",
                    "_links": {
                        "self": {
                            "href": "\/api\/application-states\/1"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "en": "New",
                            "cs": "Nov\u00fd"
                        }
                    }
                },
                "attachments": [
                    {
                        "id": 5,
                        "link": "http:\/\/abc.xyz\/1",
                        "description": "CV",
                        "_links": {
                            "self": {
                                "href": "ApplicationAttachments:read"
                            },
                            "application": {
                                "href": "\/api\/applications"
                            }
                        }
                    },
                    {
                        "id": 6,
                        "link": "http:\/\/abc.xyz\/2",
                        "description": "Cover letter",
                        "_links": {
                            "self": {
                                "href": "ApplicationAttachments:read"
                            },
                            "application": {
                                "href": "\/api\/applications"
                            }
                        }
                    }
                ],
                "application_state_changes": [
                    {
                        "id": 2,
                        "old_state": "new",
                        "new_state": "accepted",
                        "created": "2016-05-31T10:36:54+0200"
                    }
                ]
            }
        }



### Update an Application [PUT]

Updates an Application with given ID.

+ Request (application/json)

    + Attributes
        + stars (number, optional) - Number of stars for Application (rating). Can be null or an integer between 0-5.
        + application_state (number, optional) - New application state id. Must be from company's applcation state and can not be 1 ("New"). 
        + email (string, optional) - Email of the Applicant. **Note: Required when User is not signed in.**
        + name (string, optional) - Name of the Applicant.
        + phone (string, optional) - Phone of the Applicant.
        + linkedin_link (string, optional) - Linkedin Link of the Applicant.
        + locality (string, optional) - Location of the User.
        + sign_on (string, optional) - When the user can sign on. The values are 'immediate', 'two-weeks', 'month', two-months', 'more-than-two-months'
        + required_salary (number, optional) - Required salary of the User.
        + seen (string, optional) - Date when the application was seen by the Company Administrators.
        + state (string, optional) - State of the Application. Can be 'new', 'active', 'interview', 'accepted' and 'refused'.
        + linkedin_link (string, optional) - Link to linkedin profile.
        + why (string, required) - Motivational letter, why the Applicant should be hired.


    + Body

            {
                "stars": 4,
                "application_state": 3,
                "locality": "Praha",
                "sign_on": "immediate",
                "required_salary": 35000,
                "seen": "2016-04-21T17:02:23"
            }


+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "created": "2016-02-20T11:42:57+0100",
                "state": "new",
                "stars": 4,
                "text": "I wanna be the very best, like noone ever was!",
                "name": "John Doe",
                "phone": "+420123456789",
                "email": "john.doe@example.com",
                "linkedin_link": "https://linkedin.com/abc/123",
                "locality": "Praha",
                "sign_on": "immediate",
                "required_salary": 35000,
                "_links": {
                    "self": {
                        "href": "\/api\/applications\/1"
                    }
                },
                "_embedded": {
                    "candidate": {
                        "id": 1,
                        "created": "2016-02-20T11:42:57+0100",
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "note": "Note",
                        "hash": "aaa-aaa-aaa",
                        "avatar": "2",
                        "_links": {
                            "self": {
                                "href": "\/api\/candidates\/1"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            }
                        },
                        "_embedded": {
                            "number_of_tests": 0,
                            "number_of_completed_tests": 0,
                            "last_completed_test_date": null,
                            "state": "inactive"
                        }
                    },
                    "user": {
                        "id": 2,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-02-20T11:42:57+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/2"
                            },
                            "companies": {
                                "href": "\/api\/companies?user_id=2"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    "job_offer": {
                        "id": 1,
                        "created": "2016-02-20T11:42:57+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offers\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": [],
                            "state": "awaiting-payment",
                            "state_category": "category-waiting",
                            "locations": [],
                            "new_application_mails": ["matej@example.com","filip@example.com"]
                        }
                    },
                    "application_state": {
                        "id": 3,
                        "order": 30,
                        "created": "2016-02-06T21:17:17+0100",
                        "_links": {
                          "self": {
                            "href": "/api/application-states/3"
                          }
                        },
                        "_embedded": {
                          "title": {
                            "en": "Interview",
                            "cs": "Pohovor"
                          }
                        }
                    },
                    "attachments": [
                        {
                            "id": 5,
                            "link": "http:\/\/abc.xyz\/1",
                            "description": "CV",
                            "_links": {
                                "self": {
                                    "href": "ApplicationAttachments:read"
                                },
                                "application": {
                                    "href": "\/api\/applications"
                                }
                            }
                        },
                        {
                            "id": 6,
                            "link": "http:\/\/abc.xyz\/2",
                            "description": "Cover letter",
                            "_links": {
                                "self": {
                                    "href": "ApplicationAttachments:read"
                                },
                                "application": {
                                    "href": "\/api\/applications"
                                }
                            }
                        }
                    ]
                }
            }
        }

### Delete an Application [DELETE]

Deletes an Application with given ID.

+ Response 200 (application/hal+json)

        {
            "ok": true
        }


# Group Blog Articles

## Blog Articles Collection  [/api/blog-articles?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Blog Articles [GET]

Lists all Blog Articles.

+ Response 200 (application/hal+json)

        {
            "page": 2,
            "limit": 1,
            "pages": 3,
            "total": 3,
            "_embedded": {
                "blog_articles": [
                    {
                        "id": 1,
                        "created": "2016-03-24T16:15:47+0100",
                        "title": "Lorem Ipsumus",
                        "text": "Lorem ipsum...",
                        "cover": "v1460384001/shark-02_qbkiiz.jpg",
                        "_links": {
                            "self": {
                                "href": "\/api\/blog-articles\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "created": "2016-03-24T16:15:47+0100",
                        "title": "Lorem Ipsumus",
                        "text": "Lorem ipsum...",
                        "cover": "v1460384001/shark-02_qbkiiz.jpg",
                        "_links": {
                            "self": {
                                "href": "\/api\/blog-articles\/2"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

### Create Blog Article [POST]

Creates Blog Articles with given parameters.

+ Request (application/json)

    + Attributes
        + published (string, optional) - Date when the article was/will be published. Can be in future.
        + title (string, required) - Title of the Blog Article.
        + text (string, required) - Text of the Blog Article.
        + language (string, required) - Language of the Blog Article.
        + company (number, optional) - ID of Company to which the Article is connected.
        + cover (string, required) - URL of cover image.

    + Body

            {
                "published": "2016-03-24T00:00:00+0100",
                "title": "Loremus Ipsemus",
                "text": "Lorem ipsum...",
                "language": "cs",
                "company": 1,
                "cover": "https://www.example.com/abc/123"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 11,
                "created": "2016-03-24T16:16:08+0100",
                "published": "2016-03-24T00:00:00+0100",
                "title": "Loremus Ipsemus",
                "text": "Lorem ipsum...",
                "cover": "v1460384001/shark-02_qbkiiz.jpg",
                "_links": {
                    "self": {
                        "href": "\/api\/blog-articles\/11"
                    },
                    "language": {
                        "href": "\/api\/languages\/cs"
                    }
                },
                "_embedded": {
                    "language": {
                        "id": "cs",
                        "_links": {
                            "self": {
                                "href": "\/api\/languages\/cs"
                            }
                        }
                    },
                    "author": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-03-24T16:12:22+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    "company": {
                        "id": 1,
                        "name": "Hiri.cz",
                        "webalized": "hiri-cz",
                        "created": "2015-12-01T19:25:02+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    }
                }
            }
        }

## Blog Article [/api/blog-articles/{id}]

+ Attributes
    + id (number, required) - ID of the Blog Article.
    + created (string, optional) - Date when the article was created.
    + published (string, optional) - Date when the article was/will be published. Can be in future.
    + title (string, required) - Title of the Blog Article.
    + text (string, required) - Text of the Blog Article.
    + cover (string, required) - URL of cover image.
    + _embedded.language (object, required) - Language of the Blog Article.
    + _embedded.author (object, required) - Language of the Blog Article.
    + _embedded.company (object, optional) - Company to which the Article is connected.

+ Parameters
    + id (number, required) - ID of the Blog Article.

### Retrieve Blog Article [GET]

Retrieves Blog Article with given ID.

+ Response 200 (applicaiton/hal+json)

        {
            "id": 1,
            "created": "2016-03-24T16:12:22+0100",
            "title": "Lorem Ipsumus",
            "text": "Lorem ipsum...",
            "cover": "v1460384001/shark-02_qbkiiz.jpg",
            "_links": {
                "self": {
                    "href": "\/api\/blog-articles\/1"
                },
                "language": {
                    "href": "\/api\/languages\/cs"
                }
            },
            "_embedded": {
                "language": {
                    "id": "cs",
                    "_links": {
                        "self": {
                            "href": "\/api\/languages\/cs"
                        }
                    }
                },
                "author": {
                    "id": 1,
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "created": "2016-03-24T16:12:22+0100",
                    "_links": {
                        "self": {
                            "href": "\/api\/users\/1"
                        },
                        "language": {
                            "href": "\/api\/languages\/cs"
                        }
                    },
                    "_embedded": {
                        "language": {
                            "id": "cs",
                            "_links": {
                                "self": {
                                    "href": "\/api\/languages\/cs"
                                }
                            }
                        }
                    }
                },
                "company": {
                    "id": 1,
                    "name": "Hiri.cz",
                    "webalized": "hiri-cz",
                    "created": "2015-12-01T19:25:02+0100",
                    "_links": {
                        "self": {
                            "href": "\/api\/companies\/1"
                        },
                        "jobs": {
                            "href": "\/api\/jobs?company_id=1"
                        },
                        "jobs:active": {
                            "href": "\/api\/jobs?company_id=1&active=1"
                        }
                    }
                }
            }
        }

### Update Blog Article [PUT]

Updates Blog Article with given ID.

+ Request (application/json)

    + Attributes
        + published (string, optional) - Date when the article was/will be published. Can be in future.
        + title (string, required) - Title of the Blog Article.
        + text (string, required) - Text of the Blog Article.
        + language (string, required) - Language of the Blog Article.
        + company (number, optional) - ID of Company to which the Article is connected.
        + cover (string, optional) - URL of cover image.

    + Body

            {
                "published": "2016-03-24T00:00:00+0100",
                "title": "Loremus Ipsemus",
                "text": "Lorem ipsum...",
                "language": "cs",
                "company": 1,
                "cover": "https://www.example.com/abc/123"
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "created": "2016-03-24T16:12:47+0100",
                "published": "2016-03-24T00:00:00+0100",
                "title": "Lorem Ipsumus",
                "text": "Lorem ipsum...",
                "cover": "v1460384001/shark-02_qbkiiz.jpg",
                "language": {
                    "id": "cs",
                    "_links": {
                        "self": {
                            "href": "\/api\/languages\/cs"
                        }
                    }
                },
                "_links": {
                    "self": {
                        "href": "\/api\/blog-articles\/1"
                    },
                    "language": {
                        "href": "\/api\/languages\/cs"
                    }
                },
                "_embedded": {
                    "language": {
                        "id": "cs",
                        "_links": {
                            "self": {
                                "href": "\/api\/languages\/cs"
                            }
                        }
                    },
                    "author": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-03-24T16:12:47+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    "company": {
                        "id": 1,
                        "name": "Hiri.cz",
                        "webalized": "hiri-cz",
                        "created": "2015-12-01T19:25:02+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    }
                }
            }
        }

### Delete Blog Article [DELETE]

Deletes Blog Article with given ID.

+ Response 200 (application/hal+json)

        {
            "ok": true
        }


# Group Companies

## Companies Collection [/api/companies?limit={limit}&page={page}&sort={sort}&search={search}&city={city}]

+ Parameters
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC". You can use 'most-offers+<ASC|DESC>' to sort Companies by highest/lowest Job Offers count.
    + search (string, optional) - Full text search on the Companies. Considers company description, company category title, city and name.
    + city (string, optional) - Returns only Companies matching the given city.

### List Companies [GET]

Retrieves all companies balonging to the client.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "companies": [
                    {
                        "id": 1,
                        "name": "Hiri.cz",
                        "webalized": "hiri-cz",
                        "created": "2016-02-18T19:31:16+0100",
                        "color": "#FF0000",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "logo": "https://www.example.com/img/123",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        },
                        "_embedded": {
                            "description": {
                              "cs": "Lorem ipsum, ...",
                              "en": "Lorem ipsum, ..."
                            },
                            "credits_account": false,
                            "tests": [],
                            "cute_tests": [],
                            "new_application_mails": ["matej@example.com","filip@example.com"],
                            "followed": false
                        }
                    },
                    {
                        "id": 2,
                        "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                        "webalized": "ceska-pojistovna-a-s",
                        "created": "2016-02-18T19:31:16+0100",
                        "color": "#0000FF",
                        "address": "Sp\u00e1len\u00e1 999",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "logo": "https://www.example.com/img/123",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/2"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=2"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=2&active=1"
                            }
                        },
                        "_embedded": {
                            "description": {
                              "cs": "Lorem ipsum, ...",
                              "en": "Lorem ipsum, ..."
                            },
                            "credits_account": false,
                            "tests": [],
                            "cute_tests": [],
                            "new_application_mails": [
                                "matej@example.com",
                                "filip@example.com"
                            ],
                            "followed": false
                        }
                    },
                    {
                        "id": 3,
                        "name": "Microsoft cz",
                        "webalized": "microsoft-c-z",
                        "created": "2014-02-18T19:31:16+0100",
                        "color": "#FFFF00",
                        "address": "Sp\u00e1len\u00e1 333",
                        "city": "Kladno",
                        "country": "\u010cesk\u00e1 republika",
                        "logo": "https://www.example.com/img/12345",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/2"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=2"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=2&active=1"
                            }
                        },
                        "_embedded": {
                            "description": {
                              "cs": "Lorem ipsum, ...",
                              "en": "Lorem ipsum, ..."
                            },
                            "credits_account": false,
                            "tests": [],
                            "cute_tests": [],
                            "new_application_mails": [
                                "matej@example.com",
                                "filip@example.com"
                            ],
                            "followed": false
                        }
                    },
                    {
                        "id": 4,
                        "name": "Level cz",
                        "webalized": "level-c-z",
                        "created": "2014-02-18T19:31:16+0100",
                        "color": "#C0C0C0",
                        "address": "Sp\u00e1len\u00e1 666",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "logo": "https://www.example.com/img/666",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/2"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=2"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=2&active=1"
                            }
                        },
                        "_embedded": {
                            "description": {
                              "cs": "Lorem ipsum, ...",
                              "en": "Lorem ipsum, ..."
                            },
                            "credits_account": false,
                            "tests": [],
                            "cute_tests": [],
                            "new_application_mails": [
                                "matej@example.com",
                                "filip@example.com"
                            ],
                            "followed": false
                        }
                    }
                ]
            }
        }

### Create a Company [POST]

Creates a Company with given parameters.

+ Request (application/json)
    
    + Attributes
        + name (string, required) - Name of the Company
        + color (string, optional) - Color of the Company
        + cute_id (number, optional) - Cute Client ID of the Company
        + cute_secret (string, optional) - Cute Secret ID of the Company
        + tests (array, optional) - Array of Test ids which will be paired with the Company so the Company can use them for testing Candidates.
        + cute_tests (array, optional) - Array of Cute Test ids which will be paired with the Company so the Company can use them for testing Candidates.
        + address (string, optional) - Address of the Company
        + city (string, optional) - City of the Company
        + country (string, optional) - Country of the Company
        + contact_person_name (string, required) - Name of contact person
        + contact_person_email (string, required) - Email of contact person
        + cibtact_person_password (string, optional) - Password for the contact person. **Note: This parameter is require if you are signed off while creating a company!**
        + contact_person_phone (string, required) - Phone of contact person
        + tin (string, optional) - TIN/IČO of the Company
        + first_name_basis (boolean, required) - Are we on the first name basis?
        + logo (string, optional) - URL of Company's logo image.
        + cover_image (string, optional) - URL of Company's cover image.
        + description (object, required) - Localized description of the Company
        + public_email (string, optional) - Public email address of the Company
        + webpages_address (string, optional) - Address of web pages of the Company.
        + category (number, optional) - ID of Company Category
        + new_application_mails (array, optional) - List of mails addresses to which mails about new Applications will be sent by default

    + Body

            
            {
                "name": "Česká Pojišťovna a.s.",
                "color": "#ffffff",
                "cute_id": "abc123",
                "cute_secret": "pssst",
                "tests": [1, 2],
                "cute_tests": [1],
                "address": "Pohádková 13",
                "city": "Krakonošovo",
                "country": "Česká republika",
                "contact_person_name": "John Doe",
                "contact_person_phone": "+420123456789",
                "contact_person_email": "john.doe@example.com",
                "tin": "12345678",
                "first_name_basis": false,
                "logo": "https://www.example.com/img/123",
                "cover_image": "https://www.example.com/img/1234",
                "description": {
                  "cs": "Lorem ipsum, ...",
                  "en": "Lorem ipsum, ..."
                },
                "category": 1
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 35,
                "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                "webalized": "ceska-pojistovna-a-s",
                "created": "2016-04-25T21:33:53+0200",
                "color": "#ffffff",
                "address": "Poh\u00e1dkov\u00e1 13",
                "city": "Krakono\u0161ovo",
                "country": "\u010cesk\u00e1 republika",
                "first_name_basis": true,
                "logo": "https:\/\/example.com\/img\/123",
                "_links": {
                    "self": {
                        "href": "\/api\/companies\/35"
                    },
                    "jobs": {
                        "href": "\/api\/jobs?company_id=35"
                    },
                    "jobs:active": {
                        "href": "\/api\/jobs?company_id=35&active=1"
                    }
                },
                "_embedded": {
                    "description": {
                        "cs": "Lorem ipsum, ...",
                        "en": "Lorem ipsum, ..."
                    },
                    "jobs": [],
                    "credits_account": false,
                    "tests": [
                        {
                            "id": 1,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/1"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        },
                        {
                            "id": 2,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/2"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        }
                    ],
                    "cute_tests": [
                        {
                            "id": 1,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        }
                    ],
                    "new_application_mails": [
                        "matej@example.com",
                        "filip@example.com"
                    ],
                    "category": {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/company-categories\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "Call centrum",
                                "cs": "Call centrum"
                            }
                        }
                    }
                }
            }
        }


## Company Category's Companies Collection [/api/company-categories/{company_category_id}/companies?limit={limit}&page={page}&sort={sort}&search={search}&city={city}]

+ Parameters
    + company_category_id (numter, required) - ID of the Company Category
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC". You can use 'most-offers+<ASC|DESC>' to sort Companies by highest/lowest Job Offers count.
    + search (string, optional) - Full text search on the Companies. Considers company description, company category title, city and name.
    + city (string, optional) - Returns only Companies matching the given city.


### List Company Category's Companies [GET]

Retrieves all companies balonging to the client.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "companies": [
                    {
                        "id": 1,
                        "name": "Hiri.cz",
                        "webalized": "hiri-cz",
                        "created": "2016-02-18T19:31:16+0100",
                        "color": "#FF0000",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "logo": "https://www.example.com/img/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        },
                        "_embedded": {
                            "description": {
                              "cs": "Lorem ipsum, ...",
                              "en": "Lorem ipsum, ..."
                            }
                        }
                    },
                    {
                        "id": 2,
                        "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                        "webalized": "ceska-pojistovna-a-s",
                        "created": "2016-02-18T19:31:16+0100",
                        "color": "#0000FF",
                        "address": "Sp\u00e1len\u00e1 999",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "logo": "https://www.example.com/img/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/2"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=2"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=2&active=1"
                            }
                        },
                        "_embedded": {
                            "description": {
                              "cs": "Lorem ipsum, ...",
                              "en": "Lorem ipsum, ..."
                            }
                        }
                    },
                    {
                        "id": 3,
                        "name": "Microsoft cz",
                        "webalized": "microsoft-c-z",
                        "created": "2014-02-18T19:31:16+0100",
                        "color": "#FFFF00",
                        "address": "Sp\u00e1len\u00e1 333",
                        "city": "Kladno",
                        "country": "\u010cesk\u00e1 republika",
                        "logo": "https://www.example.com/img/12345",
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/2"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=2"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=2&active=1"
                            }
                        },
                        "_embedded": {
                            "description": {
                              "cs": "Lorem ipsum, ...",
                              "en": "Lorem ipsum, ..."
                            }
                        }
                    },
                    {
                        "id": 4,
                        "name": "Level cz",
                        "webalized": "level-c-z",
                        "created": "2014-02-18T19:31:16+0100",
                        "color": "#C0C0C0",
                        "address": "Sp\u00e1len\u00e1 666",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "logo": "https://www.example.com/img/666",
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/2"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=2"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=2&active=1"
                            }
                        },
                        "_embedded": {
                            "description": {
                              "cs": "Lorem ipsum, ...",
                              "en": "Lorem ipsum, ..."
                            }
                        }
                    }
                ]
            }
        }

## Company [/api/companies/{id}]

+ Attributes
    + id (number, required) - Id of the Company.
    + name (string, required) - Name of the Company.
    + webalized (string, required) - Webalized name of the Company.
    + created (string, required) - Date when the Company was created
    + approved (string, optional) - Date when the Company has been approved.
    + color (string, required) - Default color in hex for the Company
    + address (string, optional) - Address of the Company
    + city (string, optional) - City of the Company
    + country (string, optional) - Country of the Company
    + new_application_mails (array, optional) - Array of email where new applications will be sent
    + logo (string, optional) - URL of Company's logo image.
    + cover_image (string, optional) - URL of Company's cover image.
    + tin (string, optional) - TIN/IČO of the Company
    + public_email (string, optional) - Public email address of the Company
    + webpages_address (string, optional) - Address of web pages of the Company.
    + contact_person_name (string, required) - Name of contact person
    + contact_person_email (string, required) - Email of contact person
    + contact_person_phone (string, required) - Phone of contact person
    + embedded.description (object, required) - Localized Description of the Company
    + embedded.jobs (array, required) - List of Jobs belonging to the Company
    + embedded.company_profile (object, required) - Profile of the Company
    + embedded.followed (object, optional) - CompanyFollow if the Company is followed or FALSE if not or NULL if user is not signed in.
    + embedded.category (object, optional) - CompanyCategory of the Company

+ Parameters
    + id (number, required) - Id of the company or alternatively its webalized name.

### Retrieve a Company [GET]

Retrieves a Company with the given id.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "name": "Hiri.cz",
            "created": "2015-11-06T16:23:46+0100",
            "webalized": "hiri-cz",
            "color": "#ffffff",
            "address": "Spálená 1",
            "city": "Praha",
            "country": "Česká republika",
            "contact_person_name": "John Doe",
            "contact_person_phone": "+420123456789",
            "contact_person_email": "john.doe@example.com",
            "public_email": "public.john.doe@example.com",
            "new_application_mails": ["company@email.com"],
            "tin": "12345678",
            "first_name_basis": false,
            "logo": "http://loremflickr.com/120/80",
            "cover_image": "http://loremflickr.com/1140/450",
            "web_address": "https://www.cp.cz",
            "_links": {
              "self": {
                "href": "/api/companies/1"
              },
              "jobs": {
                "href": "/api/jobs?company_id=1"
              },
              "jobs:active": {
                "href": "/api/jobs?company_id=1&active=1"
              }
            },
            "_embedded": {
                "description": {
                  "cs": "Lorem ipsum, ...",
                  "en": "Lorem ipsum, ..."
                },
                "company_profile": {
                    "id": 1,
                    "reasons": {
                        "1": "lalala",
                        "2": "nananana",
                        "3": "batman"
                    },
                    "linkedin_link": "hiri-cz",
                    "facebook_link": "Hiri-cz",
                    "twitter_link": "hiiiri",
                    "_links": {
                        "self": {
                            "href": "\/api\/company-profiles\/1"
                        }
                    }
                },
                "credits_account": {
                    "id": 1,    
                    "available_balance": 11000,
                    "balance": 20000
                },
                "tests": [
                ],
                "cute_tests": [
                ],
                "category": {
                    "id": 2,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/2"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Call centrum",
                            "en": "Call centrum"
                        }
                    }
                },
                "jobs": [
                  {
                    "id": 2,
                    "created": "2015-10-25T17:04:52+0100",
                    "open_from": "2015-10-25T17:04:52+0100",
                    "open_to": "2016-02-28T17:04:52+0100",
                    "_links": {
                      "self": {
                        "href": "/api/jobs/2"
                      },
                      "company": {
                        "href": "/api/companies/1"
                      },
                      "candidates": {
                        "href": "/api/candidates?job_id=2"
                      }
                    },
                    "_embedded": {
                      "title": {
                        "cs": "Hiri.cz hledá Node.js vývojáře",
                        "en": "Hiri.cz is looking for a Node.js developer"
                      },
                      "description": {
                        "cs": "Stavíme nový pracovní portál a potřebujeme Tě!",
                        "en": "We are building a new job portal and we need you!"
                      },
                      "intro": {
                        "cs": "Vítáme Vás na testování pro pozici Node.js vývojáře.",
                        "en": "Welcome to tests for Node.js developer position."
                      },
                      "state": "open",
                      "number_of_candidates": 20,
                      "number_of_completed_candidates": 11,
                      "number_of_tests": 5
                    }
                  },
                  {
                    "id": 1,
                    "created": "2015-10-25T17:04:52+0100",
                    "open_from": "2015-10-25T17:04:52+0100",
                    "open_to": "2016-01-01T17:04:52+0100",
                    "_links": {
                      "self": {
                        "href": "/api/jobs/1"
                      },
                      "company": {
                        "href": "/api/companies/1"
                      },
                      "candidates": {
                        "href": "/api/candidates?job_id=1"
                      }
                    },
                    "_embedded": {
                      "title": {
                        "cs": "Hiri.cz hledá HTML kodera",
                        "en": "Hiri.cz is looking for a HTML coder"
                      },
                      "description": {
                        "cs": "Stavíme nový pracovní portál a potřebujeme Tě!",
                        "en": "We are building a new job portal and we need you!"
                      },
                      "intro": {
                        "cs": "Vítáme Vás na testování pro pozici HTML kodéra.",
                        "en": "Welcome to tests for HTML coder position."
                      },
                      "state": "closed",
                      "number_of_candidates": 4,
                      "number_of_completed_candidates": 2,
                      "number_of_tests": 3
                    }
                  }
                ],
                "followed": {
                    "id": 1,
                    "created": "2016-04-06T19:29:24+0200",
                    "_links": {
                        "self": {
                            "href": "\/api\/company-follows\/1"
                        }
                    }
                }
            }
        }

### Update a Company [PUT]

Allows you to update a Company with provided ID. You don't have to provide all the parameters,
only those provided will be updated.

Note: we chose usability over RESTful corectness, where you have to provide all
the parameters in PUT request otherwise they are deleted.

+ Request (application/json)

    + Attributes
        + name (string, optional) - Name of the Company
        + color (string, optional) - Color of the Company
        + cute_id (number, optional) - Cute Client ID of the Company
        + cute_secret (string, optional) - Cute Secret ID of the Company
        + tests (array, optional) - Array of Test ids which will be paired with the Company so the Company can use them for testing Candidates.
        + cute_tests (array, optional) - Array of Cute Test ids which will be paired with the Company so the Company can use them for testing Candidates.
        + address (string, optional) - Address of the Company
        + city (string, required) - City of the Company
        + country (string, required) - Country of the Company
        + public_email (string, optional) - Public email of the company
        + tin (string, optional) - TIN/IČO of the Company
        + first_name_basis (boolean, optional) - Are we on the first name basis?
        + category (object, optional) - Company Category
        + description (object, optional) - Localized Description of the Company
        + web_address (string, optional) - Web address of the Company
        + logo (string, optional) - URL of Company's logo image.
        + cover_image (string, optional) - URL of Company's cover image.
        + approved (string, optional) - Date when the Company was approved. If you want to approved the Company, set the value to the current date. If not, set the value to NULL.
        + description (object, required) - Localized description of the Company
        + public_email (string, optional) - Public email address of the Company
        + webpages_address (string, optional) - Address of web pages of the Company.
        + category (number, optional) - ID of Company Category
        + new_application_mails (array, optional) - List of mails addresses to which mails about new Applications will be sent by default 
        + contact_person_name (string, optional) - Name of contact person
        + contact_person_email (string, optional) - Email of contact person
        + contact_person_phone (string, optional) - Phone of contact person

    + Body
    
            {
                "name": "Hiri.sk",
                "color": "#ffffff",
                "tests": [1, 2],
                "cute_tests": [1],
                "address": "Sp\u00e1len\u00e1 1",
                "city": "Praha",
                "country": "\u010cesk\u00e1 republika",
                "contact_person_name": "John Doe",
                "contact_person_phone": "+420123456789",
                "contact_person_email": "john.doe@example.com",
                "public_email": "public.john.doe@example.com",
                "tin": "12345678",
                "first_name_basis": false,
                "approved": "2016-04-05",
                "category": {
                    "id": 2,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/2"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Call centrum",
                            "en": "Call centrum"
                        }
                    }
                },
                "description": {
                  "cs": "Lorem ipsum, ...",
                  "en": "Lorem ipsum, ..."
                },
                "web_address": "https://www.cp.cz",
                "logo": "https://www.example.com/img/123",
                "category": 1
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 3,
                "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                "webalized": "ceska-pojistovna-a-s",
                "created": "2016-02-18T19:31:33+0100",
                "color": "#ffffff",
                "address": "Poh\u00e1dkov\u00e1 13",
                "city": "Krakono\u0161ovo",
                "country": "\u010cesk\u00e1 republika",
                "logo": "https://www.example.com/img/123",
                "approved": "2016-04-05",
                "_links": {
                    "self": {
                        "href": "\/api\/companies\/3"
                    },
                    "jobs": {
                        "href": "\/api\/jobs?company_id=3"
                    },
                    "jobs:active": {
                        "href": "\/api\/jobs?company_id=3&active=1"
                    }
                },
                "_embedded": {
                    "description": {
                      "cs": "Lorem ipsum, ...",
                      "en": "Lorem ipsum, ..."
                    },
                    "credits_account": {
                        "id": 1,
                        "available_balance": 11000,
                        "balance": 20000
                    },
                    "jobs": [],
                    "tests": [],
                    "cute_tests": [],
                    "new_application_mails": [
                        "matej@example.com",
                        "filip@example.com"
                    ],
                    "category": {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/company-categories\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "Call centrum",
                                "cs": "Call centrum"
                            }
                        }
                    },
                    "followed": false
                }
            }
        }

### Soft delete a Company [DELETE]

Softly deletes a Company.

+ Response 200 (applicaiton/hal+json)

        {
            "ok": true
        }


# Group Company Media

## Company Media Collection [/api/company-media?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of company categories returned in the request
    + page (number, optional) - Distance from beginning of the array of available company categories
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company Media [GET]

Lists all Company Media.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_media": [
                    {
                        "id": 1,
                        "url": "https:\/\/example.com\/pic\/123",
                        "origin": "cover",
                        "type": "picture",
                        "created": "2016-03-15T14:26:42+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/1"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                                "webalized": "ceska-pojistovna-as",
                                "created": "2016-03-15T14:26:42+0100",
                                "color": "ff0000",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "url": "https:\/\/example.com\/pic\/123",
                        "origin": "gallery",
                        "type": "video",
                        "created": "2016-03-15T14:26:42+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/2"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                                "webalized": "ceska-pojistovna-as",
                                "created": "2016-03-15T14:26:42+0100",
                                "color": "ff0000",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 3,
                        "url": "https:\/\/example.com\/pic\/123",
                        "origin": "cover",
                        "type": "picture",
                        "created": "2016-03-15T14:26:42+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/3"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 2,
                                "name": "\u010cEZ a.s.",
                                "webalized": "cez-as",
                                "created": "2016-03-15T14:26:42+0100",
                                "color": "0000ff",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/2"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=2"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=2&active=1"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

### Create Company Media [POST]

Creates Company Media with given Parameters.

+ Request (application/json)

    + Attributes
        + url (string, required) - URL where the actual media are stored.
        + origin (string, required) - Origin of the media. Can be 'cover' or 'gallery'.
        + type (string, required) - Type of the media. Can be 'picture' or 'video'.
        + company (number, required) - Company to which the Company Media belong.

    + Body

            {
                "company": 1,
                "url": "https://example.com/pic/123",
                "type": "picture",
                "origin": "cover"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 2,
                "url": "https:\/\/example.com\/123",
                "origin": "cover",
                "type": "video",
                "created": "2016-03-15T14:33:52+0100",
                "_links": {
                    "self": {
                        "href": "\/api\/company-media\/2"
                    }
                },
                "_embedded": {
                    "company": {
                        "id": 1,
                        "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                        "webalized": "ceska-pojistovna-as",
                        "created": "2016-03-15T14:33:45+0100",
                        "color": "ff0000",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    }
                }
            }
        }

## Company's Company Media Collection [/api/companies/{company_id}/company-media?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + company_id (number, required) - ID of the Company
    + limit (number, optional) - Limits number of company categories returned in the request
    + page (number, optional) - Distance from beginning of the array of available company categories
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company's Company Media [GET]

Lists all Company Media belonging to Company with given ID.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_media": [
                    {
                        "id": 2,
                        "url": "http://loremflickr.com/900/687",
                        "origin": "gallery",
                        "type": "picture",
                        "created": "2016-03-15T14:26:54+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/2"
                            }
                        }
                    },
                    {
                        "id": 3,
                        "url": "http://loremflickr.com/900/687",
                        "origin": "gallery",
                        "type": "picture",
                        "created": "2016-03-15T14:26:54+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/3"
                            }
                        }
                    },
                    {
                        "id": 4,
                        "url": "http://loremflickr.com/900/687",
                        "origin": "gallery",
                        "type": "picture",
                        "created": "2016-03-15T14:26:54+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/4"
                            }
                        }
                    },
                    {
                        "id": 5,
                        "url": "http://loremflickr.com/900/687",
                        "origin": "gallery",
                        "type": "picture",
                        "created": "2016-03-15T14:26:54+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/5"
                            }
                        }
                    },
                    {
                        "id": 6,
                        "url": "http://loremflickr.com/900/687",
                        "origin": "gallery",
                        "type": "picture",
                        "created": "2016-03-15T14:26:54+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/6"
                            }
                        }
                    },
                    {
                        "id": 7,
                        "url": "http://loremflickr.com/900/687",
                        "origin": "gallery",
                        "type": "picture",
                        "created": "2016-03-15T14:26:54+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/7"
                            }
                        }
                    },
                    {
                        "id": 8,
                        "url": "http://loremflickr.com/900/687",
                        "origin": "gallery",
                        "type": "picture",
                        "created": "2016-03-15T14:26:54+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-media\/8"
                            }
                        }
                    }
                ]
            }
        }

## Company Media [/api/company-media/{id}]

+ Attributes
    + id (number, required) - ID of the Company Media
    + url (string, required) - URL where the actual media are stored.
    + origin (string, required) - Origin of the media. Can be 'cover' or 'gallery'.
    + type (string, required) - Type of the media. Can be 'picture' or 'video'.
    + created (string, required) - Date when the Company Media was created.
    + embedded.company (object, required) - Company to which the Company Media belong.

+ Parameters
    + id (number, required) - ID of the Company Media

### Retrieve Company Media [GET]

Retrieves Company Media with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "url": "https:\/\/example.com\/pic\/123",
            "origin": "cover",
            "type": "picture",
            "created": "2016-03-15T14:27:39+0100",
            "_links": {
                "self": {
                    "href": "\/api\/company-media\/1"
                }
            },
            "_embedded": {
                "company": {
                    "id": 1,
                    "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                    "webalized": "ceska-pojistovna-as",
                    "created": "2016-03-15T14:27:39+0100",
                    "color": "ff0000",
                    "address": "Sp\u00e1len\u00e1 1",
                    "city": "Praha",
                    "country": "\u010cesk\u00e1 republika",
                    "first_name_basis": false,
                    "_links": {
                        "self": {
                            "href": "\/api\/companies\/1"
                        },
                        "jobs": {
                            "href": "\/api\/jobs?company_id=1"
                        },
                        "jobs:active": {
                            "href": "\/api\/jobs?company_id=1&active=1"
                        }
                    }
                }
            }
        }

### Update Company Media [PUT]

Updates Company Media with given ID.

+ Request (application/json)

    + Attributes
        + url (string, optional) - URL where the actual media are stored.
        + origin (string, optional) - Origin of the media. Can be 'cover' or 'gallery'.
        + type (string, optional) - Type of the media. Can be 'picture' or 'video'.

    + Body

            {
                "url": "https://example.com/pic/321",
                "type": "picture",
                "origin": "cover"
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "url": "https:\/\/example.com\/pic\/321",
                "origin": "gallery",
                "type": "video",
                "created": "2016-03-15T14:27:57+0100",
                "_links": {
                    "self": {
                        "href": "\/api\/company-media\/1"
                    }
                },
                "_embedded": {
                    "company": {
                        "id": 1,
                        "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                        "webalized": "ceska-pojistovna-as",
                        "created": "2016-03-15T14:27:57+0100",
                        "color": "ff0000",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    }
                }
            }
        }

### Delete Company Media [DELETE]

Deletes Company Media with given ID.

+ Response 200 (application/hal+json)

        {"ok": true}

# Group Company Profiles

## Company Profiles Collection [/api/company-profiles?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of company adminisitrators returned in the request
    + page (number, optional) - Distance from beginning of the array of available company administrators
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company Profiles [GET]

Lists all Company Profiles.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_profiles": [
                    {
                        "id": 1,
                        "twitter_link": "https:\/\/twitter.com\/123",
                        "linkedin_link": "https:\/\/linkeidn.com\/123",
                        "facebook_link": "https:\/\/facebook.com\/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-profiles\/1"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                                "webalized": "ceska-pojistovna-as",
                                "created": "2016-03-17T15:48:00+0100",
                                "color": "ff0000",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "twitter_link": "https:\/\/twitter.com\/123",
                        "linkedin_link": "https:\/\/linkeidn.com\/123",
                        "facebook_link": "https:\/\/facebook.com\/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-profiles\/2"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 2,
                                "name": "\u010cEZ a.s.",
                                "webalized": "cez-as",
                                "created": "2016-03-17T15:48:00+0100",
                                "color": "0000ff",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/2"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=2"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=2&active=1"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

### Create Company Profile [POST]

Creates Company Profile with given parameters.

+ Request (application/json)

    + Attributes
        + twitter_link (string, optional) - Twitter link to the Company Profile
        + facebook_link (string, optional) - Facebook link to the Company Profile
        + linkedin_link (string, optional) - Linkedin link to the Company Profile

    + Body

            {
                "twitter_link": "https://twitter.com/1234",
                "facebook_link": "https://facebook.com/1234",
                "linkedin_link": "https://linkedin.com/1234"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 5,
                "twitter_link": "https:\/\/twitter.com\/123",
                "linkedin_link": "https:\/\/linkedin.com\/123",
                "facebook_link": "https:\/\/facebook.com\/123",
                "_links": {
                    "self": {
                        "href": "\/api\/company-profiles\/5"
                    }
                },
                "_embedded": {
                    "company": {
                        "id": 1,
                        "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                        "webalized": "ceska-pojistovna-as",
                        "created": "2016-03-17T15:50:49+0100",
                        "color": "ff0000",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    }
                }
            }
        }

## Company Profile [/api/company-profiles/{company_id}]

+ Attributes
    + company_id (number, required) - Id of the Company.
    + reasons (object, required) - Object of reasons to apply for company
    + linkedin_link (string, required) - Name of the company on linkedin
    + facebook_link (string, required) - Name of the company on facebook
    + twitter_link (string, required) - Name of the company on twitter

+ Parameters
    + company_id (number, required) - Id of the company

### Retrieve a Company Profile [GET]

Retrieves a Company Profile with the given id.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "reasons": {
                "1": "lalala",
                "2": "nananana",
                "3": "batman"
            },
            "linkedin_link": "hiri-cz",
            "facebook_link": "Hiri-cz",
            "twitter_link": "hiiiri",
            "_links": {
                "self": {
                    "href": "\/api\/company-profiles\/1"
                }
            },
            "_embedded": {
                "company": {
                    "id": 1,
                    "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                    "webalized": "ceska-pojistovna-as",
                    "created": "2016-03-17T15:49:05+0100",
                    "color": "ff0000",
                    "address": "Sp\u00e1len\u00e1 1",
                    "city": "Praha",
                    "country": "\u010cesk\u00e1 republika",
                    "first_name_basis": false,
                    "_links": {
                        "self": {
                            "href": "\/api\/companies\/1"
                        },
                        "jobs": {
                            "href": "\/api\/jobs?company_id=1"
                        },
                        "jobs:active": {
                            "href": "\/api\/jobs?company_id=1&active=1"
                        }
                    }
                }
            }
        }

### Update a Company Profile [PUT]

Allows you to update a Company Profile with provided Company ID. You don't have to provide all the parameters,
only those provided will be updated.

Note: we chose usability over RESTful corectness, where you have to provide all
the parameters in PUT request otherwise they are deleted.

+ Request (application/json)

    + Attributes
        + reasons (object, optional) - Object of reasons to apply for company
        + linkedin_link (string, optional) - Name of the company on linkedin
        + facebook_link (string, optional) - Name of the company on facebook
        + twitter_link (string, optional) - Name of the company on twitter

    + Body
    
            {
                "reasons": {
                    "1": "lalala",
                    "2": "nananana",
                    "3": "batman"
                },
                "linkedin_link": "hiri-cz",
                "facebook_link": "Hiri-cz",
                "twitter_link": "hiiiri"
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "company_id": 1,
                "reasons": {
                    "1": "lalala",
                    "2": "nananana",
                    "3": "batman"
                },
                "linkedin_link": "hiri-cz",
                "facebook_link": "Hiri-cz",
                "twitter_link": "hiiiri",
                "_links": {
                    "self": {
                        "href": "\/api\/company-profiles\/1"
                    }
                },
                "_embedded": {
                    "company": {
                        "id": 1,
                        "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                        "webalized": "ceska-pojistovna-as",
                        "created": "2016-03-17T15:49:05+0100",
                        "color": "ff0000",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    }
                }
            }
        }


# Group Company Watchdogs

## Company Watchdogs Collection [/api/company-watchdogs?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of views returned in the request
    + page (number, optional) - Distance from beginning of the array of available views
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company Watchdogs [GET]

Lists Company Watchdogs.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_watchdogs": [
                    {
                        "id": 1,
                        "email": "john.doe@example.com",
                        "created": "2016-04-07T15:14:59+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-watchdogs\/1"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "E-on",
                                "webalized": "e-on",
                                "created": "2016-04-07T15:14:58+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "description": [],
                                    "credits_account": false,
                                    "tests": [],
                                    "cute_tests": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "email": "john.doe@example.com",
                        "created": "2016-04-07T15:14:59+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-watchdogs\/2"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 2,
                                "name": "\u010cEZ",
                                "webalized": "cez",
                                "created": "2016-04-07T15:14:59+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/2"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=2"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=2&active=1"
                                    }
                                },
                                "_embedded": {
                                    "description": [],
                                    "credits_account": false,
                                    "tests": [],
                                    "cute_tests": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            }
                        }
                    }
                ]
            }
        }

### Create Company Watchdog [POST]

Creates Company Watchdog with given parameters.

+ Request (application/json)
    
    + Attributes
        + company (number, required) - ID of the Company
        + email (string, required) - Email to which send the notifications

    + Body

            {
                "company": 1,
                "email": "john.doe@example.com"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 4,
                "email": "john.doe@example.com",
                "created": "2016-04-07T15:15:30+0200",
                "_links": {
                    "self": {
                        "href": "\/api\/company-watchdogs\/4"
                    }
                },
                "_embedded": {
                    "company": {
                        "id": 1,
                        "name": "E-on",
                        "webalized": "e-on",
                        "created": "2016-04-07T15:15:29+0200",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        },
                        "_embedded": {
                            "description": []
                        }
                    }
                }
            }
        }

## Company's Watchdogs Collection [/api/companies/{company_id}/company-watchdogs?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + company_id (number, required) - ID of the Company
    + limit (number, optional) - Limits number of views returned in the request
    + page (number, optional) - Distance from beginning of the array of available views
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company's Company Watchdogs [GET]

Lists Company Watchdogs belonging to the given Company.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_watchdogs": [
                    {
                        "id": 1,
                        "email": "john.doe@example.com",
                        "created": "2016-04-07T15:15:16+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-watchdogs\/1"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "E-on",
                                "webalized": "e-on",
                                "created": "2016-04-07T15:15:16+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "description": [],
                                    "credits_account": false,
                                    "tests": [],
                                    "cute_tests": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            }
                        }
                    }
                ]
            }
        }

## Company Watchdog [/api/company-watchdogs/{id}]

+ Attributes
    + id (number, required) - ID of the Company Watchdog
    + created (string, required) - Date when the Watchdog was created.
    + email (string, required) - Email to which send the notifications
    + embedded.company (object, required) - The Company

+ Parameters
    + id (number, required) - ID of the Company Watchdog

### Retrieve a Watchdog [GET]

Retrieves a Watchdog with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "email": "john.doe@example.com",
            "created": "2016-04-07T15:16:14+0200",
            "_links": {
                "self": {
                    "href": "\/api\/company-watchdogs\/1"
                }
            },
            "_embedded": {
                "company": {
                    "id": 1,
                    "name": "E-on",
                    "webalized": "e-on",
                    "created": "2016-04-07T15:16:14+0200",
                    "address": "Sp\u00e1len\u00e1 1",
                    "city": "Praha",
                    "country": "\u010cesk\u00e1 republika",
                    "first_name_basis": false,
                    "_links": {
                        "self": {
                            "href": "\/api\/companies\/1"
                        },
                        "jobs": {
                            "href": "\/api\/jobs?company_id=1"
                        },
                        "jobs:active": {
                            "href": "\/api\/jobs?company_id=1&active=1"
                        }
                    },
                    "_embedded": {
                        "description": [],
                        "credits_account": false,
                        "tests": [],
                        "cute_tests": [],
                        "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                        ]
                    }
                }
            }
        }


# Group Company Follows

## Company Follows Collection [/api/company-follows?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of views returned in the request
    + page (number, optional) - Distance from beginning of the array of available views
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company Follows [GET]

Lists Company Follows.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_follows": [
                    {
                        "id": 1,
                        "created": "2016-04-06T16:30:18+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-follows\/1"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "E-on",
                                "webalized": "e-on",
                                "created": "2016-04-06T16:30:17+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "credits_account": false,
                                    "tests": [],
                                    "cute_tests": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-04-06T16:30:18+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/1"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "created": "2016-04-06T16:30:18+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-follows\/2"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "E-on",
                                "webalized": "e-on",
                                "created": "2016-04-06T16:30:17+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "credits_account": false,
                                    "tests": [],
                                    "cute_tests": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-04-06T16:30:18+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

### Create Company Follow [POST]

Creates Company Follow with given parameters.

+ Request (application/json)

    + Attributes
        + company (string, required) - The Company

    + Body

            {
                "company": 1
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 5,
                "created": "2016-04-06T16:51:14+0200",
                "_links": {
                    "self": {
                        "href": "\/api\/company-follows\/5"
                    }
                },
                "_embedded": {
                    "company": {
                        "id": 1,
                        "name": "E-on",
                        "webalized": "e-on",
                        "created": "2016-04-06T16:51:07+0200",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    },
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-04-06T16:51:08+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

## User's Company Follows Collection [/api/users/{user_id}/company-follows?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_id (number, required) - ID of the User
    + limit (number, optional) - Limits number of views returned in the request
    + page (number, optional) - Distance from beginning of the array of available views
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User's Company Follows [GET]

Lists Company Follows belonging to given User.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_follows": [
                    {
                        "id": 1,
                        "created": "2016-04-06T16:30:35+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-follows\/1"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "E-on",
                                "webalized": "e-on",
                                "created": "2016-04-06T16:30:35+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-04-06T16:30:35+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/1"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

## Company's Company Follows Collection [/api/companies/{company_id}/company-follows?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + company_id (number, required) - ID of the Company
    + limit (number, optional) - Limits number of views returned in the request
    + page (number, optional) - Distance from beginning of the array of available views
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company's Company Follows [GET]

Lists Company Follows belonging to given Company.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_follows": [
                    {
                        "id": 1,
                        "created": "2016-04-06T16:45:48+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-follows\/1"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "E-on",
                                "webalized": "e-on",
                                "created": "2016-04-06T16:45:48+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "credits_account": false,
                                    "tests": [],
                                    "cute_tests": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-04-06T16:45:48+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/1"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "created": "2016-04-06T16:45:48+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-follows\/2"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "E-on",
                                "webalized": "e-on",
                                "created": "2016-04-06T16:45:48+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "credits_account": false,
                                    "tests": [],
                                    "cute_tests": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-04-06T16:45:48+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

## Company Follow [/api/company-follows/{id}]

+ Attributes
    + id (number, required) - ID of the Company Follow
    + created (string, required) - Date when the Company Follow will be created
    + embedded.user (string, required) - The User
    + embedded.company (string, required) - The Company

+ Parameters
    + id (number, required) - ID of the Company Follow

### Retrieve a Company Follow [GET]

Retrieves Company Follow with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "created": "2016-04-06T16:08:49+0200",
            "_links": {
                "self": {
                    "href": "\/api\/company-follows\/1"
                }
            },
            "_embedded": {
                "company": {
                    "id": 1,
                    "name": "E-on",
                    "webalized": "e-on",
                    "created": "2016-04-06T16:08:49+0200",
                    "address": "Sp\u00e1len\u00e1 1",
                    "city": "Praha",
                    "country": "\u010cesk\u00e1 republika",
                    "first_name_basis": false,
                    "_links": {
                        "self": {
                            "href": "\/api\/companies\/1"
                        },
                        "jobs": {
                            "href": "\/api\/jobs?company_id=1"
                        },
                        "jobs:active": {
                            "href": "\/api\/jobs?company_id=1&active=1"
                        }
                    }
                },
                "user": {
                    "id": 1,
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "created": "2016-04-06T16:08:49+0200",
                    "_links": {
                        "self": {
                            "href": "\/api\/users\/1"
                        },
                        "language": {
                            "href": "\/api\/languages\/cs"
                        }
                    },
                    "_embedded": {
                        "language": {
                            "id": "cs",
                            "_links": {
                                "self": {
                                    "href": "\/api\/languages\/cs"
                                }
                            }
                        }
                    }
                }
            }
        }

### Update a Company Follow [PUT]

Updates Company Follow with given ID.

+ Request (application/json)

    + Body

            {
            }


+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "created": "2016-04-06T16:09:42+0200",
                "_links": {
                    "self": {
                        "href": "\/api\/company-follows\/1"
                    }
                },
                "_embedded": {
                    "company": {
                        "id": 1,
                        "name": "E-on",
                        "webalized": "e-on",
                        "created": "2016-04-06T16:09:42+0200",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    },
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-04-06T16:09:42+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

### Delete a Company Follow [DELETE]

Deletes Company Follow with given ID.

+ Response 200 (application/hal+json)

        {"ok": true}


# Group Company Profile Views

## Company Profile Views Collection [/api/company-offer-views?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of views returned in the request
    + page (number, optional) - Distance from beginning of the array of available views
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company Profile Views [GET]

Lists all Company Profile Views.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_profile_views": [
                    {
                        "id": 1,
                        "created": "2016-04-04T17:47:39+0200",
                        "ip_address": "127.0.0.1",
                        "referrer": "google+organic",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-profile-views\/1"
                            }
                        },
                        "_embedded": {
                            "company_profile": {
                                "id": 1,
                                "twitter_link": "https:\/\/twitter.com\/123",
                                "linkedin_link": "https:\/\/linkeidn.com\/123",
                                "facebook_link": "https:\/\/facebook.com\/123",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/company-profiles\/1"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "created": "2016-04-04T17:47:39+0200",
                        "ip_address": "127.0.0.1",
                        "referrer": "google+organic",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-profile-views\/2"
                            }
                        },
                        "_embedded": {
                            "company_profile": {
                                "id": 1,
                                "twitter_link": "https:\/\/twitter.com\/123",
                                "linkedin_link": "https:\/\/linkeidn.com\/123",
                                "facebook_link": "https:\/\/facebook.com\/123",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/company-profiles\/1"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

### Create Company Profile View [POST]

Creates Company Profile View with given parameters.

+ Request (application/json)

    + Attributes
        + ip_address (string, optional) - IP Address of the View
        + company_profile (number, required) - ID of the Company Profile
        + referrer (string, optional) - Referrer to the view

    + Body

            {
                "company_profile": 1,
                "ip_address": "127.0.0.1",
                "referrer": "google+organic"
            }


+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 2,
                "created": "2016-04-04T17:48:16+0200",
                "_links": {
                    "self": {
                        "href": "\/api\/company-profile-views\/2"
                    }
                },
                "_embedded": {
                    "company_profile": {
                        "id": 1,
                        "twitter_link": "https:\/\/twitter.com\/123",
                        "linkedin_link": "https:\/\/linkeidn.com\/123",
                        "facebook_link": "https:\/\/facebook.com\/123",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-profiles\/1"
                            }
                        }
                    },
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-04-04T17:48:15+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

## Company Profile's Company Profile Views Collection [/api/company-profiles/{company_profile_id}/company-offer-views?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + company_profile_id (number, required) - ID of the Company Profile
    + limit (number, optional) - Limits number of views returned in the request
    + page (number, optional) - Distance from beginning of the array of available views
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company Profile's Company Profile Views [GET]

Lists all Company Profile Views belonging to given Company Profile.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_profile_views": [
                    {
                        "id": 1,
                        "created": "2016-04-04T17:48:05+0200",
                        "ip_address": "127.0.0.1",
                        "referrer": "google+organic",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-profile-views\/1"
                            }
                        },
                        "_embedded": {
                            "company_profile": {
                                "id": 1,
                                "twitter_link": "https:\/\/twitter.com\/123",
                                "linkedin_link": "https:\/\/linkeidn.com\/123",
                                "facebook_link": "https:\/\/facebook.com\/123",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/company-profiles\/1"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

## User's Company Profile Views Collection [/api/users/{user_id}/company-offer-views?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_id (number, required) - ID of the User
    + limit (number, optional) - Limits number of views returned in the request
    + page (number, optional) - Distance from beginning of the array of available views
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User's Company Profile Views [GET]

Lists all Company Profile Views belonging to given User.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "company_profile_views": [
                    {
                        "id": 1,
                        "created": "2016-04-04T17:47:55+0200",
                        "ip_address": "127.0.0.1",
                        "referrer": "google+organic",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-profile-views\/1"
                            }
                        },
                        "_embedded": {
                            "company_profile": {
                                "id": 1,
                                "twitter_link": "https:\/\/twitter.com\/123",
                                "linkedin_link": "https:\/\/linkeidn.com\/123",
                                "facebook_link": "https:\/\/facebook.com\/123",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/company-profiles\/1"
                                    }
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-04-04T17:47:55+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/1"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

## Company Profile View [/api/company-offer-views/{id}]

+ Attributes
    + id (number, required) - ID of the Company Profile View
    + created (string, required) - Date when the View was created
    + ip_address (string, optional) - IP Address of the View
    + referrer (string, optional) - Referrer of the View
    + embedded.company_profile (object, required) - The Company Profile
    + embedded.user (object, optional) - The User

+ Parameters
    + id (number, required) - ID of the Company Profile View

### Retrieve Company Profile View [GET]

Retrieves Company Profile View with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "created": "2016-04-04T17:48:38+0200",
            "ip_address": "127.0.0.1",
            "referrer": "google+organic",
            "_links": {
                "self": {
                    "href": "\/api\/company-profile-views\/1"
                }
            },
            "_embedded": {
                "company_profile": {
                    "id": 1,
                    "twitter_link": "https:\/\/twitter.com\/123",
                    "linkedin_link": "https:\/\/linkeidn.com\/123",
                    "facebook_link": "https:\/\/facebook.com\/123",
                    "_links": {
                        "self": {
                            "href": "\/api\/company-profiles\/1"
                        }
                    }
                }
            }
        }

### Delete Company Profile View [DELETE]

Deletes Company Profile View with given ID.

+ Response 200 (application/hal+json)

        {"ok": true}


# Group Company Categories

## Company Categories Collection [/api/company-categories?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of company categories returned in the request
    + page (number, optional) - Distance from beginning of the array of available company categories
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Company Categories [GET]

Lists Company Catagories.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
              "company_categories": [
                {
                    "id": 2,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/2"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Call centrum",
                            "en": "Call centrum"
                        }
                    }
                },
                {
                    "id": 3,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/3"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Automotive a výroba",
                            "en": "Automotive a výroba"
                        }
                    }
                },
                {
                    "id": 4,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/4"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Bankovní sektor, pojišťovnictví, leasing, úvěry",
                            "en": "Bankovní sektor, pojišťovnictví, leasing, úvěry"
                        }
                    }
                },
                {
                    "id": 5,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/5"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Bezpečnostní složky a ochrana zdraví a majetku",
                            "en": "Bezpečnostní složky a ochrana zdraví a majetku"
                        }
                    }
                },
                {
                    "id": 6,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/6"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Hotelnictví, restaurace, cestovní ruch",
                            "en": "Hotelnictví, restaurace, cestovní ruch"
                        }
                    }
                },
                {
                    "id": 7,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/7"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Logistika a doprava",
                            "en": "Logistika a doprava"
                        }
                    }
                },
                {
                    "id": 8,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/8"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Nábytkářský a dřevozpracující průmysl",
                            "en": "Nábytkářský a dřevozpracující průmysl"
                        }
                    }
                },
                {
                    "id": 9,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/9"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Audit a daně, finance, ekonomika, účetnictví",
                            "en": "Audit a daně, finance, ekonomika, účetnictví"
                        }
                    }
                },
                {
                    "id": 10,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/10"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Energetický průmysl a elektrotechnika",
                            "en": "Energetický průmysl a elektrotechnika"
                        }
                    }
                },
                {
                    "id": 11,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/11"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Farmaceutický průmysl",
                            "en": "Farmaceutický průmysl"
                        }
                    }
                },
                {
                    "id": 12,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/12"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Hutní průmysl, hornictví",
                            "en": "Hutní průmysl, hornictví"
                        }
                    }
                },
                {
                    "id": 13,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/13"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Petrochemický průmysl",
                            "en": "Petrochemický průmysl"
                        }
                    }
                },
                {
                    "id": 14,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/14"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Informační systémy a technologie, telekomunikace",
                            "en": "Informační systémy a technologie, telekomunikace"
                        }
                    }
                },
                {
                    "id": 15,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/15"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Personalistika, nábor a rozvoj zaměstnanců",
                            "en": "Personalistika, nábor a rozvoj zaměstnanců"
                        }
                    }
                },
                {
                    "id": 16,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/16"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Marketing, reklama, PR, grafika",
                            "en": "Marketing, reklama, PR, grafika"
                        }
                    }
                },
                {
                    "id": 17,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/17"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Maloobchod a velkoobchod, Rychloobrátkové zboží (FMCG)",
                            "en": "Maloobchod a velkoobchod, Rychloobrátkové zboží (FMCG)"
                        }
                    }
                },
                {
                    "id": 18,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/18"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Právo a legislativa",
                            "en": "Právo a legislativa"
                        }
                    }
                },
                {
                    "id": 19,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/19"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Překladatelství a tlumočnictví",
                            "en": "Překladatelství a tlumočnictví"
                        }
                    }
                },
                {
                    "id": 20,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/20"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Služby",
                            "en": "Služby"
                        }
                    }
                },
                {
                    "id": 21,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/21"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Státní správa, samospráva",
                            "en": "Státní správa, samospráva"
                        }
                    }
                },
                {
                    "id": 22,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/22"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Stavební průmysl, realitní společnosti",
                            "en": "Stavební průmysl, realitní společnosti"
                        }
                    }
                },
                {
                    "id": 23,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/23"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Strojírenský průmysl",
                            "en": "Strojírenský průmysl"
                        }
                    }
                },
                {
                    "id": 24,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/24"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Vzdělávací instituce, věda, výzkum, kultura a umění",
                            "en": "Vzdělávací instituce, věda, výzkum, kultura a umění"
                        }
                    }
                },
                {
                    "id": 25,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/25"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Oděvní, textilní a kožedělný průmysl",
                            "en": "Oděvní, textilní a kožedělný průmysl"
                        }
                    }
                },
                {
                    "id": 26,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/26"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Vodohospodářství, lesnictví, životní prostředí",
                            "en": "Vodohospodářství, lesnictví, životní prostředí"
                        }
                    }
                },
                {
                    "id": 27,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/27"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Zdravotnictví a sociální péče",
                            "en": "Zdravotnictví a sociální péče"
                        }
                    }
                },
                {
                    "id": 28,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/28"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Potravinářský průmysl a zemědělství",
                            "en": "Potravinářský průmysl a zemědělství"
                        }
                    }
                },
                {
                    "id": 29,
                    "_links": {
                        "self": {
                            "href": "\/api\/company-categories\/29"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Media a internet, polygrafie, žurnalistika",
                            "en": "Media a internet, polygrafie, žurnalistika"
                        }
                    }
                }
              ]
            }
        }

### Create Company Category [POST]

Creates Company Category with given ID.

+ Request (application/json)

    + Attributes
        + title (object, required) - Localized title of the Company Category
        + color (string, optional) - Color of the company category

    + Body

            {
                "title": {
                    "cs": "Call centrum",
                    "en": "Call center"
                },
                "color": "ffffff"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 2,
                "_links": {
                    "self": {
                        "href": "\/api\/company-categories\/2"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Call centrum",
                        "en": "Call centrum"
                    }
                }
            }
        }

## Company Category [/api/company-categories/{id}]

+ Attributes
    + id (number, required) - ID of the Company Category
    + color (string, optional) - Color of the company category
    + embedded.title (object, required) - Localized title of the Company Category

+ Parameters
    + id (number, required) - ID of the Company Category

### Retrieve a Company Category [GET]

Retrieves Company Category with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "color": "ffffff",
            "_links": {
                "self": {
                    "href": "\/api\/company-categories\/1"
                }
            },
            "_embedded": {
                "title": {
                    "en": "Call centrum",
                    "cs": "Call centrum"
                }
            }
        }

### Update Company Category [PUT]

Updates Company Category with given ID.

+ Request (application/json)

    + Attributes
        + title (object, optional) - Localized title of the Company Category
        + color (string, optional) - Color of the company category

    + Body

            {
                "title": {
                    "en": "Call centrum",
                    "cs": "Call centrum"
                },
                "color": "ffffff"
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "_links": {
                    "self": {
                        "href": "\/api\/company-categories\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "en": "Call centre",
                        "cs": "Call centrum"
                    }
                }
            }
        }


# Group Email Verification Hashes

## Email Verification Hashes Collection [/api/email-verification-hashes]

### Create Email Verification Hash [POST]

Creates Email Verification Hash with given parameters and sends to the User.
**Note:** You must be logged in to create the Hash.

+ Request (application/json)

    + Attributes
        + return_url (string, required) - URL where you can verify the mail

    + Body

            {
                "return_url": "https://www.example.com/"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "created": "2016-05-12T12:57:10+0200",
                "return_url": "https:\/\/www.example.com\/",
                "_embedded": {
                    "user": {
                        "id": 2,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-05-12T12:57:10+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/2"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

## Email Verification Hash [/api/email-verification-hashes/{id}]

**Note:** ID is never present in the representation, it is only present in the Email sent to the User.
Otherwise, the User could "fake" the verification by just calling the Return URL with Hash ID.

+ Parameters
    + id (string, required) - ID of the Verification Hash

+ Attributes
    + return_url (string, required) - URL where you can verify the mail
    + used (string, optional) - When the Hash was used
    + created (string, required) - When the Hash was created
    + embedded.user (object, required) - Usr to which the Hash belongs

### Retrive Email Verification Hash [GET]

Retrieves Verification Hash with given ID.

+ Response 200 (application/hal+json)

        {
            "created": "2016-05-12T12:25:21+0200",
            "user": {
                "id": 2,
                "name": "John Doe",
                "email": "john.doe@example.com",
                "created": "2016-05-12T12:25:21+0200",
                "_links": {
                    "self": {
                        "href": "\/api\/users\/2"
                    },
                    "language": {
                        "href": "\/api\/languages\/cs"
                    }
                },
                "_embedded": {
                    "language": {
                        "id": "cs",
                        "_links": {
                            "self": {
                                "href": "\/api\/languages\/cs"
                            }
                        }
                    }
                }
            },
            "return_url": "https:\/\/www.example.com\/"
        }

### Update Email Verification Hash [PUT]

Updates Email Verification Hash with given ID.
By updating the used parameter, it also sets User's email_verified parameter.

+ Request (application/json)

    + Attributes
        + used (string, required) - Date when the hash was used

    + Body

            {
                "used": "2016-05-12T13:09"
            }


+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "created": "2016-05-12T12:41:14+0200",
                "used": "2016-05-12T11:03:00+0200",
                "return_url": "https:\/\/www.example.com\/",
                "_embedded": {
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "email_verified": "2016-05-12T11:03:00+0200",
                        "created": "2016-05-12T12:41:13+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }


# Group FAQ

## FAQ Collection [/api/faqs]

### List FAQs [GET]

Retrieves all FAQs with their categories.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "faqs": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/faqs\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Jak založit účet společnosti?",
                                "en": "How to create a company account?"
                            },
                            "answer": {
                                "cs": "Lorem Ipsum Dolor Sit Amet...",
                                "en": "Lorem Ipsum Dolor Sit Amet..."
                            },
                            "faq_category": {
                                "id": 1,
                                "icon": "http://example.com/icon/1.jpg",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/faq-categories\/1"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/faqs\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Jak přihlásit kandidáty?",
                                "en": "Howto enroll candidates?"
                            },
                            "answer": {
                                "cs": "Lorem Ipsum Dolor Sit Amet...",
                                "en": "Lorem Ipsum Dolor Sit Amet..."
                            },
                            "faq_category": {
                                "id": 1,
                                "icon": "http://example.com/icon/1.jpg",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/faq-categories\/2"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }


### Create a Faq [POST]

+ Request (applicaton/json)

    + Attributes
        + faq_category (number, required) - Id of the FAQ Category to which the FAQ belongs
        + title (object, required) - Title of the FAQ
        + answer (object, required) - Answer to the FAQ

    + Body

            {
                "faq_category": 1,
                "title": {
                    "cs": "Jak něco udělám?",
                    "en": "How do I do sth?"
                },
                "answer": {
                    "cs": "Prostě to udělej!",
                    "en": "Just do it!"
                }
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 3,
                "_links": {
                    "self": {
                        "href": "\/api\/faqs\/3"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Jak něco udělám?",
                        "en": "How do I do sth?"
                    },
                    "answer": {
                        "cs": "Prostostě to udělej!",
                        "en": "Just do it!"
                    },
                    "faq_category": {
                        "id": 1,
                        "icon": "http://example.com/icon/1.jpg",
                        "_links": {
                            "self": {
                                "href": "\/api\/faq-categories\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Generál Pomoc",
                                "en": "General Help"
                            }
                        }
                    }
                }
            }
        }


## FAQ Category's FAQs Collection [/api/faq-categories/{faq_category_id}/faqs]

+ Parameters
    + faq_category_id (number, required) - ID of the FAQ Category

### List FAQs belonging to FAQ Category [GET]

Retrieves all FAQs belonging to the given FAQ Category.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "faqs": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/faqs\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Jak založit účet společnosti?",
                                "en": "How to create a company account?"
                            },
                            "answer": {
                                "cs": "Lorem Ipsum Dolor Sit Amet...",
                                "en": "Lorem Ipsum Dolor Sit Amet..."
                            },
                            "faq_category": {
                                "id": 1,
                                "icon": "http://example.com/icon/1.jpg",
                                "_links": {
                                    "self": {
                                        "href": "FaqCategories:read"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/faqs\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Jak přihlásit kandidáty?",
                                "en": "How to enroll candidates?"
                            },
                            "answer": {
                                "cs": "Lorem Ipsum Dolor Sit Amet...",
                                "en": "Lorem Ipsum Dolor Sit Amet..."
                            },
                            "faq_category": {
                                "id": 1,
                                "icon": "http://example.com/icon/1.jpg",
                                "_links": {
                                    "self": {
                                        "href": "FaqCategories:read"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

## FAQ Categories Collection [/api/faq-categories]

### List FAQ Categories [GET]

Retrieves all FAQ categories.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "faq_categories": [
                    {
                        "id": 1,
                        "icon": "http://example.com/icon/1.jpg",
                        "_links": {
                            "self": {
                                "href": "\/api\/faq-categories\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Pracovní nabídky",
                                "en": "Jobs"
                            },
                            "faqs": [
                                {
                                    "id": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/faqs\/1"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Jak založit účet společnosti?",
                                            "en": "How to create a company account?"
                                        },
                                        "answer": {
                                            "cs": "Lorem Ipsum Dolor Sit Amet...",
                                            "en": "Lorem Ipsum Dolor Sit Amet..."
                                        }
                                    }
                                },
                                {
                                    "id": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/faqs\/2"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Jak přihlásit kandidáty?",
                                            "en": "Howto enroll candidates?"
                                        },
                                        "answer": {
                                            "cs": "Lorem Ipsum Dolor Sit Amet...",
                                            "en": "Lorem Ipsum Dolor Sit Amet..."
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": 2,
                        "icon": "http://example.com/icon/2.jpg",
                        "_links": {
                            "self": {
                                "href": "\/api\/faq-categories\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Uživatelé",
                                "en": "Users"
                            },
                            "faqs": [
                                {
                                    "id": 3,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/faqs\/3"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Jak přihlásit kandidáty?",
                                            "en": "Howto enroll candidates?"
                                        },
                                        "answer": {
                                            "cs": "Lorem Ipsum Dolor Sit Amet...",
                                            "en": "Lorem Ipsum Dolor Sit Amet..."
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        }

### Create a Faq Category [POST]

+ Request (application/json)

    + Attributes
        + icon (string, required) - Static URL of the FAQ Category icon image.
        + title (object, required) - Title of the FAQ Category

    + Body

            {
                "icon": "http://example.com/icon/1.jpg",
                "title": {
                    "cs": "Generál Pomoc",
                    "en": "General Help"
                }
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 1,
                "icon": "http://example.com/icon/1.jpg",
                "_links": {
                    "self": {
                        "href": "\/api\/faq-categories\/2"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Generál Pomoc",
                        "en": "General Help"
                    }
                }
            }
        }


## Faq [/api/faqs/{id}]

+ Attributes
    + id (number, required) - Id of the Faq
    + embedded.title (object, required) - Localized title of the Faq
    + embedded.answer (object, required) - Localized answer of the Faq
    
+ Parameters
    + id (number, required) - Id of the Faq

### Retrieve a Faq [GET]

Retrieves a Faq with the given Id.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "_links": {
                "self": {
                    "href": "\/api\/faqs\/1"
                }
            },
            "_embedded": {
                "title": {
                    "en": "What is impossible?",
                    "cs": "Co je nemožné?"
                },
                "answer": {
                    "en": "Nothing is impossible!",
                    "cs": "Nic není nemožné!"
                },
                "faq_category": {
                    "id": 1,
                    "_links": {
                        "self": {
                            "href": "\/api\/faq-categories\/1"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Testování kandidátů",
                            "en": "Candidate testing"
                        }
                    }
                }
            }
        }

### Update a Faq [PUT]

Updates a Faq with the given Id.

+ Request (application/json)

        {
            "faq_category": 2,
            "title": {
                "cs": "Co je nemožné?",
                "en": "What is impossible?"
            },
            "answer": {
                "cs": "Nic není nemožné!",
                "en": "Nothing is impossible!"
            }
        }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "_links": {
                    "self": {
                        "href": "\/api\/faqs\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "en": "What is impossible?",
                        "cs": "Co je nemožné?"
                    },
                    "answer": {
                        "en": "Nothing is impossible!",
                        "cs": "Nic není nemožné!"
                    },
                    "faq_category": {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/faq-categories\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Testování kandidátů",
                                "en": "Candidate testing"
                            }
                        }
                    }
                }
            }
        }

## Faq Category [/api/faq-categories/{id}]

+ Attributes
    + id (number, required) - Id of the Faq Category
    + icon (string, required) - Static URL of the FAQ Category icon image
    + embedded.title (object, required) - Localized title of the category
    
+ Parameters
    + id (number, required) - Id of the Faq Category

### Retrieve a Faq Category [GET]

Retrieves a Faq Category with the given Id.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "icon": "http://example.com/icon/1.jpg",
            "_links": {
                "self": {
                    "href": "\/api\/faq-categories\/1"
                }
            },
            "_embedded": {
                "title": {
                    "cs": "Generál Pomoc",
                    "en": "General Help"
                }
            }
        }

### Update a Faq Category [PUT]

Updates a Faq Category with the given Id.

+ Request (application/json)

        {
            "icon": "http://example.com/icon/2.jpg",
            "title": {
                "cs": "Testování kandidátů",
                "en": "Candidate testing"
            }
        }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "icon": "http://example.com/icon/2.jpg",
                "_links": {
                    "self": {
                        "href": "\/api\/faq-categories\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "en": "Candidate testing",
                        "cs": "Testování kandidátů"
                    }
                }
            }
        }


# Group Mobile App Feedback

## Mobile App Feedback Collection [/api/mobile-app-feedbacks]

### List Mobile App Feedbacks [GET]

Retrieves all Mobile App Feedbacks. Only users with support role can perform this action.

+ Response 200 (application/hal+json)

        {
          "_embedded": {
            "mobile_app_feedbacks": [
              {
                "id": 1,
                "name": "John Doe",
                "text": "I like it!",
                "created": "2016-10-28T11:18:09+0200",
                "_links": {
                  "self": {
                    "href": "MobileAppFeedback:read"
                  }
                }
              },
              {
                "id": 2,
                "name": "Amy Doe",
                "text": "My husband likes it, but I love it!",
                "created": "2016-10-28T11:18:09+0200",
                "_links": {
                  "self": {
                    "href": "MobileAppFeedback:read"
                  }
                }
              }
            ]
          }
        }

### Create a Faq [POST]

+ Request (applicaton/json)

    + Attributes
        + name (number, required) - Name of the author
        + text (object, required) - Text of the feedback

    + Body

            {
                "name": "John Doe",
                "text": "I like it!"
            }

+ Response 201 (application/hal+json)

        {
          "ok": true,
          "inserted": {
            "id": 1001,
            "name": "John Doe",
            "text": "I like it!",
            "created": "2016-10-28T11:18:21+0200",
            "_links": {
              "self": {
                "href": "MobileAppFeedback:read"
              }
            }
          }
        }


## Mobile App Feedback [/api/mobile-app-feedbacks/{id}]

+ Attributes
    + id (number, required) - Id of the Mobile App Feedback
    + name (string, optional) - Name of the feedbacker
    + text (string, optional) - Text of the feedback
    + created (string, required) - Date when the entity was created
    
+ Parameters
    + id (number, required) - Id of the Mobile App Feedback

### Retrieve a Mobile App Feedback [GET]

Retrieves a Mobile App Feedback with the given Id.

+ Response 200 (application/hal+json)

        {
          "id": 1,
          "name": "John Doe",
          "text": "I like it!",
          "created": "2016-10-28T11:18:31+0200",
          "_links": {
            "self": {
              "href": "MobileAppFeedback:read"
            }
          }
        }

### Update a Mobile App Feedback [PUT]

Updates a Mobile App Feedback with the given Id. Only users with support role can perform this action.

+ Request (application/json)

        {
            "name": "John Doe",
            "text": "Actually, I do love it!"
        }

+ Response 200 (application/hal+json)

        {
          "ok": true,
          "updated": {
            "id": 1,
            "name": "Johnny Doe",
            "text": "I love it!",
            "created": "2016-10-28T11:18:36+0200",
            "_links": {
              "self": {
                "href": "MobileAppFeedback:read"
              }
            }
          }
        }

# Group Forgotten Password

## Forgotten Passwords Collection [/api/forgotten-passwords]

### Create a Forgotten Password [POST]

Creates a Forgotten Password for User with the given email address.

+ Request (application/json)

    + Attributes
        + email (string, required) - Email address of the User
        + return_url (string, required) - URL to redirect the User to, where he can change his password

    + Body

            {
                "email": "john.doe@example.com",
                "return_url": "https://example.com"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "created": "2015-10-23T14:23:14+0200",
                "expires": "2015-10-24T14:23:14+0200",
                "hash": "1redpefga0c4x90",
                "id": 6,
                "_links": {
                    "self": {
                        "href": "\/api\/forgotten-passwords\/6"
                    }
                }
            }
        }


## Forgotten Password [/api/forgotten-passwords/{id}]

+ Attributes
    + id (number, required) - Id of the Forgotten Password
    + return_url (string, required) - URL to redirect the User to, where he can change his password
    + created (string, required) - When was the Forgotten Password created
    + expires (string, required) - When the Forgotten Password expires
    + hash (string, required) - Hash you use in request to change your password (PUT /users/me)
    + used (string, optional) - When was the Forgotten password used.

+ Parameters
    + id (number, required) - Id of the Forgotten Password

### Retrieve Forgotten Password details [GET]

Retrieves details of Forgotten Password with the given id. The Forgotten Password must belong to you and you must be signed in.

+ Response 200 (application/hal+json)

        {
            "created": "2015-10-23T14:23:16+0200",
            "expires": "2015-10-24T14:23:15+0200",
            "hash": "abcd123",
            "return_url": "https://example.com/",
            "id": 1,
            "_links": {
                "self": {
                    "href": "\/api\/forgotten-passwords\/1"
                }
            }
        }



# Group Job Offers 

## Job Offers Collection [/api/job-offers?limit={limit}&page={page}&sort={sort}&state={state}&state-category={state_category}&job-type={job_type}&job-category={job_category}&location={location}&search={search}]

+ Parameters
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"
    + state (string, optional) - Filters JobOffers by their state. The state can be 'awaiting-payment', 'awaiting-approval', 'awaiting-validity', 'unapproved', 'active', 'expired' and 'closed'.
    + state_category (string, optional) - Filters jobOffers by their state category. The state category can be 'category-waiting', 'category-active' and 'category-inactive'.
    + job_type (string, optional) - Filters by Job Type
    + job_category (number, optional) - Filters by Job Category
    + location (string, optional) - Filters JobOffers by location
    + search (string, optional) - Full text search on the Job Offers. Considers Job Offer title, description, Job Types title, locality and Job Category title.

### List Job Offers [GET]

Lists Job Offers.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_offers": [
                    {
                        "id": 2,
                        "created": "2016-02-06T19:21:44+0100",
                        "valid_from": "2016-02-06T19:21:44+0100",
                        "valid_to": "2016-04-22T19:21:44+0100",
                        "location_string": "Praha",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offers\/2"
                            },
                            "company": {
                                "href": "\/api\/companies\/2"
                            },
                            "job": {
                                "href": "\/api\/jobs\/2"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": [],
                            "number_of_applications": 3,
                            "number_of_new_applications": 1,
                            "current_total_budget": 5000,
                            "current_remaining_budget": 4500,
                            "state": "awaiting-approval",
                            "state_category": "category-waiting",
                            "company": {
                              "id": 2,
                              "name": "Microsoft",
                              "created": "2015-11-06T16:23:46+0100",
                              "webalized": "microsoft",
                              "address": "Spálená 1",
                              "city": "Praha",
                              "country": "Česká republika",
                              "public_email": "public.john.doe@example.com",
                              "logo": "https://assets.onestore.ms/cdnfiles/onestorerolling-1603-16000/shell/v3/images/logo/microsoft.png",
                              "description": {
                                "cs": "Lorem ipsum, ..."
                              }
                            },
                            "job_offer_reactions": [
                              {
                                "id": 1,
                                "type": "like",
                                "created": "2016-03-31T17:59:24"
                              },
                              {
                                "id": 2,
                                "type": "dislike",
                                "created": "2016-03-31T17:59:24"
                              }
                            ],
                            "job_types": [
                                {
                                    "id": "full-time",
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-types\/full-time"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Pln\u00fd \u00favazek"
                                        }
                                    }
                                }
                            ],
                            "job_categories": [
                                {
                                    "id": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-categories\/1"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "en": "Administrative",
                                            "cs": "Obchodní zástupce"
                                        }
                                    }
                                }
                            ],
                            "new_application_mails": [
                                "filip@hiri.cz",
                                "matej@example.com"
                            ]
                        }
                    },
                    {
                        "id": 1,
                        "created": "2016-02-06T19:21:44+0100",
                        "valid_from": "2016-02-06T19:21:44+0100",
                        "valid_to": "2016-03-06T19:21:44+0100",
                        "location_string": "Praha, \u010cesk\u00e1 republika",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offers\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                              "cs": "Obchodník",
                              "en": "Job like a mother fucker"
                            },
                            "description": {
                              "cs": "Hledáme obchodníka",
                              "en": "Job like a mother fucker Desc"
                            },
                            "number_of_applications": 3,
                            "number_of_new_applications": 1,
                            "current_total_budget": 10000,
                            "current_remaining_budget": 3000,
                            "state": "awaiting-approval",
                            "state_category": "category-waiting",
                            "company": {
                              "id": 1,
                              "name": "Hiri.cz",
                              "created": "2015-11-06T16:23:46+0100",
                              "webalized": "hiri-cz",
                              "address": "Spálená 1",
                              "city": "Praha",
                              "country": "Česká republika",
                              "public_email": "public.john.doe@example.com",
                              "logo": "https://pbs.twimg.com/profile_images/619236233135288320/DOJwW2Y0.png",
                              "description": {
                                "cs": "Lorem ipsum, ..."
                              }
                            },
                            "job_types": [
                                {
                                    "id": "full-time",
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-types\/full-time"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Pln\u00fd \u00favazek"
                                        }
                                    }
                                },
                                {
                                    "id": "part-time",
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-types\/part-time"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "\u010c\u00e1ste\u010dn\u00fd \u00favazek"
                                        }
                                    }
                                }
                            ],
                            "job_categories": [
                                {
                                    "id": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-categories\/1"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "en": "Administrative",
                                            "cs": "Administrativa"
                                        }
                                    }
                                }
                            ],
                            "new_application_mails": [
                                "filip@example.com",
                                "matej@example.com"
                            ]
                        }
                    }
                ],
                "number_of_waiting": 2,
                "number_of_active": 0,
                "number_of_inactive": 0
            }
        }


### Create Job Offer [POST]

Creates a Job Offer with given parameters.

+ Request (application/json)

    + Attributes
        + valid_from (string, required) - Date from when the Job Offer will be valid.
        + valid_to (string, required) - Date to when the Job Offer will be valid. Must be bigger than valid_from.
        + job (number, optional) - ID of a Job to be paired with.
        + job_types (array, required) - IDs of Job Types
        + job_categories (array, required) - IDs of Job Categories
        + skills (array, required) - IDs of Skills
        + title (object, required) - Localized title of the JobOffer.
        + description (object, required) - Localized description of the JobOffer.
        + locations (array, required) - Array of location strings
        + new_application_mails (array, optional) - Array of email address to which a notification will be sent when a new Application is created for the Job Offer.
        + custom_skills (string, optional) - Optional string containing custom skills

    + Body

            {
                "valid_from": "2016-01-31",
                "valid_to": "2016-02-29",
                "job": 1,
                "job_types": ["full-time", "part-time", "external"],
                "job_categories": [1, 2],
                "skills": [1, 2],
                "locations": [
                    "Praha",
                    "Brno"
                ],
                "title": {
                    "cs": "Hledáme Node.js vývojáře",
                    "en": "Looking for Node.js developers"
                },
                "description": {
                    "cs": "Lorem ipsum dolor sit amet..",
                    "en": "Lorem ipsum dolor sit amet.."
                },
                "new_application_mails": [
                    "filip@example.com",
                    "matej@example.com"
                ],
                "custom_skills": "Jízda tramvají bez držení, Zvedání prkýnka nohou"
            }
    
+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 58,
                "valid_from": "2016-01-31T00:00:00+0100",
                "valid_to": "2016-02-29T00:00:00+0100",
                "created": "2016-02-17T14:02:19+0100",
                "custom_skills": "Jízda tramvají bez držení, Zvedání prkýnka nohou",
                "_links": {
                    "self": {
                        "href": "\/api\/job-offers\/58"
                    },
                    "company": {
                        "href": "\/api\/companies\/1"
                    },
                    "job": {
                        "href": "\/api\/jobs\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Hled\u00e1me Node.js v\u00fdvoj\u00e1\u0159e",
                        "en": "Looking for Node.js developers"
                    },
                    "description": {
                        "cs": "Lorem ipsum dolor sit amet..",
                        "en": "Lorem ipsum dolor sit amet.."
                    },
                    "number_of_applications": 0,
                    "number_of_new_applications": 0,
                    "current_total_budget": 0,
                    "current_remaining_budget": 0,
                    "state": "awaiting-payment",
                    "state_category": "category-waiting",
                    "company": {
                        "id": 1,
                        "name": "Hiri.cz",
                        "webalized": "hiri-cz",
                        "created": "2016-02-17T14:02:13+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    },
                    "job": {
                        "id": 1,
                        "created": "2016-02-17T14:02:13+0100",
                        "can_candidate_use_other_cute_languages": true,
                        "_links": {
                            "self": {
                                "href": "\/api\/jobs\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "candidates": {
                                "href": "\/api\/candidates?job_id=1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": [],
                            "intro": [],
                            "state": "closed",
                            "number_of_candidates": 0,
                            "number_of_completed_candidates": 0,
                            "number_of_tests": 0
                        }
                    },
                    "job_types": [
                        {
                            "id": "full-time",
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-types\/full-time"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Pln\u00fd \u00favazek"
                                }
                            }
                        },
                        {
                            "id": "part-time",
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-types\/part-time"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "\u010c\u00e1ste\u010dn\u00fd \u00favazek"
                                }
                            }
                        },
                        {
                            "id": "external",
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-types\/external"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Extern\u00ed spolupr\u00e1ce"
                                }
                            }
                        }
                    ],
                    "job_categories": [
                        {
                            "id": 1,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/1"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "en": "Administrative",
                                    "cs": "Administrativa"
                                },
                                "cv_price": []
                            }
                        },
                        {
                            "id": 2,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/2"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "en": "Banking sector",
                                    "cs": "Bankovn\u00ed sektor"
                                },
                                "cv_price": []
                            }
                        }
                    ],
                    "skills": [
                        {
                            "id": 1,
                            "_links": {
                                "self": {
                                    "href": "\/api\/skills\/1"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "en": "PHP Programmer",
                                    "cs": "PHP Program\u00e1tor"
                                }
                            }
                        },
                        {
                            "id": 2,
                            "_links": {
                                "self": {
                                    "href": "\/api\/skills\/2"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "en": "JavaScript",
                                    "cs": "JavaScript"
                                }
                            }
                        }
                    ],
                    "locations": [
                        "Praha",
                        "Brno"
                    ],
                    "new_application_mails": [
                        "filip@example.com",
                        "matej@example.com"
                    ]
                }
            }
        }
        

## Company's Job Offers Collection [/api/companies/{company_id}/job-offers?limit={limit}&page={page}&sort={sort}&state={state}&state-category={state_category}&job-type={job_type}&job-category={job_category}&location={location}&search={search}]

+ Parameters
    + company_id (number, optional) - Id of the company which the jobs belongs to
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"
    + state (string, optional) - Filters JobOffers by their state. The state can be 'awaiting-payment', 'awaiting-approval', 'awaiting-validity', 'unapproved', 'active', 'expired' and 'closed'.
    + state_category (string, optional) - Filters jobOffers by their state category. The state category can be 'category-waiting', 'category-active' and 'category-inactive'.
    + job_type (string, optional) - Filters by Job Type
    + job_category (number, optional) - Filters by Job Category
    + location (string, optional) - Filters JobOffers by location
    + search (string, optional) - Full text search on the Job Offers. Considers Job Offer title, description, Job Types title, locality and Job Category title.

### List Company's Job Offers [GET]

List Job Offers belonging to the Company with the given ID.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_offers": [
                    {
                      "id": 1,
                      "created": "2016-02-06T19:21:44+0100",
                      "valid_from": "2016-02-06T19:21:44+0100",
                      "valid_to": "2016-04-06T19:21:44+0100",
                      "_links": {
                          "self": {
                              "href": "\/api\/job-offers\/2"
                          },
                          "company": {
                              "href": "\/api\/companies\/2"
                          },
                          "job": {
                              "href": "\/api\/jobs\/2"
                          }
                      },
                      "_embedded": {
                          "title": {
                            "cs": "Manager skladu - active",
                            "en": "Warehouse manager"
                          },
                          "description": {
                            "cs": "Manager skladu Desc",
                            "en": "Warehouse manager Desc"
                          },
                          "current_total_budget": 5000,
                          "current_remaining_budget": 4500,
                          "number_of_applications": 3,
                          "number_of_new_applications": 4,
                          "state": "active",
                          "state_category": "category-active",
                          "job_types": [],
                          "job_categories": [],
                          "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                          ],
                          "locations": []
                      }
                    },
                    {
                      "id": 2,
                      "created": "2016-02-06T19:21:44+0100",
                      "valid_from": "2016-02-06T19:21:44+0100",
                      "valid_to": "2016-04-06T19:21:44+0100",
                      "_links": {
                          "self": {
                              "href": "\/api\/job-offers\/1"
                          },
                          "company": {
                              "href": "\/api\/companies\/1"
                          },
                          "job": {
                              "href": "\/api\/jobs\/1"
                          }
                      },
                      "_embedded": {
                            "title": {
                            "cs": "Obchodník 2 - awaiting payment",
                            "en": "Job like a mother fucker 2"
                            },
                            "description": {
                            "cs": "Hledáme obchodníka 2",
                            "en": "Job like a mother fucker Desc 2"
                            },
                            "number_of_applications": 0,
                            "number_of_new_applications": 2,
                            "current_total_budget": 10000,
                            "current_remaining_budget": 10000,
                            "state": "awaiting-payment",
                            "state_category": "category-waiting",
                            "job_types": [],
                            "job_categories": [],
                            "new_application_mails": [
                                "matej@example.com",
                                "filip@example.com"
                            ],
                            "locations": []
                      }
                    },
                    {
                      "id": 3,
                      "created": "2016-02-06T19:21:44+0100",
                      "valid_from": "2016-02-06T19:21:44+0100",
                      "valid_to": "2016-04-06T19:21:44+0100",
                      "_links": {
                          "self": {
                              "href": "\/api\/job-offers\/1"
                          },
                          "company": {
                              "href": "\/api\/companies\/1"
                          },
                          "job": {
                              "href": "\/api\/jobs\/1"
                          }
                      },
                      "_embedded": {
                          "title": {
                            "cs": "Obchodník 3 - awaiting approval",
                            "en": "Job like a mother fucker 3"
                          },
                          "description": {
                            "cs": "Hledáme obchodníka 3",
                            "en": "Job like a mother fucker Desc 3"
                          },
                          "number_of_applications": 0,
                          "number_of_new_applications": 3,
                          "current_total_budget": 10000,
                          "current_remaining_budget": 10000,
                          "state": "awaiting-approval",
                          "state_category": "category-waiting",
                          "job_types": [],
                          "job_categories": [],
                          "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                          ],
                          "locations": []
                      }
                    },
                    {
                      "id": 4,
                      "created": "2016-02-06T19:21:44+0100",
                      "valid_from": "2016-03-06T19:21:44+0100",
                      "valid_to": "2016-04-06T19:21:44+0100",
                      "_links": {
                          "self": {
                              "href": "\/api\/job-offers\/1"
                          },
                          "company": {
                              "href": "\/api\/companies\/1"
                          },
                          "job": {
                              "href": "\/api\/jobs\/1"
                          }
                      },
                      "_embedded": {
                          "title": {
                            "cs": "Obchodník 4 - awaiting validity",
                            "en": "Job like a mother fucker 4"
                          },
                          "description": {
                            "cs": "Hledáme obchodníka 4",
                            "en": "Job like a mother fucker Desc 4"
                          },
                          "number_of_applications": 0,
                          "number_of_new_applications": 15,
                          "current_total_budget": 10000,
                          "current_remaining_budget": 10000,
                          "state": "awaiting-validity",
                          "state_category": "category-waiting",
                          "job_types": [],
                          "job_categories": [],
                          "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                          ],
                          "locations": []
                      }
                    },
                    {
                      "id": 5,
                      "created": "2016-02-06T19:21:44+0100",
                      "valid_from": "2016-02-06T19:21:44+0100",
                      "valid_to": "2016-04-06T19:21:44+0100",
                      "_links": {
                          "self": {
                              "href": "\/api\/job-offers\/1"
                          },
                          "company": {
                              "href": "\/api\/companies\/1"
                          },
                          "job": {
                              "href": "\/api\/jobs\/1"
                          }
                      },
                      "_embedded": {
                          "title": {
                            "cs": "Obchodník 5 - unapproved",
                            "en": "Job like a mother fucker 5"
                          },
                          "description": {
                            "cs": "Hledáme obchodníka 5",
                            "en": "Job like a mother fucker Desc 5"
                          },
                          "number_of_applications": 0,
                          "number_of_new_applications": 1,
                          "current_total_budget": 10000,
                          "current_remaining_budget": 10000,
                          "state": "unapproved",
                          "state_category": "category-waiting",
                          "job_types": [],
                          "job_categories": [],
                          "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                          ],
                          "locations": []
                      }
                    },
                    {
                      "id": 6,
                      "created": "2016-02-06T19:21:44+0100",
                      "valid_from": "2016-02-06T19:21:44+0100",
                      "valid_to": "2016-04-06T19:21:44+0100",
                      "_links": {
                          "self": {
                              "href": "\/api\/job-offers\/1"
                          },
                          "company": {
                              "href": "\/api\/companies\/1"
                          },
                          "job": {
                              "href": "\/api\/jobs\/1"
                          }
                      },
                      "_embedded": {
                          "title": {
                            "cs": "Obchodník 6 - out of budget",
                            "en": "Job like a mother fucker 6"
                          },
                          "description": {
                            "cs": "Hledáme obchodníka 6",
                            "en": "Job like a mother fucker Desc 6"
                          },
                          "number_of_applications": 66,
                          "number_of_new_applications": 20,
                          "current_total_budget": 6500,
                          "current_remaining_budget": 0,
                          "state": "out-of-budget",
                          "state_category": "category-active",
                          "job_types": [],
                          "job_categories": [],
                          "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                          ],
                          "locations": []
                      }
                    },
                    {
                      "id": 7,
                      "created": "2016-02-06T19:21:44+0100",
                      "valid_from": "2016-02-06T19:21:44+0100",
                      "valid_to": "2016-04-06T19:21:44+0100",
                      "closed": "2016-02-08T19:21:44+0100",
                      "_links": {
                          "self": {
                              "href": "\/api\/job-offers\/1"
                          },
                          "company": {
                              "href": "\/api\/companies\/1"
                          },
                          "job": {
                              "href": "\/api\/jobs\/1"
                          }
                      },
                      "_embedded": {
                          "title": {
                            "cs": "Obchodník 7 - closed",
                            "en": "Job like a mother fucker 7"
                          },
                          "description": {
                            "cs": "Hledáme obchodníka 7",
                            "en": "Job like a mother fucker Desc 7"
                          },
                          "number_of_applications": 10,
                          "number_of_new_applications": 16,
                          "current_total_budget": 6500,
                          "current_remaining_budget": 1000,
                          "state": "closed",
                          "state_category": "category-inactive",
                          "job_types": [],
                          "job_categories": [],
                          "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                          ],
                          "locations": []
                      }
                    },
                    {
                      "id": 8,
                      "created": "2016-01-06T19:21:44+0100",
                      "valid_from": "2016-01-06T19:21:44+0100",
                      "valid_to": "2016-02-06T19:21:44+0100",
                      "_links": {
                          "self": {
                              "href": "\/api\/job-offers\/8"
                          },
                          "company": {
                              "href": "\/api\/companies\/1"
                          },
                          "job": {
                              "href": "\/api\/jobs\/8"
                          }
                      },
                      "_embedded": {
                          "title": {
                            "cs": "Minister mágie - expired",
                            "en": "Minister of magic"
                          },
                          "description": {
                            "cs": "Minister mágie Desc",
                            "en": "Minister of magic Desc"
                          },
                          "number_of_applications": 22,
                          "number_of_new_applications": 0,
                          "current_total_budget": 100000,
                          "current_remaining_budget": 2500,
                          "state": "expired",
                          "state_category": "category-inactive",
                          "job_types": [],
                          "job_categories": [],
                          "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                          ],
                          "locations": []
                      }
                    }
                ],
                "number_of_waiting": 4,
                "number_of_active": 2,
                "number_of_inactive": 2
            }
        }


## Job's Job Offers Collection [/api/jobs/{job_id}/job-offers?limit={limit}&page={page}&sort={sort}&state={state}&state-category={state_category}&job-type={job_type}&job-category={job_category}&location={location}&search={search}]

+ Parameters
    + job_id (number, optional) - Id of the company which the jobs belongs to
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"
    + state (string, optional) - Filters JobOffers by their state. The state can be 'awaiting-payment', 'awaiting-approval', 'awaiting-validity', 'unapproved', 'active', 'expired' and 'closed'.
    + state_category (string, optional) - Filters jobOffers by their state category. The state category can be 'category-waiting', 'category-active' and 'category-inactive'.
    + job_type (string, optional) - Filters by Job Type
    + job_category (number, optional) - Filters by Job Category
    + location (string, optional) - Filters JobOffers by location
    + search (string, optional) - Full text search on the Job Offers

### List Job's Job Offers [GET]

List Job Offers belonging to the Job with the given ID.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_offers": [
                    {
                        "id": 1,
                        "created": "2016-02-06T19:21:44+0100",
                        "valid_from": "2016-02-06T19:21:44+0100",
                        "valid_to": "2016-03-06T19:21:44+0100",
                        "location_string": "Praha, \u010cesk\u00e1 republika",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offers\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                              "cs": "Obchodník",
                              "en": "Job like a mother fucker"
                            },
                            "description": {
                              "cs": "Hledáme obchodníka",
                              "en": "Job like a mother fucker Desc"
                            },
                            "number_of_applications": 0,
                            "number_of_new_applications": 0,
                            "current_total_budget": 10000,
                            "current_remaining_budget": 300,
                            "state": "awaiting-approval",
                            "state_category": "category-waiting",
                            "job_types": [
                                {
                                    "id": "part-time",
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-types\/part-time"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "\u010c\u00e1ste\u010dn\u00fd \u00favazek"
                                        }
                                    }
                                }
                            ],
                            "job_categories": [
                                {
                                    "id": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-categories\/1"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "en": "Administrative",
                                            "cs": "Administrativa"
                                        }
                                    }
                                }
                            ],
                            "new_application_mails": [
                                "filip@example.com",
                                "matej@example.com"
                            ]
                        }
                    }
                ],
                "number_of_waiting": 1,
                "number_of_active": 1,
                "number_of_inactive": 1
            }
        }

## Job Offer [/api/job-offers/{id}]


+ Parameters
    + id (number, required) - ID of the Job Offer.

+ Attributes
    + id (number, required) - ID of the Job Offer.
    + created (string, required) - Date when the Job Offer has been created.
    + closed (string, optional) - Date when the Job Offer has been closed.
    + paid (string, optional) - Date wen the Job offer has been paid.
    + approved (string, optional) - Date when the Job Offer has been approved.
    + unapproved (string, optional) - Date when the Job Offer has been unapproved.
    + published (string, optional) - Date when the Job Offer has been published.
    + closed (string, optional) - Date from which the Job will be closed.
    + custom_skills (string, optional) - Optional string containing custom skills
    + embedded.current_total_budget (number, required) - Current total budget of the Job Offer.
    + embedded.current_remaining_budget (number, required) - Current remaining budget of the Job Offer.
    + embedded.current_price_per_c_v (number, required) - Current price per CV of the Job Offer.
    + embedded.job_offer_budgets (array, required) - Array of JobOfferBudgets.
    + embedded.locations (array, required) - Array of location strings of the Job Offer.
    + embedded.title (object, required) - Localized title of the Job Offer.
    + embedded.description (object, required) - Localized description of the Job Offer.
    + embedded.company (object, required) - Company to which the Job Offer belongs.
    + embedded.state (string, required) - State of the Job Offer. Can be 'awaiting-payment', 'awaiting-approval', 'awaiting-validity', 'unapproved', 'active', 'expired', 'closed' and 'out-of-budget'.
    + embedded.state_category (string, required) - State category of the Job Offer. Can be 'category-waiting', 'category-active' and 'category-inactive'.
    + embedded.new_application_mails (array, required) - Array of email address to which a notification will be sent when a new Application is created for the Job Offer.
    + embedded.job_categories (array, required) - Array od Job Categories assigned to the Job Offer
    + embedded.locations (array, required) - Array of Job Locations assigned to the Job Offer
    + embedded.skills (array, required) - Array of Skills assigned to the Job Offer
    + embedded.job_types (array, required) - Array of Job Types assigned to the Job Offer
    + embedded.number_of_applications_in_state (array, required) - Numbers of applications in state

### Retrieve a Job Offer [GET]

Retrieves a Job Offer with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "created": "2016-02-17T14:07:35+0100",
            "valid_from": "2016-02-06T19:21:44+0100",
            "valid_to": "2016-04-22T19:21:44+0100",
            "_links": {
                "self": {
                    "href": "\/api\/job-offers\/1"
                },
                "company": {
                    "href": "\/api\/companies\/1"
                },
                "job": {
                    "href": "\/api\/jobs\/1"
                }
            },
            "_embedded": {
                "title": {
                    "cs": "Obchodník",
                    "en": "Job like a mother fucker"
                },
                "description": {
                    "cs": "Hledáme obchodníka",
                    "en": "Job like a mother fucker Desc"
                },
                "current_total_budget": 10000,
                "current_remaining_budget": 8000,
                "current_price_per_c_v": 400,
                "state": "awaiting-approval",
                "state_category": "category-waiting",
                "number_of_applications": 12,
                "number_of_new_applications": 4,
                "company": {
                    "id": 1,
                    "name": "Hiri.cz",
                    "webalized": "hiri-cz",
                    "created": "2016-02-17T14:07:35+0100",
                    "logo": "http://loremflickr.com/120/80",
                    "cover_image": "http://loremflickr.com/1140/450",
                    "description": {
                      "cs": "Lorem ipsum, ..."
                    },
                    "_links": {
                        "self": {
                            "href": "\/api\/companies\/1"
                        },
                        "jobs": {
                            "href": "\/api\/jobs?company_id=1"
                        },
                        "jobs:active": {
                            "href": "\/api\/jobs?company_id=1&active=1"
                        }
                    },
                    "_embedded": {
                        "company_profile": {
                            "id": 1,
                            "reasons": {
                                "1": "lalala",
                                "2": "nananana",
                                "3": "batman"
                            },
                            "linkedin_link": "hiri-cz",
                            "facebook_link": "Hiri-cz",
                            "twitter_link": "hiiiri",
                            "_links": {
                                "self": {
                                    "href": "\/api\/company-profiles\/1"
                                }
                            }
                        }
                    }
                },
                "job": {
                    "id": 1,
                    "created": "2016-02-17T14:07:35+0100",
                    "can_candidate_use_other_cute_languages": true,
                    "_links": {
                        "self": {
                            "href": "\/api\/jobs\/1"
                        },
                        "company": {
                            "href": "\/api\/companies\/1"
                        },
                        "candidates": {
                            "href": "\/api\/candidates?job_id=1"
                        }
                    },
                    "_embedded": {
                        "tests": [
                            {
                                "id": 1,
                                "type": "one-page",
                                "number_of_questions": 4,
                                "maximum_time": 300,
                                "logo": "http://example.com/test/1.jpg",
                                "shuffle_questions": true,
                                "_embedded": {
                                    "average_fill_time": 250,
                                    "questions_count": 10,
                                    "name": {
                                        "cs": "Znalostní test",
                                        "en": "Knowledge test"
                                    },
                                    "intro": {
                                        "cs": "Lorem Ipsum...",
                                        "en": "Lorem Ipsum..."
                                    }
                                }
                            },
                            {
                                "id": 2,
                                "type": "one-page",
                                "number_of_questions": 4,
                                "maximum_time": 1900,
                                "logo": "http://example.com/test/2.jpg",
                                "shuffle_questions": true,
                                "_embedded": {
                                    "average_fill_time": 1575,
                                    "questions_count": 20,
                                    "name": {
                                        "cs": "HTML",
                                        "en": "HTML"
                                    },
                                    "intro": {
                                        "cs": "Lorem Ipsum...",
                                        "en": "Lorem Ipsum..."
                                    }
                                }
                            }
                        ],
                        "cute_tests": [
                            {
                                "id": 1,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/cute-tests\/1"
                                    }
                                },
                                "_embedded": {
                                    "name": {
                                        "cs": "Logické myšlení",
                                        "en": "Logical thinking"
                                    },
                                    "intro": {
                                        "en": "Lorem ipsum...",
                                        "cs": "Lorem ipsum..."
                                    }
                                }
                            },
                            {
                                "id": 2,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/cute-tests\/2"
                                    }
                                },
                                "_embedded": {
                                    "name": {
                                        "cs": "Měření kompetencí",
                                        "en": "Competencies"
                                    },
                                    "intro": {
                                        "en": "Lorem ipsum...",
                                        "cs": "Lorem ipsum..."
                                    }
                                }
                            }
                        ],
                        "title": [],
                        "description": [],
                        "intro": [],
                        "state": "closed",
                        "number_of_candidates": 0,
                        "number_of_completed_candidates": 0,
                        "number_of_tests": 0
                    }
                },
                "job_types": [
                    {
                        "id": "full-time",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-types\/full-time"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Pln\u00fd \u00favazek"
                            }
                        }
                    }
                ],
                "job_categories": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/job-categories\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "Administrative",
                                "cs": "Obchodní zástupce"
                            },
                            "cv_price": {
                              "EUR": 4,
                              "CZK": 200
                            }
                        }
                    }
                ],
                "skills": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "PHP Programmer",
                                "cs": "Obchod"
                            }
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "JavaScript",
                                "cs": "Prodej"
                            }
                        }
                    }
                ],
                "locations": [
                    "Praha"
                ],
                "new_application_mails": [
                    "filip@hiri.cz"
                ],
                "number_of_applications_in_state": {
                  "data": [
                    {
                      "application_state_id": 1,
                      "number_of_applications": 1
                    },
                    {
                      "application_state_id": 2,
                      "number_of_applications": 1
                    },
                    {
                      "application_state_id": 3,
                      "number_of_applications": 0
                    },
                    {
                      "application_state_id": 4,
                      "number_of_applications": 0
                    },
                    {
                      "application_state_id": 5,
                      "number_of_applications": 0
                    }
                  ]
                }
            }
        }

### Update a Job Offer [PUT]

+ Request (application/json)

    + Attributes
        + valid_from (string, required) - Date from when the Job Offer will be valid.
        + valid_to (string, required) - Date to when the Job Offer will be valid. Msut be bigger than valid_from.
        + job (number, required) - ID of the Job
        + job_types (array, required) - IDs of Job Types
        + job_categories (array, required) - IDs of Job Categories
        + title (object, required) - Localized title of the JobOffer.
        + description (object, required) - Localized description of the JobOffer.
        + locations (array, required) - Array of locations strings of the Job Offer.
        + new_application_mails (array, required) - Array of email addresses to which a notification will be sent when a new Application is created for the Job Offer.
        + closed (string, optional) - Date from which the Job will be closed.
        + custom_skills (string, optional) - Optional string containing custom skills
        + approved (string, optional) - Date when the JobOffer was approved. **Note: only superadmin can edit this.**
        + unapproved (string, optional) - Date when the JobOffer was unapproved. **Note: only superadmin can edit this.**


    + Body

            {
                "job_categories": [3],
                "job_types": ["full-time"],
                "skills": [1, 2],
                "locations": [
                    "Praha",
                    "Brno"
                ],
                "title": {
                  "cs": "Hledáme Node.js vývojáře",
                  "en": "Looking for Node.js developers"
                },
                "description": {
                  "cs": "Lorem ipsum dolor sit amet..",
                  "en": "Lorem ipsum dolor sit amet.."
                },
                "new_application_mails": [
                    "filip@example.com",
                    "matej@example.com"
                ]
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "created": "2016-02-17T14:09:39+0100",
                "valid_from": "2016-02-06T19:21:44+0100",
                "valid_to": "2016-03-06T19:21:44+0100",
                "location_string": "Praha, \u010cesk\u00e1 republika",
                "_links": {
                    "self": {
                        "href": "\/api\/job-offers\/1"
                    },
                    "company": {
                        "href": "\/api\/companies\/1"
                    },
                    "job": {
                        "href": "\/api\/jobs\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Hled\u00e1me Node.js v\u00fdvoj\u00e1\u0159e",
                        "en": "Looking for Node.js developers"
                    },
                    "description": {
                        "cs": "Lorem ipsum dolor sit amet..",
                        "en": "Lorem ipsum dolor sit amet.."
                    },
                    "state": "awaiting-payment",
                    "state_category": "category-waiting",
                    "current_total_budget": 5000,
                    "current_remaining_budget": 4500,
                    "company": {
                        "id": 1,
                        "name": "Hiri.cz",
                        "webalized": "hiri-cz",
                        "created": "2016-02-17T14:09:39+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        }
                    },
                    "job": {
                        "id": 1,
                        "created": "2016-02-17T14:09:39+0100",
                        "can_candidate_use_other_cute_languages": true,
                        "_links": {
                            "self": {
                                "href": "\/api\/jobs\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "candidates": {
                                "href": "\/api\/candidates?job_id=1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": [],
                            "intro": [],
                            "state": "closed",
                            "number_of_candidates": 0,
                            "number_of_completed_candidates": 0,
                            "number_of_tests": 0
                        }
                    },
                    "job_types": [
                        {
                            "id": "full-time",
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-types\/full-time"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Pln\u00fd \u00favazek"
                                }
                            }
                        }
                    ],
                    "job_categories": [
                        {
                            "id": 3,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/3"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "en": "Top management",
                                    "cs": "Top management"
                                },
                                "cv_price": []
                            }
                        }
                    ],
                    "skills": [
                        {
                            "id": 1,
                            "_links": {
                                "self": {
                                    "href": "\/api\/skills\/1"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "en": "PHP Programmer",
                                    "cs": "PHP Program\u00e1tor"
                                }
                            }
                        },
                        {
                            "id": 2,
                            "_links": {
                                "self": {
                                    "href": "\/api\/skills\/2"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "en": "JavaScript",
                                    "cs": "JavaScript"
                                }
                            }
                        }
                    ],
                    "locations": [
                        "Praha",
                        "Brno"
                    ],
                    "new_application_mails": [
                        "filip@example.com",
                        "matej@example.com"
                    ]
                }
            }
        }

### Soft delete a Job Offer [DELETE]

Softly deletes a Job Offer.

+ Response 200 (application/json)

        {
            "ok": true
        }


# Group Job Offer Reactions

## Job Offer Reactions Collection [/api/job-offer-reactions?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of reactions returned in the request
    + page (number, optional) - Distance from beginning of the array of available reactions
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Job Offer Reactions [GET]

Lists all Job Offer Reactions.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_offer_reactions": [
                    {
                        "id": 1,
                        "type": "like",
                        "created": "2016-03-31T17:59:24",
                        "_embedded": {
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-20T20:12:38+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting",
                                    "locations": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ],
                                    "job_offer_budgets": [
                                        {
                                            "id": 10,
                                            "price_per_c_v": 400,
                                            "total_budget": 4000,
                                            "_links": {
                                                "self": {
                                                    "href": "\/api\/job-offer-budgets\/10"
                                                },
                                                "currency": {
                                                    "href": "\/api\/currencies\/CZK"
                                                }
                                            },
                                            "_embedded": {
                                                "currency": {
                                                    "id": "CZK",
                                                    "_links": {
                                                        "self": {
                                                            "href": "\/api\/currencies\/CZK"
                                                        }
                                                    },
                                                    "_embedded": {
                                                        "title": []
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "company": {
                                "id": 1,
                                "name": "Hiri.cz",
                                "webalized": "hiri-cz",
                                "created": "2016-05-16T12:11:11+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "description": []
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "type": "like",
                        "created": "2016-03-31T17:59:24",
                        "_embedded": {
                            "job_offer": {
                                "id": 2,
                                "created": "2016-02-20T20:12:38+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/2"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting",
                                    "locations": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ],
                                    "job_offer_budgets": [
                                        {
                                            "id": 11,
                                            "price_per_c_v": 400,
                                            "total_budget": 4000,
                                            "_links": {
                                                "self": {
                                                    "href": "\/api\/job-offer-budgets\/10"
                                                },
                                                "currency": {
                                                    "href": "\/api\/currencies\/CZK"
                                                }
                                            },
                                            "_embedded": {
                                                "currency": {
                                                    "id": "CZK",
                                                    "_links": {
                                                        "self": {
                                                            "href": "\/api\/currencies\/CZK"
                                                        }
                                                    },
                                                    "_embedded": {
                                                        "title": []
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "company": {
                                "id": 1,
                                "name": "Hiri.cz",
                                "webalized": "hiri-cz",
                                "created": "2016-05-16T12:11:11+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "description": []
                                }
                            }
                        }
                    }
                ]
            }
        }


### Create Job Offer Reaction [POST]

Creates Job Offer Reaction with given parameters.

+ Request (application/json)

    + Attributes
        + job_offer (number, required) - ID of the Job Offer
        + type (string, required) - Type of the Reaction. Can be 'like' or 'dislike'.

    + Body

            {
                "job_offer": 1,
                "type": "like"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 1,
                "type": "like",
                "created": "2016-03-31T17:59:24",
                "_embedded": {
                    "job_offer": {
                        "id": 1,
                        "created": "2016-02-20T20:12:38+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offers\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": [],
                            "state": "awaiting-payment",
                            "state_category": "category-waiting",
                            "locations": [],
                            "new_application_mails": [
                                "matej@example.com",
                                "filip@example.com"
                            ],
                            "job_offer_budgets": [
                                {
                                    "id": 10,
                                    "price_per_c_v": 400,
                                    "total_budget": 4000,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-offer-budgets\/10"
                                        },
                                        "currency": {
                                            "href": "\/api\/currencies\/CZK"
                                        }
                                    },
                                    "_embedded": {
                                        "currency": {
                                            "id": "CZK",
                                            "_links": {
                                                "self": {
                                                    "href": "\/api\/currencies\/CZK"
                                                }
                                            },
                                            "_embedded": {
                                                "title": []
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-02-06T21:19:57+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/2"
                            },
                            "companies": {
                                "href": "\/api\/companies?user_id=2"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                            },
                            "_embedded": {
                                "language": {
                                    "id": "cs",
                                    "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    "company": {
                        "id": 1,
                        "name": "Hiri.cz",
                        "webalized": "hiri-cz",
                        "created": "2016-05-16T12:11:11+0200",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        },
                        "_embedded": {
                            "description": []
                        }
                    }
                }
            }
        }

## User's Job Offer Reactions Collection [/api/users/{user_id}/job-offer-reactions?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_id (number, required) - ID of the User
    + limit (number, optional) - Limits number of reactions returned in the request
    + page (number, optional) - Distance from beginning of the array of available reactions
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User's Job Offer Reactions [GET]

Lists Job Offer Reactions belonging to given User.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_offer_reactions": [
                    {
                        "id": 1,
                        "type": "like",
                        "created": "2016-03-31T17:59:24",
                        "_embedded": {
                            "job_offer": {
                                "id": 1,
                                "created": "2016-02-20T20:12:38+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting",
                                    "locations": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ],
                                    "job_offer_budgets": [
                                        {
                                            "id": 10,
                                            "price_per_c_v": 400,
                                            "total_budget": 4000,
                                            "_links": {
                                                "self": {
                                                    "href": "\/api\/job-offer-budgets\/10"
                                                },
                                                "currency": {
                                                    "href": "\/api\/currencies\/CZK"
                                                }
                                            },
                                            "_embedded": {
                                                "currency": {
                                                    "id": "CZK",
                                                    "_links": {
                                                        "self": {
                                                            "href": "\/api\/currencies\/CZK"
                                                        }
                                                    },
                                                    "_embedded": {
                                                        "title": []
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "company": {
                                "id": 1,
                                "name": "Hiri.cz",
                                "webalized": "hiri-cz",
                                "created": "2016-05-16T12:11:11+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "description": []
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "type": "like",
                        "created": "2016-03-31T17:59:24",
                        "_embedded": {
                            "job_offer": {
                                "id": 2,
                                "created": "2016-02-20T20:12:38+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/2"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting",
                                    "locations": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ],
                                    "job_offer_budgets": [
                                        {
                                            "id": 11,
                                            "price_per_c_v": 400,
                                            "total_budget": 4000,
                                            "_links": {
                                                "self": {
                                                    "href": "\/api\/job-offer-budgets\/10"
                                                },
                                                "currency": {
                                                    "href": "\/api\/currencies\/CZK"
                                                }
                                            },
                                            "_embedded": {
                                                "currency": {
                                                    "id": "CZK",
                                                    "_links": {
                                                        "self": {
                                                            "href": "\/api\/currencies\/CZK"
                                                        }
                                                    },
                                                    "_embedded": {
                                                        "title": []
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            },
                            "company": {
                                "id": 1,
                                "name": "Hiri.cz",
                                "webalized": "hiri-cz",
                                "created": "2016-05-16T12:11:11+0200",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "description": []
                                }
                            }
                        }
                    }
                ]
            }
        }

## Job Offer Reaction [/api/job-offer-reaction/{id}]

+ Attributes
    + id (number, required) - ID of the Job Offer Reaction
    + type (string, required) - Type of the Job Offer Reaction. Can be 'like' or 'dislike'.
    + created (string, required) - Date when the Reaction was created.
    + embedded.job_offer (object, required) - The Job Offer
    + embedded.user (object, required) - The User

+ Parameters
    + id (number, required) - ID of the Job Offer Reaction

### Retrieve Job Offer Reaction [GET]

Retrieves Job Offer Reaction with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "type": "like",
            "created": "2016-03-31T17:59:24",
            "_embedded": {
                "job_offer": {
                    "id": 1,
                    "created": "2016-02-20T20:12:38+0100",
                    "_links": {
                        "self": {
                            "href": "\/api\/job-offers\/1"
                        },
                        "company": {
                            "href": "\/api\/companies\/1"
                        },
                        "job": {
                            "href": "\/api\/jobs\/1"
                        }
                    },
                    "_embedded": {
                        "title": [],
                        "description": [],
                        "state": "awaiting-payment",
                        "state_category": "category-waiting",
                        "locations": [],
                        "new_application_mails": [
                            "matej@example.com",
                            "filip@example.com"
                        ],
                        "job_offer_budgets": [
                            {
                                "id": 10,
                                "price_per_c_v": 400,
                                "total_budget": 4000,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offer-budgets\/10"
                                    },
                                    "currency": {
                                        "href": "\/api\/currencies\/CZK"
                                    }
                                },
                                "_embedded": {
                                    "currency": {
                                        "id": "CZK",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/currencies\/CZK"
                                            }
                                        },
                                        "_embedded": {
                                            "title": []
                                        }
                                    }
                                }
                            }
                        ]
                    }
                },
                "user": {
                    "id": 1,
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "created": "2016-02-06T21:19:57+0100",
                    "_links": {
                        "self": {
                            "href": "\/api\/users\/2"
                        },
                        "companies": {
                            "href": "\/api\/companies?user_id=2"
                        },
                        "language": {
                            "href": "\/api\/languages\/cs"
                        }
                    },
                    "_embedded": {
                        "language": {
                            "id": "cs",
                            "_links": {
                                "self": {
                                    "href": "\/api\/languages\/cs"
                                }
                            }
                        }
                    }
                },
                "company": {
                    "id": 1,
                    "name": "Hiri.cz",
                    "webalized": "hiri-cz",
                    "created": "2016-05-16T12:11:11+0200",
                    "address": "Sp\u00e1len\u00e1 1",
                    "city": "Praha",
                    "country": "\u010cesk\u00e1 republika",
                    "first_name_basis": false,
                    "_links": {
                        "self": {
                            "href": "\/api\/companies\/1"
                        },
                        "jobs": {
                            "href": "\/api\/jobs?company_id=1"
                        },
                        "jobs:active": {
                            "href": "\/api\/jobs?company_id=1&active=1"
                        }
                    },
                    "_embedded": {
                        "description": []
                    }
                }
            }
        }

### Update Job Offer Reaction [PUT]

Updates Job Offer Reaction with given ID.

+ Request (application/json)

    + Attributes
        + type (string, optional) - Type of the Job Offer Reaction. Can be 'like' or 'dislike'.

    + Body

            {
                "type": "dislike"
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "type": "like",
                "created": "2016-03-31T17:59:24",
                "_embedded": {
                    "job_offer": {
                        "id": 1,
                        "created": "2016-02-20T20:12:38+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offers\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": [],
                            "state": "awaiting-payment",
                            "state_category": "category-waiting",
                            "locations": [],
                            "new_application_mails": [
                                "matej@example.com",
                                "filip@example.com"
                            ],
                            "job_offer_budgets": [
                                {
                                    "id": 10,
                                    "price_per_c_v": 400,
                                    "total_budget": 4000,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-offer-budgets\/10"
                                        },
                                        "currency": {
                                            "href": "\/api\/currencies\/CZK"
                                        }
                                    },
                                    "_embedded": {
                                        "currency": {
                                            "id": "CZK",
                                            "_links": {
                                                "self": {
                                                    "href": "\/api\/currencies\/CZK"
                                                }
                                            },
                                            "_embedded": {
                                                "title": []
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-02-06T21:19:57+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/2"
                            },
                            "companies": {
                                "href": "\/api\/companies?user_id=2"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                            },
                            "_embedded": {
                                "language": {
                                    "id": "cs",
                                    "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    "company": {
                        "id": 1,
                        "name": "Hiri.cz",
                        "webalized": "hiri-cz",
                        "created": "2016-05-16T12:11:11+0200",
                        "address": "Sp\u00e1len\u00e1 1",
                        "city": "Praha",
                        "country": "\u010cesk\u00e1 republika",
                        "first_name_basis": false,
                        "_links": {
                            "self": {
                                "href": "\/api\/companies\/1"
                            },
                            "jobs": {
                                "href": "\/api\/jobs?company_id=1"
                            },
                            "jobs:active": {
                                "href": "\/api\/jobs?company_id=1&active=1"
                            }
                        },
                        "_embedded": {
                            "description": []
                        }
                    }
                }
            }
        }

### Delete Job Offer Reaction [DELETE]

Deletes Job Offer Reaction with given ID.

+ Response 200 (application/hal+json)

        {"ok": true}

# Group Job Offer Views

## Job Offer Views Collection [/api/job-offer-views?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Job Offer Views [GET]

Lists all Job Offer Views.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_offer_views": [
                    {
                        "id": 1,
                        "created": "2016-04-01T16:39:25+0200",
                        "ip_address": "127.0.0.1",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offer-views\/1"
                            }
                        },
                        "_embedded": {
                            "job_offer": {
                                "id": 1,
                                "created": "2016-04-01T16:39:25+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting",
                                    "locations": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "created": "2016-04-01T16:39:25+0200",
                        "ip_address": "127.0.0.1",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offer-views\/2"
                            }
                        },
                        "_embedded": {
                            "job_offer": {
                                "id": 1,
                                "created": "2016-04-01T16:39:25+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting",
                                    "locations": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            }
                        }
                    }
                ]
            }
        }

### Create Job Offer View [POST]

Creates Job Offer View with given parameters.

+ Request (application/json)

    + Attributes
        + ip_address (string, optional) - IP Address of the View
        + job_offer (number, required) - ID of the Job Offer
        + referrer (string, optional) - Referrer to the view

    + Body

            {
                "job_offer": 1,
                "ip_address": "127.0.0.1",
                "referrer": "google+organic"
            }


+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 5,
                "created": "2016-04-01T16:39:57+0200",
                "referrer": "google+organic",
                "_links": {
                    "self": {
                        "href": "\/api\/job-offer-views\/5"
                    }
                },
                "_embedded": {
                    "job_offer": {
                        "id": 1,
                        "created": "2016-04-01T16:39:57+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offers\/1"
                            },
                            "company": {
                                "href": "\/api\/companies\/1"
                            },
                            "job": {
                                "href": "\/api\/jobs\/1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": [],
                            "state": "awaiting-payment",
                            "state_category": "category-waiting",
                            "locations": [],
                            "new_application_mails": [
                                "matej@example.com",
                                "filip@example.com"
                            ]
                        }
                    },
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-04-01T16:39:57+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

## Job Offer's Job Offer Views Collection [/api/job-offers/{job_offer_id}/job-offer-views?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + job_offer_id (number, required) - ID of the Job Offer
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Job Offer's Job Offer Views [GET]

Lists all Job Offer Views belonging to given Job Offer.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_offer_views": [
                    {
                        "id": 1,
                        "created": "2016-04-01T16:39:48+0200",
                        "ip_address": "127.0.0.1",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offer-views\/1"
                            }
                        },
                        "_embedded": {
                            "job_offer": {
                                "id": 1,
                                "created": "2016-04-01T16:39:48+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting",
                                    "locations": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            }
                        }
                    }
                ]
            }
        }

## User's Job Offer Views Collection [/api/users/{user_id}/job-offer-views?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_id (number, required) - ID of the User
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User's Job Offer Views [GET]

Lists all Job Offer Views belonging to given User.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_offer_views": [
                    {
                        "id": 1,
                        "created": "2016-04-01T16:39:39+0200",
                        "ip_address": "127.0.0.1",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-offer-views\/1"
                            }
                        },
                        "_embedded": {
                            "job_offer": {
                                "id": 1,
                                "created": "2016-04-01T16:39:39+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-offers\/1"
                                    },
                                    "company": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "job": {
                                        "href": "\/api\/jobs\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "description": [],
                                    "state": "awaiting-payment",
                                    "state_category": "category-waiting",
                                    "locations": [],
                                    "new_application_mails": [
                                        "matej@example.com",
                                        "filip@example.com"
                                    ]
                                }
                            },
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-04-01T16:39:39+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/1"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

## Job Offer View [/api/job-offer-views/{id}]

+ Attributes
    + id (number, required) - ID of the Job Offer View
    + created (string, required) - Date when the View was created
    + ip_address (string, optional) - IP Address of the View
    + referrer (string, optional) - Referrer of the View
    + embedded.job_offer (object, required) - The Job Offer
    + embedded.user (object, optional) - The User

+ Parameters
    + id (number, required) - ID of the Job Offer View

### Retrieve Job Offer View [GET]

Retrieves Job Offer View with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "created": "2016-04-01T16:40:16+0200",
            "ip_address": "127.0.0.1",
            "referrer": "google+organic",
            "_links": {
                "self": {
                    "href": "\/api\/job-offer-views\/1"
                }
            },
            "_embedded": {
                "job_offer": {
                    "id": 1,
                    "created": "2016-04-01T16:40:16+0200",
                    "_links": {
                        "self": {
                            "href": "\/api\/job-offers\/1"
                        },
                        "company": {
                            "href": "\/api\/companies\/1"
                        },
                        "job": {
                            "href": "\/api\/jobs\/1"
                        }
                    },
                    "_embedded": {
                        "title": [],
                        "description": [],
                        "state": "awaiting-payment",
                        "state_category": "category-waiting",
                        "locations": [],
                        "new_application_mails": ["matej@example.com","filip@example.com"]
                    }
                }
            }
        }

### Delete Job Offer View [DELETE]

Deletes Job Offer View with given ID.

+ Response 200 (application/hal+json)

        {"ok": true}

# Group Skills

## Skills Collection [/api/skills?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Skills [GET]

Lists Skills.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "skills": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "PHP Program\u00e1tor",
                                "en": "PHP Programmer"
                            }
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "JavaScript",
                                "en": "JavaScript"
                            }
                        }
                    },
                    {
                        "id": 3,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Management",
                                "en": "Management"
                            }
                        }
                    },
                    {
                        "id": 4,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "UX Design",
                                "en": "UX Design"
                            }
                        }
                    },
                    {
                        "id": 5,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Six Sigma",
                                "en": "Six Sigma"
                            }
                        }
                    },
                    {
                        "id": 6,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "SAP",
                                "en": "SAP"
                            }
                        }
                    },
                    {
                        "id": 7,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Cloud computing",
                                "en": "Cloud computing"
                            }
                        }
                    },
                    {
                        "id": 8,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Golf",
                                "en": "Golf"
                            }
                        }
                    },
                    {
                        "id": 9,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Angličtina",
                                "en": "English"
                            }
                        }
                    }
                ]
            }
        }

### Create Skill [POST]

Creates Skill with given parameters.

+ Request (application/json)

    + Attributes
        + title (object, required) - Localized title of the Skill

    + Body

            {
                "title": {
                    "cs": "PHP Programátor",
                    "en": "PHP Programmer"
                }
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 1,
                "_links": {
                    "self": {
                        "href": "\/api\/skills\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "PHP Program\u00e1tor",
                        "en": "PHP Programmer"
                    }
                }
            }
        }

## User Profile's Skills Collection [/api/user-profiles/{user_profile_id}/skills?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_profile_id (number, required) - ID of the User Profile
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User Profile's Skills [GET]

Lists all Skills for User Profile.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "skills": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "PHP Programmer",
                                "cs": "PHP Program\u00e1tor"
                            }
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "JavaScript",
                                "cs": "JavaScript"
                            }
                        }
                    }
                ]
            }
        }

## Job Offer's Skills Collection [/api/job-offers/{job_offer_id}/skills?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + job_offer_id (number, required) - ID of the Job Offer
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Job Offer's Skills [GET]

Lists all Skills belonging to Job Offer.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "skills": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "PHP Programmer",
                                "cs": "PHP Program\u00e1tor"
                            }
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/skills\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "en": "JavaScript",
                                "cs": "JavaScript"
                            }
                        }
                    }
                ]
            }
        }

## Skill [/api/skills/{id}]

+ Attributes
    + id (number, required) - ID of the Skill
    + title (object, required) - Localized title of the Skill

+ Parameters
    + id (number, required) - ID of the Skill

### Retrieve a Skill [GET]

Retrieves Skill with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "_links": {
                "self": {
                    "href": "\/api\/skills\/1"
                }
            },
            "_embedded": {
                "title": {
                    "en": "PHP Programmer",
                    "cs": "PHP Program\u00e1tor"
                }
            }
        }

### Update a Skill [PUT]

Updates Skill with given ID.

+ Request (application/json)


    + Attributes
        + title (object, required) - Localized title of the Skill

    + Body

            {
                "title": {
                    "cs": "PHP Programátor",
                    "en": "PHP Programmer"
                }
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "_links": {
                    "self": {
                        "href": "\/api\/skills\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "en": "JavaScript",
                        "cs": "JavaScript"
                    }
                }
            }
        }

# Group Job Types

## Job Types Collection [/api/job-types?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Job Types [GET]

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_types": [
                    {
                        "id": "full-time",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-types\/full-time"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Plný úvazek",
                                "en": "Full time"
                            }
                        }
                    },
                    {
                        "id": "part-time",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-types\/part-time"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Částečný úvazek",
                                "en": "Part time"
                            }
                        }
                    },
                    {
                        "id": "internship",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-types\/internship"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Stáž",
                                "en": "Internship"
                            }
                        }
                    },
                    {
                        "id": "external",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-types\/external"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Externí spolupráce",
                                "en": "External collaboration"
                            }
                        }
                    },
                    {
                        "id": "temporary",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-types\/temporary"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Brigáda",
                                "en": "Temporary job"
                            }
                        }
                    }
                ]
            }
        }

### Create a Job Type [POST]

Creates a Job Type with given parameters

+ Request (application/json)

    + Attributes
        + id (string, required) - ID of the Job Type.
        + title (object, required) - Localized title of the Job Type.
        
    + Body
    
            {
                "id": "full-time",
                "title": {
                    "cs": "Plný úvazek",
                    "en": "Full time"
                }
            }
    
+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": "full-time",
                "_links": {
                    "self": {
                        "href": "\/api\/job-types\/full-time"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Pln\u00fd \u00favazek",
                        "en": "Full time"
                    }
                }
            }
        }

## Job Type [/api/job-types/{id}]

+ Attributes
    + id (string, required) - ID of the Job Type.
    + embedded.title (object, required) - Localized title of the Job Type.

+ Parameters
    + id (string, required) - ID of the Job Type.

### Retreive a Job Type [GET]

Retrieves Job Type with given ID.

+ Response 200 (application/hal+json)

        {
            "id": "full-time",
            "_links": {
                "self": {
                    "href": "\/api\/job-types\/full-time"
                }
            },
            "_embedded": {
                "title": {
                    "cs": "Plný úvazek",
                    "en": "Full time"
                }
            }
        }

### Update a Job Type [PUT]

Updates Job Type with given ID.

+ Request (application/json)

    + Attributes
        + title (object, required) - Localized title of the Job Type.
        
    + Body
    
            {
                "title": {
                    "cs": "Plný úvazek",
                    "en": "Full time"
                }
            }
    
+ Response 201 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": "full-time",
                "_links": {
                    "self": {
                        "href": "\/api\/job-types\/full-time"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Pln\u00fd \u00favazek",
                        "en": "Full time"
                    }
                }
            }
        }

### Soft Delete a Job Type [DELETE]

Softly deletes Job Type.

+ Response 200 (application/hal+json)

        {
            "ok": true
        }

# Group Job Categories

## Job Categories Collection [/api/job-categories?limit={limit}&page={page}&sort={sort}&root={root}]

+ Parameters
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"
    + root (boolean, optional) - If this options is set to true/1, the returned list contains only root elements with their children embedded inside them.

### List Job Categories [GET]

Lists all Job Categories.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_categories": [{
                    "id": 1,
                    "_links": {
                        "self": {
                            "href": "\/api\/job-categories\/1"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Automotive"
                        },
                        "cv_price": {
                            "EUR": 4,
                            "CZK": 200
                        },
                        "children": [{
                            "id": 2,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Autoelektrik\u00e1\u0159"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 3,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/8"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Autoklemp\u00ed\u0159"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }],
                        "number_of_job_offers": 0,
                        "number_of_active_job_offers": 0
                    }
                }, {
                    "id": 4,
                    "_links": {
                        "self": {
                            "href": "\/api\/job-categories\/6"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Obchodní pozice"
                        },
                        "cv_price": {
                            "EUR": 8,
                            "CZK": 200
                        },
                        "children": [{
                            "id": 5,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Account manager"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 6,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Bookmaker"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 7,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Doplňovač zboží/merchandiser"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 8,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "E-commerce manager"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 9,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "E-commerce specialist"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 10,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Key account manager"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 11,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Nákupčí"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 12,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Obchodní analytik"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 13,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Obchodní zástupce"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 14,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Pokladník"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 15,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Pracovník reklamačního oddělení"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 16,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Referent odbytu"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 17,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/7"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Telemarketingový pracovník"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 18,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/8"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Vedoucí úseku prodejny"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }],
                        "number_of_job_offers": 0,
                        "number_of_active_job_offers": 0
                    }
                }, {
                    "id": 19,
                    "_links": {
                        "self": {
                            "href": "\/api\/job-categories\/1"
                        }
                    },
                    "_embedded": {
                        "title": {
                            "cs": "Administrativn\u00ed pozice"
                        },
                        "cv_price": {
                            "EUR": 4,
                            "CZK": 200
                        },
                        "children": [{
                            "id": 20,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/2"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Administrativn\u00ed pracovn\u00edk, referent"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }, {
                            "id": 21,
                            "_links": {
                                "self": {
                                    "href": "\/api\/job-categories\/3"
                                }
                            },
                            "_embedded": {
                                "title": {
                                    "cs": "Recep\u010dn\u00ed, Front desk"
                                },
                                "cv_price": {
                                    "EUR": 4,
                                    "CZK": 200
                                },
                                "children": [{
                                    "id": 22,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-categories\/4"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Recep\u010dn\u00ed I"
                                        },
                                        "cv_price": {
                                            "EUR": 4,
                                            "CZK": 200
                                        },
                                        "number_of_job_offers": 0,
                                        "number_of_active_job_offers": 0
                                    }
                                }, {
                                    "id": 23,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-categories\/5"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Vedouc\u00ed recepce"
                                        },
                                        "cv_price": {
                                            "EUR": 4,
                                            "CZK": 200
                                        }
                                    },
                                    "number_of_job_offers": 0,
                                    "number_of_active_job_offers": 0
                                }],
                                "number_of_job_offers": 0,
                                "number_of_active_job_offers": 0
                            }
                        }],
                        "number_of_job_offers": 0,
                        "number_of_active_job_offers": 0
                    }
                }]
            }
        }


### Create a Job Category [POST]

Creates a Job Category with given parameters.

+ Request (application/json)

    + Attributes
        + title (object, required) - Localized title of the Job Category.
        + parent (number, optional) - ID of parent Job Category. If you don't provide this parameter, the category will become a root category. The parent can be changed later via PUT update request.
        + tests (array, optional) - Array of Test IDs
        + cute_tests (array, optional) - Array of CuteTest IDs

    + Body

            {
                "title": {
                    "cs": "Top management, strategické pozice",
                    "en": "Top management, strategic positions"
                },
                "tests": [1, 2],
                "cute_tests": [1, 2]
            }
    
+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 6,
                "_links": {
                    "self": {
                        "href": "\/api\/job-categories\/6"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Top management, strategick\u00e9 pozice",
                        "en": "Top management, strategic positions"
                    },
                    "cv_price": {
                        "EUR": 4,
                        "CZK": 100
                    },
                    "number_of_job_offers": 0,
                    "number_of_active_job_offers": 0,
                    "tests": [
                        {
                            "id": 1,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "shuffle_questions": true,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/1"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        },
                        {
                            "id": 2,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "shuffle_questions": true,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/2"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        }
                    ],
                    "cute_tests": [
                        {
                            "id": 1,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        },
                        {
                            "id": 2,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        }
                    ]

                }
            }
        }

## Job Category [/api/job-categories/{id}]

+ Attributes
    + id (number, required) - ID of the Job Category.
    + embedded.title (object, required) - Localized title of the Job Category.
    + embbedded.children (array, optional) - Array of Job Categories which are Children of the Job Category.
    + embedded.number_of_job_offers (number, required) - Number of JobOffers within the Category.
    + embedded.number_of_active_job_offers (number, required) - Number of active JobOffers within the Category.
    + embedded.tests (array, optional) - Array of Tests
    + embedded.cute_tests (array, optional) - Array of CuteTests

+ Parameters
    + id (number, required) - ID of the Job Category.

### Retrieve a Job Category [GET]

Retrieves Job Category with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "_links": {
                "self": {
                    "href": "\/api\/job-categories\/1"
                }
            },
            "_embedded": {
                "title": {
                    "cs": "Administrativn\u00ed pozice"
                },
                "cv_price": {
                    "EUR": 4,
                    "CZK": 100
                },
                "children": [
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/job-categories\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Administrativn\u00ed pracovn\u00edk, referent"
                            },
                            "cv_price": {
                                "EUR": 4,
                                "CZK": 100
                            }
                        }
                    },
                    {
                        "id": 3,
                        "_links": {
                            "self": {
                                "href": "\/api\/job-categories\/3"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Recep\u010dn\u00ed, Front desk"
                            },
                            "cv_price": {
                                "EUR": 4,
                                "CZK": 100
                            },
                            "children": [
                                {
                                    "id": 4,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-categories\/4"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Recep\u010dn\u00ed I"
                                        },
                                        "cv_price": {
                                            "EUR": 4,
                                            "CZK": 100
                                        },
                                        "number_of_job_offers": 0,
                                        "number_of_active_job_offers": 0
                                    }
                                },
                                {
                                    "id": 5,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/job-categories\/5"
                                        }
                                    },
                                    "_embedded": {
                                        "title": {
                                            "cs": "Vedouc\u00ed recepce"
                                        },
                                        "cv_price": {
                                            "EUR": 4,
                                            "CZK": 100
                                        },
                                        "number_of_job_offers": 0,
                                        "number_of_active_job_offers": 0
                                    }
                                }
                            ],
                            "number_of_job_offers": 0,
                            "number_of_active_job_offers": 0
                        }
                    }
                ],
                "number_of_job_offers": 0,
                "number_of_active_job_offers": 0,
                "tests": [
                    {
                        "id": 1,
                        "type": "question-per-page",
                        "number_of_questions": 2,
                        "maximum_time": 300,
                        "shuffle_questions": true,
                        "logo": "http:\/\/example.com\/test\/1",
                        "test_fills": [],
                        "_links": {
                            "self": {
                                "href": "\/api\/tests\/1"
                            },
                            "questions": {
                                "href": "\/api\/questions?test_id=1"
                            }
                        },
                        "_embedded": {
                            "name": [],
                            "intro": [],
                            "average_fill_time": null,
                            "questions_count": 0
                        }
                    },
                    {
                        "id": 2,
                        "type": "question-per-page",
                        "number_of_questions": 2,
                        "maximum_time": 300,
                        "shuffle_questions": true,
                        "logo": "http:\/\/example.com\/test\/1",
                        "test_fills": [],
                        "_links": {
                            "self": {
                                "href": "\/api\/tests\/2"
                            },
                            "questions": {
                                "href": "\/api\/questions?test_id=2"
                            }
                        },
                        "_embedded": {
                            "name": [],
                            "intro": [],
                            "average_fill_time": null,
                            "questions_count": 0
                        }
                    }
                ],
                "cute_tests": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/cute-tests\/1"
                            }
                        },
                        "_embedded": {
                            "name": [],
                            "short_name": [],
                            "intro": []
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/cute-tests\/2"
                            }
                        },
                        "_embedded": {
                            "name": [],
                            "short_name": [],
                            "intro": []
                        }
                    }
                ]
            }
        }


### Update a Job Category [PUT]

Updates a Job Category with given ID.

+ Request (application/json)

    + Attributes
        + title (object, required) - Localized title of the Job Category.
        + parent (number, optional) - ID of parent Job Category. If you don't provide this parameter, the category will become a root category. The parent can be changed later via PUT update request.
        + tests (array, optional) - Array of Test IDs
        + cute_tests (array, optional) - Array of CuteTest IDs

    + Body

            {
                "title": {
                    "cs": "Top management, strategické pozice",
                    "en": "Top management, strategic positions"
                },
                "tests": [1, 2],
                "cute_tests": [1, 2]
            }
    
+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "_links": {
                    "self": {
                        "href": "\/api\/job-categories\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Top management, strategick\u00e9 pozice",
                        "en": "Top management, strategic positions"
                    },
                    "number_of_job_offers": 0,
                    "number_of_active_job_offers": 0,"tests": [
                        {
                            "id": 1,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "shuffle_questions": true,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/1"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        },
                        {
                            "id": 2,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "shuffle_questions": true,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/2"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        }
                    ],
                    "cute_tests": [
                        {
                            "id": 1,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        },
                        {
                            "id": 2,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        }
                    ]
                }
            }
        }

### Soft Delete a Job Category [DELETE]

Softly deletes a Job Category.

+ Response 200 (application/hal+json)

        {
            "ok": true
        }

# Group Job Category Watchdogs

## Job Category Watchdogs Collection [/api/job-category-watchdogs?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of job category watchdogs returned in the request
    + page (number, optional) - Distance from beginning of the array of available job category watchdogs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Job Category Watchdogs [GET]

Lists all Job Category Watchdots.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_category_watchdogs": [
                    {
                        "id": 1,
                        "email": "john.doe@example.com",
                        "created": "2016-05-17T16:32:05+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-category-watchdogs\/1"
                            }
                        },
                        "_embedded": {
                            "job_category": {
                                "id": 1,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-categories\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "cv_price": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-05-17T16:32:05+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "email": "johnny.doey@example.com",
                        "created": "2016-05-17T16:32:05+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-category-watchdogs\/2"
                            }
                        },
                        "_embedded": {
                            "job_category": {
                                "id": 2,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-categories\/2"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "cv_price": []
                                }
                            }
                        }
                    }
                ]
            }
        }

### Create Job Category Watchdog [POST]

Creates Job Category Watchdog with given parameters.

+ Request (application/json)

    + Attributes
        + job_category (number, required) - ID of the Job Category
        + email (string, optional) - Email to which send the notifications, required if you are not logged in.

    + Body

            {
                "job_category": 1
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 8,
                "email": "john.doe@example.com",
                "created": "2016-05-17T16:33:13+0200",
                "_links": {
                    "self": {
                        "href": "\/api\/job-category-watchdogs\/8"
                    }
                },
                "_embedded": {
                    "job_category": {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/job-categories\/1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "cv_price": []
                        }
                    }
                }
            }
        }

## User's Job Category Watchdogs Collection [/api/users/{user_id}/job-category-watchdogs?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_id (number, required) - ID of the User
    + limit (number, optional) - Limits number of job category watchdogs returned in the request
    + page (number, optional) - Distance from beginning of the array of available job category watchdogs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User's Job Category Watchdogs [GET]

Lists User's Job Category Watchdogs.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "job_category_watchdogs": [
                    {
                        "id": 3,
                        "email": "john.doe@example.com",
                        "created": "2016-05-17T16:32:25+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-category-watchdogs\/3"
                            }
                        },
                        "_embedded": {
                            "job_category": {
                                "id": 1,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-categories\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "cv_price": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-05-17T16:32:24+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 1,
                        "email": "john.doe@example.com",
                        "created": "2016-05-17T16:32:25+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/job-category-watchdogs\/1"
                            }
                        },
                        "_embedded": {
                            "job_category": {
                                "id": 1,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/job-categories\/1"
                                    }
                                },
                                "_embedded": {
                                    "title": [],
                                    "cv_price": []
                                }
                            },
                            "user": {
                                "id": 2,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-05-17T16:32:24+0200",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                },
                                "_embedded": {
                                    "language": {
                                        "id": "cs",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

## Job Category Watchdog [/api/job-category-watchdogs/{id}]

+ Parameters
    + id (number, required) - ID of the Job Category Watchdog

+ Attributes
    + id (number, required) - ID of the Job Category Watchdog
    + created (string, required) - Date when the Watchdog was created
    + email (string, optional) - Email to which send the notifications
    + embedded.job_category (object, required) - The Job Category
    + embedded.user (object, optional) - The User

### Retrieve Job Category Watchdog [GET]

Retrieves Job Category Watchdog with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "email": "john.doe@example.com",
            "created": "2016-05-17T16:34:07+0200",
            "_links": {
                "self": {
                    "href": "\/api\/job-category-watchdogs\/1"
                }
            },
            "_embedded": {
                "job_category": {
                    "id": 1,
                    "_links": {
                        "self": {
                            "href": "\/api\/job-categories\/1"
                        }
                    },
                    "_embedded": {
                        "title": [],
                        "cv_price": []
                    }
                },
                "user": {
                    "id": 2,
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "created": "2016-05-17T16:34:06+0200",
                    "_links": {
                        "self": {
                            "href": "\/api\/users\/2"
                        },
                        "language": {
                            "href": "\/api\/languages\/cs"
                        }
                    },
                    "_embedded": {
                        "language": {
                            "id": "cs",
                            "_links": {
                                "self": {
                                    "href": "\/api\/languages\/cs"
                                }
                            }
                        }
                    }
                }
            }
        }

### Update Job Category Watchdog [PUT]

Updates Job Category Watchdog with given ID.

+ Request (application/json)

    + Attributes
        + email (string, optional) - Email to which send the notifications, required if you are not logged in.

    + Body

            {
                "email": "john.doe@example.com"
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "email": "johhny.doey@example.com",
                "created": "2016-05-17T16:35:28+0200",
                "_links": {
                    "self": {
                        "href": "\/api\/job-category-watchdogs\/1"
                    }
                },
                "_embedded": {
                    "job_category": {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/job-categories\/1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "cv_price": []
                        }
                    },
                    "user": {
                        "id": 2,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-05-17T16:35:27+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/2"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

### Soft delete Job Category Watchdog [DELETE]

Softly deletes Job Category Watchdog with given ID.

+ Response 200 (application/hal+json)

        {
            "ok": true
        }


# Group Notifications

## Notifications Collection [/api/notifications?limit={limit}&page={page}&seen={seen}&clicked={clicked}]

You must be signed in as User to access notifications.

+ Parameters
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + seen (boolean, optional) - Can be set to true/false to filter seen/unseen notificaitons
    + clicked (boolean, optional) - Can be set to true/false to filter clicked/unclicked notificaitons


### List Notifications [GET]

Retrieves all notifications.

+ Response 200 (application/hal+json)

        {   "_embedded": {
                "notifications": [
                    {
                        "id": 1,
                        "type": "job_created_notification",
                        "created": "2015-09-21",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 1
                        }
                    },
                    {
                        "id": 2,
                        "type": "candidate_added_notification",
                        "created": "2015-09-21",
                        "seen": "2015-10-29T12:00:00+0100",
                        "clicked": "2015-10-29T12:00:00+0100",
                        "data": {
                            "job_id": 2
                        }
                    },
                    {
                        "id": 3,
                        "type": "job_created_notification",
                        "created": "2016-03-21",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 3
                        }
                    },
                    {
                        "id": 4,
                        "type": "candidate_added_notification",
                        "created": "2016-04-19",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 4
                        }
                    },
                    {
                        "id": 5,
                        "type": "job_created_notification",
                        "created": "2015-04-18",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 5
                        }
                    },
                    {
                        "id": 6,
                        "type": "candidate_added_notification",
                        "created": "2015-09-21",
                        "seen": true,
                        "clicked": false,
                        "data": {
                            "job_id": 6
                        }
                    },
                    {
                        "id": 7,
                        "type": "job_created_notification",
                        "created": "2016-03-21",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 7
                        }
                    },
                    {
                        "id": 8,
                        "type": "job_created_notification",
                        "created": "2016-04-19",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 8
                        }
                    },
                    {
                        "id": 9,
                        "type": "job_created_notification",
                        "created": "2015-04-18",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 9
                        }
                    },
                    {
                        "id": 10,
                        "type": "candidate_added_notification",
                        "created": "2015-09-21",
                        "seen": true,
                        "clicked": false,
                        "data": {
                            "job_id": 10
                        }
                    },
                    {
                        "id": 11,
                        "type": "job_created_notification",
                        "created": "2016-03-21",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 11
                        }
                    },
                    {
                        "id": 12,
                        "type": "candidate_added_notification",
                        "created": "2016-04-19",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 12
                        }
                    },
                    {
                        "id": 13,
                        "type": "job_created_notification",
                        "created": "2015-04-18",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 13
                        }
                    },
                    {
                        "id": 14,
                        "type": "candidate_added_notification",
                        "created": "2015-09-21",
                        "seen": true,
                        "clicked": false,
                        "data": {
                            "job_id": 14
                        }
                    },
                    {
                        "id": 22,
                        "type": "job_created_notification",
                        "created": "2016-03-21",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 22
                        }
                    },
                    {
                        "id": 15,
                        "type": "job_created_notification",
                        "created": "2016-04-19",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 15
                        }
                    },
                    {
                        "id": 16,
                        "type": "job_created_notification",
                        "created": "2015-04-18",
                        "seen": false,
                        "clicked": false,
                        "data": {
                            "job_id": 16
                        }
                    },
                    {
                        "id": 17,
                        "type": "candidate_added_notification",
                        "created": "2015-09-21",
                        "seen": true,
                        "clicked": false,
                        "data": {
                            "job_id": 17
                        }
                    }
                ]
            },
            "_links": {
                "notification": [
                    { "href": "/api/notifications/1" },
                    { "href": "/api/notifications/2" }
                ],
                "self": { "href": "/api/notifications?limit=5&offset=5" },
                "prev": { "href": "/api/notifications?limit=5" },
                "next": { "href": "/api/notifications?limit=5&offset=10" }
            }
        }

### Batch update Notifications [PATCH]

Updates multiple Notifications with given IDs in one request and one transaction.

+ Request (application/json)

        [
            {"id": 1, "op": "replace", "path": "/seen", "value": "2015-10-29T12:00"},
            {"id": 2, "op": "replace", "path": "/seen", "value": "2015-10-29T12:00"},
            {"id": 3, "op": "replace", "path": "/seen", "value": "2015-10-29T12:00"}
        ]

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": [
                {
                    "id": 1,
                    "seen": "2015-10-29T12:00:00+0100",
                    "created": "2015-10-29T16:34:40+0100",
                    "type": "job_created_notification",
                    "data": [],
                    "_links": {
                        "self": {
                            "href": "\/api\/notifications\/1"
                        }
                    },
                    "_embedded": {}
                },
                {
                    "id": 2,
                    "seen": "2015-10-29T12:00:00+0100",
                    "created": "2015-10-29T16:34:40+0100",
                    "type": "job_created_notification",
                    "data": [],
                    "_links": {
                        "self": {
                            "href": "\/api\/notifications\/2"
                        }
                    }
                }
            ]
        }

## Notification [/api/notifications/{id}]

+ Parameters
    + id (number, required) - Unique identifier of the notification

+ Attributes
    + id (number, required) - Unique identifier of the Notification
    + seen (string, optional) - Date when the Notification has been seen by the User or null if it hasn't.
    + clicked (string, optional) - Date when the Notification been clicked on by the User or null if it hasn't.
    + created (string, required) - Date when the Notification was created.
    + type (string, required) - Type of the Notification. Can be 'job_created_notification', 'job_ended_notification', 'job_started_notification', 'candidate_added_notification'
    + data (string, required) - Type specific data of the notification.



### Retrieve a Notificaiton [GET]

Retrieves a Notification with the given ID.

+ Response 200 (application/hal+json)

        {
            "notification": {
                "id": 1,
                "type": "job_created_notification",
                "created": "2015-09-21",
                "seen": "2015-10-29T12:00:00+0100",
                "clicked": false,
                "data": {
                    "job_id": 1
                }
            },
            "_links:" {
                "self":          { "href": "/api/notifications/1"},
                "notifications": { "href": "/api/notifications" }
            }
        }

### Update a Notification [PUT]

Updates a Notification with the given ID.

+ Request (application/json)

        {
            "seen": true,
            "clicked": true
        }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "type": "job_created_notification",
                "created": "2015-09-21",
                "seen": "2015-09-21",
                "clicked": "2015-09-21",
                "data": {
                    "job_id": 1
                }
            },
            "_links": {
                "self": { "href": "/api/notifications/1" }
            }
        }


# Group Users

## Users Collection [/api/users?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of jobs returned in the request
    + page (number, optional) - Distance from beginning of the array of available jobs
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List Users [GET]

Retrieves a list of all Users. Only users belonging to your Client will be listed.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "users": [
                    {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "password": "pass",
                        "created": "2015-10-16T15:37:25+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "companies": {
                                "href": "\/api\/companies?user_id=1"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs"
                            }
                        }
                    },
                    {
                        "id": 2,
                        "name": "Buffalo Bill",
                        "email": "buffalo.bill@example.com",
                        "password": "pass",
                        "created": "2015-10-16T15:37:25+0200",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/2"
                            },
                            "companies": {
                                "href": "\/api\/companies?user_id=2"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "en"
                            }
                        }
                    }
                ]
            }
        }
        
### Create a User [POST]

Creates a User with given parameters. The password will be hashed.

+ Request (application/json)

    + Attributes
        + name (string, required) - Full name of the user.
        + email (string, required) - Email address of the User.
        + password (string, required) - Password of the User.
        + language (string, required) - Id of the Language of the user.
        + role (string, optional) - Role of the user. Choose between user, company-manager, client-admin and superadmin.

    + Body

            {
                "name": "John Doe",
                "email": "john.doe@example.com",
                "password": "pass",
                "language": "cs",
                "role": "company-manager"
            }

+ Response 201 (application/json)

        {
            "ok": true,
            "inserted": {
                "id": 1,
                "name": "John Doe",
                "email": "john.doe@example.com",
                "created": "2015-12-02T12:34:10+0100",
                "_links": {
                    "self": {
                        "href": "\/api\/users\/1"
                    },
                    "companies": {
                        "href": "\/api\/companies?user_id=1"
                    },
                    "language": {
                        "href": "Languages:readAll"
                    }
                },
                "_embedded": {
                    "company_administrators": [],
                    "language": {
                        "id": "cs"
                    }
                }
            }
        }

## Forgotten Password Change [/api/users]

### Change Forgotten Password [PUT]

Changes User's forgotten password to the new value. You need to create a new Forgotten Password first and the use it's `hash` property as `forgotten_password_hash`.
Password needs to be at least 8 characters long and the Forgotten Password must be used before its expiration.

+ Request (application/json)

        {
            "new_password": "secret123",
            "forgotten_password_hash": "abcd1234"
        }

+ Response 200 (application/hal+json)

        {
            "ok": true
        }

## User [/api/users/{id}]

+ Attributes
    + id (number, required) - Id of the user
    + name (string, required) - Name of the user. Both firstname and lastname is stored in this property.
    + email (string, required) - Email address of the user.
    + email_verified (boolean, required) - Is the user's email address verified?
    + password_last_updated (string, required) - Date when the User's password was last updated.
    + created (string, required) - Date when the User was created.
    + cute_certified (string, optional) - Date when the User was Cute certified or NULL if wasn't.
    + embedded.language (object, required) - Language preference of the User.
    + embedded.companies (object, required) - Companies to which the user belongs. Can be empty.

+ Parameters
    + id (number, required) - Id of the user. If User is logged in, he can use 'me' as the ID to access his own entity.

### Retrieve a User [GET]

Retrieves a User with the given id.

+ Response 200 (applicaiton/hal+json)

        {
            "id": 1,
            "name": "John Doe",
            "email": "john.doe@example.com",
            "created": "2016-03-11T10:40:47+0100",
            "_links": {
                "self": {
                    "href": "\/api\/users\/1"
                },
                "language": {
                    "href": "\/api\/languages\/cs"
                }
            },
            "_embedded": {
                "company_administrators": [
                    {
                        "id": 2,
                        "role": "manager",
                        "email": "john.doe@example.com",
                        "name": "John Doe",
                        "created": "2016-03-11T10:40:48+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-administrators\/2"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 2,
                                "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                                "webalized": "ceska-pojistovna-a-s",
                                "created": "2016-03-11T10:40:48+0100",
                                "color": "ffffff",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/2"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=2"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=2&active=1"
                                    }
                                },
                                "_embedded": {
                                    "credits_account": {
                                      "id": 2,
                                      "available_balance": 6900,
                                      "balance": 125000
                                    },
                                    "description": {
                                      "cs": "Lorem ipsum, ...",
                                      "en": "Lorem ipsum, ..."
                                    },
                                    "category": {
                                      "id": 2,
                                      "_links": {
                                        "self": {
                                          "href": "/api/company-categories/2"
                                        }
                                      },
                                      "_embedded": {
                                        "title": {
                                          "cs": "Call centrum",
                                          "en": "Call centrum"
                                        }
                                      }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": 1,
                        "role": "boss",
                        "email": "john.doe@example.com",
                        "name": "John Doe",
                        "created": "2016-03-11T10:40:48+0100",
                        "cute_certified": "2016-03-15",
                        "_links": {
                            "self": {
                                "href": "\/api\/company-administrators\/1"
                            }
                        },
                        "_embedded": {
                            "company": {
                                "id": 1,
                                "name": "Hiri.cz",
                                "webalized": "hiri-cz",
                                "created": "2016-03-11T10:40:47+0100",
                                "color": "ffffff",
                                "address": "Sp\u00e1len\u00e1 1",
                                "city": "Praha",
                                "country": "\u010cesk\u00e1 republika",
                                "first_name_basis": false,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/companies\/1"
                                    },
                                    "jobs": {
                                        "href": "\/api\/jobs?company_id=1"
                                    },
                                    "jobs:active": {
                                        "href": "\/api\/jobs?company_id=1&active=1"
                                    }
                                },
                                "_embedded": {
                                    "credits_account": {
                                      "id": 1,
                                      "available_balance": 11000,
                                      "balance": 20000
                                    },
                                    "description": {
                                      "cs": "Lorem ipsum, ...",
                                      "en": "Lorem ipsum, ..."
                                    },
                                    "category": {
                                      "id": 2,
                                      "_links": {
                                        "self": {
                                          "href": "/api/company-categories/2"
                                        }
                                      },
                                      "_embedded": {
                                        "title": {
                                          "cs": "Call centrum",
                                          "en": "Call centrum"
                                        }
                                      }
                                    }
                                }
                            }
                        }
                    }
                ],
                "language": {
                    "id": "cs",
                    "_links": {
                        "self": {
                            "href": "\/api\/languages\/cs"
                        }
                    }
                },
                "user_profile": null
            }
        }

### Update a User [PUT]

Allows you to update a User with provided ID. You don't have to provide all the parameters,
only those provided will be updated.

Security note: Only the user himself or a superadmin can update his details.

Updating a password: You cannot update a password through this request! Use PATCH method.

Note: we chose usability over RESTful corectness, where you have to provide all
the parameters in PUT request otherwise they are deleted.

+ Request (application/json)
    + Attributes
        + name (string, optional) - Full name of the user.
        + email (string, optional) - Email address of the User.
        + language (string, optional) - Id of the Language of the user.
        + role (string, optional) - Role of the user. Choose between user, company-manager, client-admin and superadmin.
        + cute_certified (string, optional) - Date when the User was Cute certified or NULL if wasn't.

    + Body

            {
                "name": "John Doey",
                "email": "john.doey@example.com",
                "language": "en",
                "role": "client-admin",
                "cute_certified": "2016-03-15"
            }


+ Response 200 (applicaiton/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "name": "John Doey",
                "email": "john.doey@example.com",
                "created": "2015-12-02T12:34:32+0100",
                "cute_certified": "2016-03-15",
                "_links": {
                    "self": {
                        "href": "\/api\/users\/1"
                    },
                    "companies": {
                        "href": "\/api\/companies?user_id=1"
                    },
                    "language": {
                        "href": "Languages:readAll"
                    }
                },
                "_embedded": {
                    "company_administrators": [
                        {
                            "id": 2,
                            "role": "manager",
                            "email": "john.doe@example.com",
                            "name": "John Doe",
                            "created": "2016-03-11T10:40:48+0100",
                            "_links": {
                                "self": {
                                    "href": "\/api\/company-administrators\/2"
                                }
                            },
                            "_embedded": {
                                "company": {
                                    "id": 2,
                                    "name": "\u010cesk\u00e1 Poji\u0161\u0165ovna a.s.",
                                    "webalized": "ceska-pojistovna-a-s",
                                    "created": "2016-03-11T10:40:48+0100",
                                    "color": "ffffff",
                                    "address": "Sp\u00e1len\u00e1 1",
                                    "city": "Praha",
                                    "country": "\u010cesk\u00e1 republika",
                                    "first_name_basis": false,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/companies\/2"
                                        },
                                        "jobs": {
                                            "href": "\/api\/jobs?company_id=2"
                                        },
                                        "jobs:active": {
                                            "href": "\/api\/jobs?company_id=2&active=1"
                                        }
                                    },
                                    "_embedded": {
                                        "credits_account": false
                                    }
                                }
                            }
                        },
                        {
                            "id": 1,
                            "role": "boss",
                            "email": "john.doe@example.com",
                            "name": "John Doe",
                            "created": "2016-03-11T10:40:48+0100",
                            "_links": {
                                "self": {
                                    "href": "\/api\/company-administrators\/1"
                                }
                            },
                            "_embedded": {
                                "company": {
                                    "id": 1,
                                    "name": "Hiri.cz",
                                    "webalized": "hiri-cz",
                                    "created": "2016-03-11T10:40:47+0100",
                                    "color": "ffffff",
                                    "address": "Sp\u00e1len\u00e1 1",
                                    "city": "Praha",
                                    "country": "\u010cesk\u00e1 republika",
                                    "first_name_basis": false,
                                    "_links": {
                                        "self": {
                                            "href": "\/api\/companies\/1"
                                        },
                                        "jobs": {
                                            "href": "\/api\/jobs?company_id=1"
                                        },
                                        "jobs:active": {
                                            "href": "\/api\/jobs?company_id=1&active=1"
                                        }
                                    },
                                    "_embedded": {
                                        "credits_account": false
                                    }
                                }
                            }
                        }
                    ],
                    "language": {
                        "id": "en"
                    }
                }
            }
        }

### Partially Update User [PATCH]

Allows you to partially update a User.

+ Request (application/json)

        [
            {"op": "replace", "path": "/password", "value": "newpass123", "old_value": "oldpass123"},
            {"op": "replace", "path": "/name", "value": "John Doey"}
        ]


+ Response 200 (applicaiton/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "name": "John Doey",
                "email": "john.doe@example.com",
                "created": "2015-10-16T15:38:10+0200",
                "_links": {
                    "self": {
                        "href": "\/api\/users\/1"
                    },
                    "companies": {
                        "href": "\/api\/companies?user_id=1"
                    }
                },
                "_embedded": {
                    "language": {
                        "id": "cs"
                    }
                }
            }
        }

### Deactivate a User [DELETE]

Hides User.

+ Response 200 (applicaiton/hal+json)

        {
            "ok": true
        }

# Group User Profiles

## User Profiles Collection [/api/user-profiles?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User Profiles [GET]

Lista all User Profiles.

+ Response 200 (applicaiton/hal+json)

        {
            "_embedded": {
                "user_profiles": [
                    {
                        "id": 1,
                        "linkedin_link": "https:\/\/linkedin.com\/abc\/123",
                        "facebook_link": "https:\/\/facebook.com\/abc\/123",
                        "twitter_link": "https:\/\/twitter.com\/abc\/123",
                        "created": "2016-03-11T15:40:50+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/user-profiles\/1"
                            },
                            "user": {
                                "href": "\/api\/users?id=1"
                            }
                        }
                    },
                    {
                        "id": 2,
                        "linkedin_link": "https:\/\/linkedin.com\/abc\/123",
                        "facebook_link": "https:\/\/facebook.com\/abc\/123",
                        "twitter_link": "https:\/\/twitter.com\/abc\/123",
                        "created": "2016-03-11T15:40:50+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/user-profiles\/2"
                            },
                            "user": {
                                "href": "\/api\/users?id=2"
                            }
                        }
                    }
                ]
            }
        }

### Create a User Profile [POST]

Creates User Profile with given parameters

+ Request (application/json)

    + Attributes
        + user (number, required) - ID of the User.
        + profile_picture (string, required) - Link to a profile picture image.
        + linkedin_link (string, optional) - Link to a profile on LinkedIn.
        + facebook_link (string, optional) - Link to a profile on Facebook.
        + twitter_link (string, optional) - Link to a profile on Twitter.
        + locality (string, optional) - Location of the User.
        + sign_on (string, optional) - When the user can sign on. The values are 'immediate', 'two-weeks', 'month', two-months', 'more-than-two-months'
        + required_salary (number, optional) - Required salary of the User.
        + looking_for_job (string, optional) - Is the User looking for a job? This field can have 4 values - 'yes', 'rather-yes', 'rather-no', 'no'
        + gender (string, optional) - Gender of the user. Can hold 3 values - 'male', 'female' and 'unspecified'
        + date_of_birth (string, optional) - Date of birth of the user.
        + description (string, optional) - Description of the User
        + web (string, optional) - Web address of the User
        + phone (string, optional) - Phone number of the User
        + city (string, optional) - Name of the city where the User lives
        + country (string, optional) - Name of the country where the User lives
        + postal_code (string, optional) - Postal code of the place where the User lives
        + user_education_level (number, optional) - ID of the User Education Level
        + job_category (number, optional) - Selected JobCategory

    + Body

            {
                "user": 1,
                "profile_picture": "http://example.com/abc/123",
                "linkedin_link": "https://linkedin.com/abc/123",
                "facebook_link": "https://linkedin.com/abc/123",
                "twitter_link": "https://linkedin.com/abc/123",
                "locality": "Praha",
                "sign_on": "immediate",
                "required_salary": 35000,
                "looking_for_job": "rather-no",
                "gender": "male",
                "user_education_level": 1,
                "job_category": 1
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 1,
                "profile_picture": "http://example.com/abc/123",
                "linkedin_link": "https://linkedin.com/abc/123",
                "facebook_link": "https://linkedin.com/abc/123",
                "twitter_link": "https://linkedin.com/abc/123",
                "locality": "Praha",
                "sign_on": "immediate",
                "required_salary": 35000,
                "created": "2016-02-06T21:19:57+0100",
                "looking_for_job": "rather-no",
                "gender": "male",
                "_embedded": {
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-02-06T21:19:57+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/2"
                            },
                            "companies": {
                                "href": "\/api\/companies?user_id=2"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                            },
                            "_embedded": {
                                "language": {
                                    "id": "cs",
                                    "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    "user_education_level": {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/user-education-levels\/1"
                            }
                        },
                        "_embedded": {
                            "title": [],
                            "description": []
                        }
                    }
                }
            }
        }

## User's User Profiles Collection [/api/users/{user_id}/user-profiles?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_id (required, required) - ID of the User.
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User's User Profiles [GET]

Creates User Profile with given parameters

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "user_profiles": [
                    {
                        "id": 1,
                        "profile_picture": "http://example.com/abc/123",
                        "linkedin_link": "https://linkedin.com/abc/123",
                        "facebook_link": "https://linkedin.com/abc/123",
                        "twitter_link": "https://linkedin.com/abc/123",
                        "created": "2016-02-06T21:19:57+0100",
                        "locality": "Horní Dolní",
                        "sign_on": "two-weeks",
                        "required_salary": 35000,
                        "_embedded": {
                            "user": {
                                "id": 1,
                                "name": "John Doe",
                                "email": "john.doe@example.com",
                                "created": "2016-02-06T21:19:57+0100",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/users\/2"
                                    },
                                    "companies": {
                                        "href": "\/api\/companies?user_id=2"
                                    },
                                    "language": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                    },
                                    "_embedded": {
                                        "language": {
                                            "id": "cs",
                                            "_links": {
                                            "self": {
                                                "href": "\/api\/languages\/cs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }

## User Profile [/api/user-profiles/{user_id}]

+ Attributes
    + id (number, required) - ID of the User Profile.
    + profile_picture (string, required) - Link to a profile picture image.
    + linkedin_link (string, optional) - Link to a profile on LinkedIn.
    + facebook_link (string, optional) - Link to a profile on Facebook.
    + twitter_link (string, optional) - Link to a profile on Twitter.
    + created (string, required) - Date when the User Profile was created.
    + locality (string, optional) - Location of the User.
    + sign_on (string, optional) - When the user can sign on. The values are 'immediate', 'two-weeks', 'month', two-months', 'more-than-two-months'
    + required_salary (number, optional) - Required salary of the User.
    + looking_for_job (string, optional) - Is the User looking for a job? This field can have 4 values - 'yes', 'rather-yes', 'rather-no', 'no'.
    + gender (string, optional) - Gender of the user. Can hold 3 values - 'male', 'female' and 'unspecified'
    + date_of_birth (string, optional) - Date of birth of the user.
    + description (string, optional) - Description of the User
    + web (string, optional) - Web address of the User
    + phone (string, optional) - Phone number of the User
    + city (string, optional) - Name of the city where the User lives
    + country (string, optional) - Name of the country where the User lives
    + postal_code (string, optional) - Postal code of the place where the User lives
    + embedded.user (object, required) - User to which the User Profile belongs.
    + embedded.test_fills (array, required) - Array of User's Knowledge Test Fills
    + embedded.cute_test_fills (array, required) - Array of User's Cute Test Fills
    + embedded.user_education_level (object, optional) - User Education Level
    + embedded.job_category (object, optional) - Selected JobCategory

+ Parameters
    + user_id (nubmer, required) - ID of the User.

### Retrieve a User Profile [GET]

Retrieves a User Profile with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "profile_picture": "http://example.com/abc/123",
            "linkedin_link": "https://linkedin.com/abc/123",
            "facebook_link": "https://linkedin.com/abc/123",
            "twitter_link": "https://linkedin.com/abc/123",
            "created": "2016-02-06T21:19:57+0100",
            "locality": "Horní Dolní",
            "sign_on": "two-weeks",
            "required_salary": 35000,
            "looking_for_job": "rather-yes",
            "gender": "male",
            "_embedded": {
                "user": {
                    "id": 1,
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "created": "2016-02-06T21:19:57+0100",
                    "_links": {
                        "self": {
                            "href": "\/api\/users\/2"
                        },
                        "companies": {
                            "href": "\/api\/companies?user_id=2"
                        },
                        "language": {
                            "href": "\/api\/languages\/cs"
                        }
                    },
                    "_embedded": {
                        "language": {
                            "id": "cs",
                            "_links": {
                                "self": {
                                    "href": "\/api\/languages\/cs"
                                }
                            }
                        }
                    }
                },
                "user_educations": [
                    {
                        "id": 1,
                        "school_name": "ČVUT v Praze",
                        "field": "Softwarové technologie a management",
                        "since": "2013",
                        "to": "2016",
                        "description": "Bachelor degree"
                    },
                    {
                        "id": 2,
                        "school_name": "Gymnázium Jírovcova 8, Ceské Budějovice",
                        "field": "Obecné gymnázium",
                        "since": "2008",
                        "to": "2012",
                        "description": "Ukončeno maturitou"
                    }
                ],
                "user_work_experiences": [
                    {
                        "id": 1,
                        "company_name": "StartupJobs.cz",
                        "position": "PHP Programmer",
                        "since": "2013-11",
                        "to": null,
                        "description": "Developing a Job Portal for Startups"
                    },
                    {
                        "id": 2,
                        "company_name": "Hiri.cz",
                        "position": "Lead PHP Programmer",
                        "since": "2014-10",
                        "to": null,
                        "description": "Developing a Job Portal and Unique Testing tool"
                    }
                ],
                "test_fills": [
                    {
                        "id": 2,
                        "start": "2016-03-06T16:16:44+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/test-fills\/2"
                            },
                            "test": {
                                "href": "\/api\/tests\/2"
                            },
                            "drawn_questions": {
                                "href": "\/api\/drawn-questions"
                            }
                        },
                        "_embedded": {
                            "completed": false,
                            "state": "in_progress",
                            "number_of_question_fills": 0,
                            "test": {
                                "id": 2,
                                "type": "question-per-page",
                                "number_of_questions": 2,
                                "maximum_time": 300,
                                "logo": "http:\/\/example.com\/test\/1",
                                "test_fills": [
                                    {
                                        "id": 2,
                                        "start": "2016-03-06T16:16:44+0100",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/test-fills\/2"
                                            },
                                            "test": {
                                                "href": "\/api\/tests\/2"
                                            },
                                            "drawn_questions": {
                                                "href": "\/api\/drawn-questions"
                                            }
                                        },
                                        "_embedded": {
                                            "completed": false,
                                            "state": "in_progress",
                                            "number_of_question_fills": 0,
                                            "test": null
                                        }
                                    }
                                ],
                                "_links": {
                                    "self": {
                                        "href": "\/api\/tests\/2"
                                    },
                                    "questions": {
                                        "href": "\/api\/questions?test_id=2"
                                    }
                                },
                                "_embedded": {
                                    "name": [],
                                    "intro": [],
                                    "average_fill_time": null,
                                    "questions_count": 0
                                }
                            }
                        }
                    },
                    {
                        "id": 1,
                        "start": "2016-03-06T16:16:44+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/test-fills\/1"
                            },
                            "test": {
                                "href": "\/api\/tests\/1"
                            },
                            "drawn_questions": {
                                "href": "\/api\/drawn-questions"
                            }
                        },
                        "_embedded": {
                            "completed": false,
                            "state": "in_progress",
                            "number_of_question_fills": 0,
                            "test": {
                                "id": 1,
                                "type": "question-per-page",
                                "number_of_questions": 2,
                                "maximum_time": 300,
                                "logo": "http:\/\/example.com\/test\/1",
                                "test_fills": [
                                    {
                                        "id": 1,
                                        "start": "2016-03-06T16:16:44+0100",
                                        "_links": {
                                            "self": {
                                                "href": "\/api\/test-fills\/1"
                                            },
                                            "test": {
                                                "href": "\/api\/tests\/1"
                                            },
                                            "drawn_questions": {
                                                "href": "\/api\/drawn-questions"
                                            }
                                        },
                                        "_embedded": {
                                            "completed": false,
                                            "state": "in_progress",
                                            "number_of_question_fills": 0,
                                            "test": null
                                        }
                                    }
                                ],
                                "_links": {
                                    "self": {
                                        "href": "\/api\/tests\/1"
                                    },
                                    "questions": {
                                        "href": "\/api\/questions?test_id=1"
                                    }
                                },
                                "_embedded": {
                                    "name": [],
                                    "intro": [],
                                    "average_fill_time": null,
                                    "questions_count": 0
                                }
                            }
                        }
                    }
                ],
                "cute_test_fills": [
                    {
                        "id": 1,
                        "start": "2015-11-19T10:53:48+0100",
                        "end": "2015-11-19T11:03:54+0100",
                        "score_number": 10,
                        "redirect_url": "http:\/\/example.com\/",
                        "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                        "_embedded": {
                            "completed": true,
                            "state": "completed",
                            "result_description": "consistency_high",
                            "cute_test": {
                                "id": 2,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/cute-tests\/2"
                                    }
                                },
                                "_embedded": {
                                    "name": {
                                        "cs": "Měření kompetencí",
                                        "en": "Competencies"
                                    },
                                    "intro": {
                                        "en": "Lorem ipsum...",
                                        "cs": "Lorem ipsum..."
                                    },
                                    "result_type": "shapes"
                                }
                            }
                        }
                    },
                    {
                        "id": 3,
                        "start": "2015-11-19T10:53:48+0100",
                        "end": "2015-11-19T11:03:54+0100",
                        "score_number": 85,
                        "redirect_url": "http:\/\/example.com\/",
                        "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                        "_embedded": {
                            "completed": true,
                            "state": "completed",
                            "result_description": "percentile",
                            "cute_test": {
                                "id": 3,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/cute-tests\/3"
                                    }
                                },
                                "_embedded": {
                                    "name": {
                                        "cs": "Deduktivně-logické myšlení",
                                        "en": "Deductively-logical thinking"
                                    },
                                    "intro": {
                                        "en": "Lorem ipsum...",
                                        "cs": "Lorem ipsum..."
                                    },
                                    "result_type": "oi"
                                }
                            }
                        }
                    },
                    {
                        "id": 2,
                        "start": "2015-11-19T10:53:48+0100",
                        "redirect_url": "http:\/\/example.com\/",
                        "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                        "_embedded": {
                            "completed": true,
                            "state": "blocked",
                            "cute_test": {
                                "id": 1,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/cute-tests\/1"
                                    }
                                },
                                "_embedded": {
                                    "name": {
                                        "cs": "Logické myšlení",
                                        "en": "Logical thinking"
                                    },
                                    "intro": {
                                        "en": "Lorem ipsum...",
                                        "cs": "Lorem ipsum..."
                                    },
                                    "result_type": "oi"
                                }
                            }
                        }
                    },
                    {
                        "id": 12,
                        "start": "2015-11-19T10:53:48+0100",
                        "redirect_url": "http:\/\/example.com\/",
                        "test_url": "http:\/\/www.cut-e.net\/maptq\/ws\/ws_req.aspx?reqid=81C26FA4-6A5E-4DEC-9A69-700A5B5BF4B5",
                        "_embedded": {
                            "completed": false,
                            "state": "in_progress",
                            "cute_test": {
                                "id": 5,
                                "_links": {
                                    "self": {
                                        "href": "\/api\/cute-tests\/5"
                                    }
                                },
                                "_embedded": {
                                    "name": {
                                        "cs": "Cute Test 5",
                                        "en": "Cute Test 5"
                                    },
                                    "intro": {
                                        "en": "Lorem ipsum...",
                                        "cs": "Lorem ipsum..."
                                    },
                                    "result_type": "oi"
                                }
                            }
                        }
                    }
                ]
            }
        }

### Update User Profile [PUT]

Updates User Profile with given ID.

+ Request (application/json)

    + Attributes
        + profile_picture (string, optional) - Link to a profile picture image.
        + linkedin_link (string, optional) - Link to a profile on LinkedIn.
        + facebook_link (string, optional) - Link to a profile on Facebook.
        + twitter_link (string, optional) - Link to a profile on Twitter.
        + locality (string, optional) - Location of the User.
        + sign_on (string, optional) - When the user can sign on. The values are 'immediate', 'two-weeks', 'month', two-months', 'more-than-two-months'
        + required_salary (number, optional) - Required salary of the User.
        + looking_for_job (string, optional) - Is the User looking for a job? This field can have 4 values - 'yes', 'rather-yes', 'rather-no', 'no'
        + gender (string, optional) - Gender of the user. Can hold 3 values - 'male', 'female' and 'unspecified'
        + date_of_birth (string, optional) - Date of birth of the user.
        + description (string, optional) - Description of the User
        + web (string, optional) - Web address of the User
        + phone (string, optional) - Phone number of the User
        + city (string, optional) - Name of the city where the User lives
        + country (string, optional) - Name of the country where the User lives
        + postal_code (string, optional) - Postal code of the place where the User lives
        + education (string, optional) - Level of the User's education. Can be 'primary', 'secondary', 'post-secondary' or 'tertiary'.
        + job_category (number, optional) - Selected JobCategory

    + Body

            {
                "profile_picture": "http://example.com/abc/123",
                "linkedin_link": "https://linkedin.com/abc/123",
                "facebook_link": "https://linkedin.com/abc/123",
                "twitter_link": "https://linkedin.com/abc/123",
                "job_category": 1
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "profile_picture": "https:\/\/pictures.com\/abc\/123",
                "linkedin_link": "https:\/\/linkedin.com\/abc\/123",
                "facebook_link": "https:\/\/facebook.com\/abc\/123",
                "twitter_link": "https:\/\/twitter.com\/abc\/123",
                "created": "2016-03-11T15:41:45+0100",
                "_links": {
                    "self": {
                        "href": "\/api\/user-profiles\/1"
                    },
                    "user": {
                        "href": "\/api\/users?id=1"
                    }
                },
                "_embedded": {
                    "user": {
                        "id": 1,
                        "name": "John Doe",
                        "email": "john.doe@example.com",
                        "created": "2016-03-11T15:41:44+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/users\/1"
                            },
                            "language": {
                                "href": "\/api\/languages\/cs"
                            }
                        },
                        "_embedded": {
                            "language": {
                                "id": "cs",
                                "_links": {
                                    "self": {
                                        "href": "\/api\/languages\/cs"
                                    }
                                }
                            }
                        }
                    },
                    "test_fills": []
                }
            }
        }

# Group User Education Levels

## User Education Levels Collection [/api/user-education-levels]

### List User Education Levels [GET]

Lists all User Education Levels.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "user_education_levels": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/user-education-levels\/1"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Základní vzdělání",
                                "en": "Primary education"
                            },
                            "description": {
                                "cs": "Lorem ipsum...",
                                "en": "Lorem ipsum..."
                            }
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/user-education-levels\/2"
                            }
                        },
                        "_embedded": {
                            "title": {
                                "cs": "Středoškolské vzdělání",
                                "en": "Secondary education"
                            },
                            "description": {
                                "cs": "Lorem ipsum...",
                                "en": "Lorem ipsum..."
                            }
                        }
                    }
                ]
            }
        }

### Create User Education Level [POST]

Creates User Education Level with given parameters.

+ Request (application/json)

    + Attributes
        + title (object, required) - Title of the User Education Level
        + description (object, required) - Description of the User Education Level
        + tests (array, optional) - Array of Test IDs
        + cute_tests (array, optional) - Array of CuteTest IDs

    + Body

            {
                "title": {
                    "cs": "Základní vzdělání",
                    "en": "Primary education"
                },
                "description": {
                    "cs": "Lorem ipsum...",
                    "en": "Lorem ipsum..."
                },
                "tests": [1, 2],
                "cute_tests": [1, 2]
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 2,
                "_links": {
                    "self": {
                        "href": "\/api\/user-education-levels\/2"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Z\u00e1kladn\u00ed vzd\u011bl\u00e1n\u00ed",
                        "en": "Primary education"
                    },
                    "description": {
                        "cs": "Lorem ipsum",
                        "en": "Lorem ipsum"
                    },
                    "tests": [
                        {
                            "id": 1,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "shuffle_questions": true,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/1"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        },
                        {
                            "id": 2,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "shuffle_questions": true,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/2"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        }
                    ],
                    "cute_tests": [
                        {
                            "id": 1,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        },
                        {
                            "id": 2,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        }
                    ]
                }
            }
        }

## User Education Level [/api/user-education-levels/{id}]

+ Parameters
    + id (number, required) - ID of the User Education Level
+ Attributes
    + id (number, required) - ID of the User Education Level
    + embedded.title (object, required) - Title of the User Education Level
    + embedded.description (object, required) - Description of the User Education Level
    + embedded.tests (array, optional) - Array of Tests
    + embedded.cute_tests (array, optional) - Array of CuteTests

### Retrieve User Education Level [GET]

Retrieves User Education Level with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "_links": {
                "self": {
                    "href": "\/api\/user-education-levels\/1"
                }
            },
            "_embedded": {
                "title": {
                    "cs": "Z\u00e1kladn\u00ed vzd\u011bl\u00e1n\u00ed",
                    "en": "Primary education"
                },
                "description": {
                    "cs": "Lorem ipsum",
                    "en": "Lorem ipsum"
                },
                "tests": [
                    {
                        "id": 1,
                        "type": "question-per-page",
                        "number_of_questions": 2,
                        "maximum_time": 300,
                        "shuffle_questions": true,
                        "logo": "http:\/\/example.com\/test\/1",
                        "test_fills": [],
                        "_links": {
                            "self": {
                                "href": "\/api\/tests\/1"
                            },
                            "questions": {
                                "href": "\/api\/questions?test_id=1"
                            }
                        },
                        "_embedded": {
                            "name": [],
                            "intro": [],
                            "average_fill_time": null,
                            "questions_count": 0
                        }
                    },
                    {
                        "id": 2,
                        "type": "question-per-page",
                        "number_of_questions": 2,
                        "maximum_time": 300,
                        "shuffle_questions": true,
                        "logo": "http:\/\/example.com\/test\/1",
                        "test_fills": [],
                        "_links": {
                            "self": {
                                "href": "\/api\/tests\/2"
                            },
                            "questions": {
                                "href": "\/api\/questions?test_id=2"
                            }
                        },
                        "_embedded": {
                            "name": [],
                            "intro": [],
                            "average_fill_time": null,
                            "questions_count": 0
                        }
                    }
                ],
                "cute_tests": [
                    {
                        "id": 1,
                        "_links": {
                            "self": {
                                "href": "\/api\/cute-tests\/1"
                            }
                        },
                        "_embedded": {
                            "name": [],
                            "short_name": [],
                            "intro": []
                        }
                    },
                    {
                        "id": 2,
                        "_links": {
                            "self": {
                                "href": "\/api\/cute-tests\/2"
                            }
                        },
                        "_embedded": {
                            "name": [],
                            "short_name": [],
                            "intro": []
                        }
                    }
                ]
            }
        }

### Update User Education Level [POST]

Updates User Education Level with given ID.

+ Request (application/json)

    + Attributes
        + title (object, optional) - Title of the User Education Level
        + description (object, optional) - Description of the User Education Level
        + tests (array, optional) - Array of Test IDs
        + cute_tests (array, optional) - Array of CuteTest IDs

    + Body

            {
                "title": {
                    "cs": "Základní vzdělání",
                    "en": "Primary education"
                },
                "description": {
                    "cs": "Lorem ipsum...",
                    "en": "Lorem ipsum..."
                },
                "tests": [1, 2],
                "cute_tests": [1, 2]
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "_links": {
                    "self": {
                        "href": "\/api\/user-education-levels\/1"
                    }
                },
                "_embedded": {
                    "title": {
                        "cs": "Základní vzdělání",
                        "en": "Primary education"
                    },
                    "description": {
                        "cs": "Lorem ipsum...",
                        "en": "Lorem ipsum..."
                    },
                    "tests": [
                        {
                            "id": 1,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "shuffle_questions": true,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/1"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        },
                        {
                            "id": 2,
                            "type": "question-per-page",
                            "number_of_questions": 2,
                            "maximum_time": 300,
                            "shuffle_questions": true,
                            "logo": "http:\/\/example.com\/test\/1",
                            "test_fills": [],
                            "_links": {
                                "self": {
                                    "href": "\/api\/tests\/2"
                                },
                                "questions": {
                                    "href": "\/api\/questions?test_id=2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "intro": [],
                                "average_fill_time": null,
                                "questions_count": 0
                            }
                        }
                    ],
                    "cute_tests": [
                        {
                            "id": 1,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/1"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        },
                        {
                            "id": 2,
                            "_links": {
                                "self": {
                                    "href": "\/api\/cute-tests\/2"
                                }
                            },
                            "_embedded": {
                                "name": [],
                                "short_name": [],
                                "intro": []
                            }
                        }
                    ]
                }
            }
        }

### Delete User Education Level [DELETE]

Deletes User Education Level with given ID.

+ Response 200 (application/hal+json)

        {"ok": true}

# Group User Settings

You can set the following User Settings:
+ `mail-frequency` - Frequency of email updates
    + `daily` - Daily updates (default)
    + `weekly` - Weekly updates
    + `never` - No email updates
+ `admin-mail-frequency` - Frequency od Admin email updates
    + `immediately` - Immediate updates (default)
    + `daily` - Daily updates
    + `never` - No email updates
+ `newsletter-hiri-news` - Newsletter about Hiri news
    + `true` - On (default)
    + `false` - Off
+ `newsletter-personalized-job-offers` - Newsletter with personalized list of job offers
    + `true` - On (default)
    + `false` - Off
+ `newsletter-test-news` - Newsletter about knowledge and Cut-e tests
    + `true` - On (default)
    + `false` - Off

## User Settings Collection [/api/user-settings]

### Retrieve User's Settings [GET]

Retrieves all User's Settings which are currently saved.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "user_settings": [
                    {
                        "id": "mail-frequency",
                        "value": "daily",
                        "_links": {
                            "self": {
                                "href": "\/api\/user-settings\/mail-frequency"
                            }
                        }
                    }
                ]
            }
        }

## User Settings [/api/user-settings/{id}]

+ Parameters
    + id (string, required) - Unique id of the User Settings.

+ Attributes
    + id (string, required) - Unique id of the User Settings.
    + value (string, required) - Value of the User Settings.
    + embedded.user (object, required) - User to which the Settings belong.

### Retrieve User Settings [GET]

Retrieves User's Settings with the given ID.

+ Response 200 (application/hal+json)

        {
            "id": "mail-frequency",
            "value": "daily",
            "_links": {
                "self": {
                    "href": "\/api\/user-settings\/mail-frequency"
                }
            }
        }

### Update User Settings [PUT]

Updates or creates User Settings with given ID and value.

+ Request (application/json)

        {
            "value": "weekly"
        }

+ Response 200 (application/json)

        {
            "ok": true,
            "updated": {
                "id": "mail-frequency",
                "value": "weekly",
                "allowed_settings": {
                    "mail-frequency": [
                        "daily",
                        "weekly",
                        "never"
                    ]
                },
                "_links": {
                    "self": {
                        "href": "\/api\/user-settings\/mail-frequency"
                    }
                }
            }
        }

# Group User Educations

## User Educations Collection [/api/user-educations?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User Educations [GET]

Lists User Educations for User Profile with given ID.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "user_educations": [
                    {
                        "id": 1,
                        "school_name": "ČVUT v Praze",
                        "field": "Softwarové technologie a management",
                        "since": "2013",
                        "to": "2016",
                        "description": "Bachelor degree"
                    },
                    {
                        "id": 2,
                        "school_name": "Gymnázium Jírovcova 8, Ceské Budějovice",
                        "field": "Obecné gymnázium",
                        "since": "2008",
                        "to": "2012",
                        "description": "Ukončeno maturitou"
                    }
                ]
            }
        }

### Create User Education [POST]

Creates User Education with given parameters.

+ Request (application/json)

    + Attributes
        + user_profile (number, required) - ID of the User Profile
        + school_name (string, required) - Name of the School
        + field (string, required) - Field of study
        + since (string, optional) - Date when the education started, can be null.
        + to (string, optional) - Date when the education ended, can be in future or null.
        + description (string, optional) - Description of the Education.

    + Body

            {
                "user_profile": 1,
                "school_name": "ČVUT v Praze",
                "field": "Softwarové technologie a management",
                "since": "2013",
                "to": "2016",
                "description": "Bachelor degree"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 1,
                "school_name": "ČVUT v Praze",
                "field": "Softwarové technologie a management",
                "since": "2013",
                "to": "2016",
                "description": "Bachelor degree"
            }
        }


## User Profile's User Educations Collection [/api/user-profiles/{user_profile_id}/user-educations?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_profile_id (number, required) - ID of the User Profile.
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"


### List User Profile's User Educations [GET]

Lists User Educations for User Profile with given ID.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "user_educations": [
                    {
                        "id": 1,
                        "school_name": "ČVUT v Praze",
                        "field": "Softwarové technologie a management",
                        "since": "2013",
                        "to": "2016",
                        "description": "Bachelor degree"
                    },
                    {
                        "id": 2,
                        "school_name": "Gymnázium Jírovcova 8, Ceské Budějovice",
                        "field": "Obecné gymnázium",
                        "since": "2008",
                        "to": "2012",
                        "description": "Ukončeno maturitou"
                    }
                ]
            }
        }

## User Education [/api/user-educations/{id}]

+ Attributes
    + id (number, required) - ID of the User Education.
    + school_name (string, required) - Name of the School
    + field (string, required) - Field of study
    + since (string, optional) - Date when the education started, can be null.
    + to (string, optional) - Date when the education ended, can be in future or null.
    + description (string, optional) - Description of the Education.

+ Parameters
    + id (number, required) - ID of the User Education.

### Retrieve User Education [GET]

Retrieves User Education with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "school_name": "ČVUT v Praze",
            "field": "Softwarové technologie a management",
            "since": "2013",
            "to": "2016",
            "description": "Bachelor degree"
        }

### Update User Education [PUT]

Updates User Education with given ID.

+ Request (application/json)

    + Attributes
        + school_name (string, required) - Name of the School
        + field (string, required) - Field of study
        + since (string, optional) - Date when the education started, can be null.
        + to (string, optional) - Date when the education ended, can be in future or null.
        + description (string, optional) - Description of the Education.

    + Body

            {
                "school_name": "ČVUT v Praze",
                "field": "Softwarové technologie a management",
                "since": "2013",
                "to": "2016",
                "description": "Bachelor degree"
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "school_name": "FEL \u010cVUT",
                "field": "Software technologies and management",
                "since": "2015-03-01T00:00:00+0100",
                "to": "2016-03-01T00:00:00+0100",
                "description": "Lorem Ipsum",
                "created": "2016-03-01T20:26:41+0100",
                "_links": {
                    "self": {
                        "href": "\/api\/user-educations\/1"
                    },
                    "user_profile": {
                        "href": "\/api\/user-profiles?id=1"
                    }
                },
                "_embedded": {
                    "user_profile": {
                        "id": 1,
                        "linkedin_link": "https:\/\/linkedin.com\/abc\/123",
                        "facebook_link": "https:\/\/facebook.com\/abc\/123",
                        "twitter_link": "https:\/\/twitter.com\/abc\/123",
                        "created": "2016-03-01T20:26:41+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/user-profiles\/1"
                            },
                            "user": {
                                "href": "\/api\/users?id=1"
                            }
                        }
                    }
                }
            }
        }

### Delete User Education [DELETE]

Soflty delets User Education.

+ Response 200 (application/hal+json)

        {
            "ok": true
        }

# Group User Work Experiences

## User Work Experiences Collection [/api/user-work-experiences?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"

### List User Work Experiences [GET]

Lists User Educations for User Profile with given ID.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "user_work_experiences": [
                    {
                        "id": 1,
                        "company_name": "StartupJobs.cz",
                        "position": "PHP Programmer",
                        "since": "2013-11",
                        "to": null,
                        "description": "Developing a Job Portal for Startups"
                    },
                    {
                        "id": 2,
                        "company_name": "Hiri.cz",
                        "position": "Lead PHP Programmer",
                        "since": "2014-10",
                        "to": null,
                        "description": "Developing a Job Portal and Unique Testing tool"
                    }
                ]
            }
        }

### Create User Work Experience [POST]

Creates User Education with given parameters.

+ Request (application/json)

    + Attributes
        + user_profile (number, required) - ID of the User Profile
        + company_name (string, required) - Name of the Company
        + position (string, required) - Position in the Company
        + since (string, optional) - Date when the experience started, can be null.
        + to (string, optional) - Date when the experience ended, can be in future or null.
        + description (string, optional) - Description of the Work Experience.

    + Body

            {
                "user_profile": 1,
                "company_name": "StartupJobs.cz",
                "position": "PHP Programmer",
                "since": "2013-11",
                "to": null,
                "description": "Developing a Job Portal for Startups"
            }

+ Response 201 (application/hal+json)

        {
            "ok": true,
            "inserted": {
                "id": 1,
                "company_name": "StartupJobs.cz",
                "position": "PHP Programmer",
                "since": "2013-11",
                "to": null,
                "description": "Developing a Job Portal for Startups"
            }
        }



## User Profile's User Work Experiences Collection [/api/user-profiles/{user_profile_id}/user-work-experiences?limit={limit}&page={page}&sort={sort}]

+ Parameters
    + user_profile_id (number, required) - ID of the User Profile.
    + limit (number, optional) - Limits number of candidates returned in the request
    + page (number, optional) - Distance from beginning of the array of available candidates
    + sort (string, optional) - Sorts the result in the given order. The format for sort is "column+ASC,column+DESC"


### List User Profile's User Work Experiences [GET]

Lists User Educations for User Profile with given ID.

+ Response 200 (application/hal+json)

        {
            "_embedded": {
                "user_work_experiences": [
                    {
                        "id": 1,
                        "company_name": "StartupJobs.cz",
                        "position": "PHP Programmer",
                        "since": "2013-11",
                        "to": null,
                        "description": "Developing a Job Portal for Startups"
                    },
                    {
                        "id": 2,
                        "company_name": "Hiri.cz",
                        "position": "Lead PHP Programmer",
                        "since": "2014-10",
                        "to": null,
                        "description": "Developing a Job Portal and Unique Testing tool"
                    }
                ]
            }
        }

## User Work Experience [/api/user-work-experiences/{id}]

+ Attributes
    + id (number, required) - ID of the User Work Experience.
    + company_name (string, required) - Name of the Company
    + position (string, required) - Position in the Company
    + since (string, optional) - Date when the experience started, can be null.
    + to (string, optional) - Date when the experience ended, can be in future or null.
    + description (string, optional) - Description of the Work Experience.

+ Parameters
    + id (number, required) - ID of the User Education.

### Retrieve User Work Experience [GET]

Retrieves User Education with given ID.

+ Response 200 (application/hal+json)

        {
            "id": 1,
            "company_name": "StartupJobs.cz",
            "position": "PHP Programmer",
            "since": "2013-11",
            "to": null,
            "description": "Developing a Job Portal"
        }

### Update User Work Experience [PUT]

Updates User Work Experience.

+ Request (application/json)

    + Attributes
        + company_name (string, required) - Name of the Company
        + position (string, required) - Position in the Company
        + since (string, optional) - Date when the experience started, can be null.
        + to (string, optional) - Date when the experience ended, can be in future or null.
        + description (string, optional) - Description of the Work Experience.

    + Body

            {
                "company_name": "StartupJobs.cz",
                "position": "PHP Programmer",
                "since": "2013-11",
                "to": null,
                "description": "Developing a Job Portal for Startups"
            }

+ Response 200 (application/hal+json)

        {
            "ok": true,
            "updated": {
                "id": 1,
                "company_name": "Hiri",
                "position": "Lead developer",
                "since": "2015-03-01T00:00:00+0100",
                "to": "2016-03-01T00:00:00+0100",
                "description": "Lorem Ipsum",
                "created": "2016-03-01T18:13:11+0100",
                "_links": {
                    "self": {
                        "href": "\/api\/user-work-experiences\/1"
                    },
                    "user_profile": {
                        "href": "\/api\/user-profiles?id=1"
                    }
                },
                "_embedded": {
                    "user_profile": {
                        "id": 1,
                        "linkedin_link": "https:\/\/linkedin.com\/abc\/123",
                        "facebook_link": "https:\/\/facebook.com\/abc\/123",
                        "twitter_link": "https:\/\/twitter.com\/abc\/123",
                        "created": "2016-03-01T18:13:11+0100",
                        "_links": {
                            "self": {
                                "href": "\/api\/user-profiles\/1"
                            },
                            "user": {
                                "href": "\/api\/users?id=1"
                            }
                        }
                    }
                }
            }
        }

### Delete User Work Experience [DELETE]

Softly deletes User Work Experience.

+ Response 200 (application/hal+json)

        {
            "ok": true
        }

# Data Structures


## ContactPerson (object)

+ Attributes
    + name (string, required) - Name of the Person
    + email (string, required) - Email of the Person
    + phone (string, required) - Phone of the Person

## OrderItem (object)

+ Attributes
    + product (number, required) - ID of the Product
    + amount (number, required) - amount of the Product

## JobOfferBudget (object)

+ Attributes
    + price_per_c_v (number, required) - Price per one CV
    + total_budget (number, required) - Total budget
    + currency (string, required) - ID of the currency for the budgets